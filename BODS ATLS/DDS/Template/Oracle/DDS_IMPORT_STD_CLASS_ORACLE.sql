CREATE OR REPLACE PROCEDURE DDS_IMPORT_STD_CLASS
( 
 v_P_JOBID IN NUMBER DEFAULT NULL , 
 v_P_DBNAME IN VARCHAR2 DEFAULT NULL , 
 v_P_USER_ID IN NUMBER DEFAULT NULL 
)AUTHID CURRENT_USER 
AS 
 
 V_V_JOBID NUMBER := v_P_JOBID; 
 v_CheckCreateNewCodes NUMBER(5,0); 
 v_CONFIG_ID NUMBER(5,0); 
 v_Valid_Start_Date VARCHAR2(8); 
 v_Valid_End_Date VARCHAR2(8); 
 v_V_DA_ROW_ID NUMBER(10,0); 
 v_V_INVALID_ROW NUMBER(10,0); 
 v_V_CLASS_NAME VARCHAR2(20); 
 v_V_CLASS_DESC VARCHAR2(50); 
 v_V_PLAN_NUMBER VARCHAR2(20); 
 v_V_ELIG_BENE_PRD NUMBER(10,0); 
 v_V_BENE_PRD_TYPE VARCHAR2(25); 
 v_V_BENE_FROM_DT_TYPE VARCHAR2(25); 
 v_V_DIS_WAIT_PRD NUMBER(10,0); 
 v_V_DIS_CLNDR_WRK_TYPE VARCHAR2(25); 
 v_V_DIS_PRD_TYPE VARCHAR2(25); 
 v_V_DIS_MAX_PRD NUMBER(10,0); 
 v_V_DIS_MAX_PRD_TYPE VARCHAR2(25); 
 v_V_FROM_DIS_PRD_TYPE VARCHAR2(25); 
 v_V_ALLOW_EXT VARCHAR2(1); 
 v_V_EXTEND_PRD NUMBER(10,0); 
 v_V_EXTEND_PRD_TYPE VARCHAR2(25); 
 v_V_MAX_TOT_DIS_PRD NUMBER(10,0); 
 v_V_MAX_TOT_PRD_TYPE VARCHAR2(25); 
 v_V_ACTUAL_WORK_WEEK_FLAG VARCHAR2(1); 
 v_V_DAY7_WORK_WEEK_FLAG VARCHAR2(1); 
 v_V_DAY5_WORK_WEEK_FLAG VARCHAR2(1); 
 v_V_OTHER_WORK_WEEK_FLAG VARCHAR2(1); 
 v_V_OTHER_DAYS NUMBER(10,0); 
 v_V_BENE_PRCTG_FLAG VARCHAR2(1); 
 v_V_BENE_PER_AMT NUMBER(20,2); 
 v_V_BENE_FLAT_AMT_FLAG VARCHAR2(1); 
 v_V_BENE_FLAT_AMT NUMBER(20,2); 
 v_V_BENE_TD_FLAG VARCHAR2(1); 
 v_V_BENE_BASED_TYPE VARCHAR2(25); 
 v_V_WITHHOLD_FED_ITAX_FLAG VARCHAR2(1); 
 v_V_WITHHOLD_FICA_FLAG VARCHAR2(1); 
 v_V_WEEKLY_BENE_CAP NUMBER(20,2); 
 v_V_MAX_BEN_PER_CLAIM NUMBER(20,2); 
 v_V_MAX_BEN_PER_CAL_YR NUMBER(20,2); 
 v_V_WAGE_FOR_DIS_PRD NUMBER(20,2); 
 v_V_WAGE_FOR_CAL_YR NUMBER(20,2); 
 v_V_TAXABLE_PERCENT NUMBER(20,2); 
 v_V_WITHHOLD_MEDICARE_FLAG VARCHAR2(1); 
 v_V_WITHHOLD_STATE_FLAG VARCHAR2(1); 
 v_V_USE_VOUCHERS_FLAG VARCHAR2(1); 
 v_V_ALT_WAIT_DIS_TYPE VARCHAR2(207); 
 v_V_ALT_WAIT_DIS_TYPE_1 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_TYPE_2 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_TYPE_3 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_TYPE_4 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_TYPE_5 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_TYPE_6 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_TYPE_7 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_TYPE_8 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_PRD VARCHAR2(39); 
 v_V_ALT_WAIT_DIS_PRD_VAL NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_VAL_1 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_VAL_2 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_VAL_3 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_VAL_4 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_VAL_5 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_VAL_6 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_VAL_7 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_VAL_8 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CLNDR_WRK_TYP VARCHAR2(207); 
 v_V_ALT_WAIT_DIS_CLNDR_WRK_TY1 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_CLNDR_WRK_TY2 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_CLNDR_WRK_TY3 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_CLNDR_WRK_TY4 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_CLNDR_WRK_TY5 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_CLNDR_WRK_TY6 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_CLNDR_WRK_TY7 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_CLNDR_WRK_TY8 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_PRD_TYPE VARCHAR2(207); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_1 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_2 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_3 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_4 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_5 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_6 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_7 VARCHAR2(25); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_8 VARCHAR2(25); 
 v_V_WAGES_FROM VARCHAR2(175); 
 v_V_WAGES_FROM_1 NUMBER(20,2); 
 v_V_WAGES_FROM_2 NUMBER(20,2); 
 v_V_WAGES_FROM_3 NUMBER(20,2); 
 v_V_WAGES_FROM_4 NUMBER(20,2); 
 v_V_WAGES_FROM_5 NUMBER(20,2); 
 v_V_WAGES_FROM_6 NUMBER(20,2); 
 v_V_WAGES_FROM_7 NUMBER(20,2); 
 v_V_WAGES_FROM_8 NUMBER(20,2); 
 v_V_WAGES_TO VARCHAR2(175); 
 v_V_WAGES_TO_1 NUMBER(20,2); 
 v_V_WAGES_TO_2 NUMBER(20,2); 
 v_V_WAGES_TO_3 NUMBER(20,2); 
 v_V_WAGES_TO_4 NUMBER(20,2); 
 v_V_WAGES_TO_5 NUMBER(20,2); 
 v_V_WAGES_TO_6 NUMBER(20,2); 
 v_V_WAGES_TO_7 NUMBER(20,2); 
 v_V_WAGES_TO_8 NUMBER(20,2); 
 v_V_WEEKLY_BENEFIT VARCHAR2(175); 
 v_V_WEEKLY_BENEFIT_1 NUMBER(20,2); 
 v_V_WEEKLY_BENEFIT_2 NUMBER(20,2); 
 v_V_WEEKLY_BENEFIT_3 NUMBER(20,2); 
 v_V_WEEKLY_BENEFIT_4 NUMBER(20,2); 
 v_V_WEEKLY_BENEFIT_5 NUMBER(20,2); 
 v_V_WEEKLY_BENEFIT_6 NUMBER(20,2); 
 v_V_WEEKLY_BENEFIT_7 NUMBER(20,2); 
 v_V_WEEKLY_BENEFIT_8 NUMBER(20,2); 
 v_V_DAY30_WORK_MONTH_FLAG VARCHAR2(1); 
 v_V_ACTUAL_MONTH_FLAG VARCHAR2(1); 
 v_V_UPPER_AGE_LIMIT NUMBER(10,0); 
 v_V_LOWER_AGE_LIMIT NUMBER(10,0); 
 v_V_SUPP_PERCENT NUMBER(20,2); 
 v_V_SUPP_FLAT_AMT NUMBER(20,2); 
 v_V_SUPP_BANK_ACC_NAME VARCHAR2(50); 
 v_V_SUPP_SUB_ACC_NAME VARCHAR2(50); 
 v_V_SUPP_TR_TYPE_CODE VARCHAR2(25); 
 v_V_SUPP_SEP_PAY_FLAG VARCHAR2(1); 
 v_V_PENSION_AMT NUMBER(20,2); 
 v_V_SS_AMT NUMBER(20,2); 
 v_V_OTHER_AMT NUMBER(20,2); 
 v_V_PRORATE_OFF_FLAG VARCHAR2(1); 
 v_V_FULLPAY_ONLY_FLAG VARCHAR2(1); 
 v_V_BENE_PRD_TYPE_ID NUMBER(10,0); 
 v_V_BENE_FROM_DT_TYPE_ID NUMBER(10,0); 
 v_V_DIS_CLNDR_WRK_TYPE_ID NUMBER(10,0); 
 v_V_DIS_PRD_TYPE_ID NUMBER(10,0); 
 v_V_DIS_MAX_PRD_TYPE_ID NUMBER(10,0); 
 v_V_FROM_DIS_PRD_TYPE_ID NUMBER(10,0); 
 v_V_EXTEND_PRD_TYPE_ID NUMBER(10,0); 
 v_V_MAX_TOT_PRD_TYPE_ID NUMBER(10,0); 
 v_V_BENE_BASED_TYPE_ID NUMBER(10,0); 
 v_V_SUPP_TR_TYPE_CODE_ID NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_TYPE_ID_1 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_TYPE_ID_2 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_TYPE_ID_3 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_TYPE_ID_4 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_TYPE_ID_5 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_TYPE_ID_6 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_TYPE_ID_7 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_TYPE_ID_8 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY1 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY2 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY3 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY4 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY5 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY6 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY7 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY8 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_1 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_2 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_3 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_4 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_5 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_6 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_7 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_8 NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_TYPE_ID NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY NUMBER(10,0); 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID NUMBER(10,0); 
 v_V_ALLOW_EXT_FLAG_ID NUMBER(10,0); 
 v_V_ACTUAL_WORK_WEEK_FLAG_ID NUMBER(10,0); 
 v_V_DAY7_WORK_WEEK_FLAG_ID NUMBER(10,0); 
 v_V_DAY5_WORK_WEEK_FLAG_ID NUMBER(10,0); 
 v_V_OTHER_WORK_WEEK_FLAG_ID NUMBER(10,0); 
 v_V_BENE_PRCTG_FLAG_ID NUMBER(10,0); 
 v_V_BENE_FLAT_AMT_FLAG_ID NUMBER(10,0); 
 v_V_BENE_TD_FLAG_ID NUMBER(10,0); 
 v_V_WITHHOLD_FED_ITAX_FLAG_ID NUMBER(10,0); 
 v_V_WITHHOLD_FICA_FLAG_ID NUMBER(10,0); 
 v_V_WITHHOLD_MEDICARE_FLAG_ID NUMBER(10,0); 
 v_V_WITHHOLD_STATE_FLAG_ID NUMBER(10,0); 
 v_V_USE_VOUCHERS_FLAG_ID NUMBER(10,0); 
 v_V_DAY30_WORK_MONTH_FLAG_ID NUMBER(10,0); 
 v_V_ACTUAL_MONTH_FLAG_ID NUMBER(10,0); 
 v_V_SUPP_SEP_PAY_FLAG_ID NUMBER(10,0); 
 v_V_PRORATE_OFF_FLAG_ID NUMBER(10,0); 
 v_V_FULLPAY_ONLY_FLAG_ID NUMBER(10,0); 
 v_V_ERRORLOC VARCHAR2(20); 
 v_V_CLASSROW_ID NUMBER(10,0):=0; 
 v_V_PLAN_ID NUMBER(10,0); 
 v_V_TAXFLAGS NUMBER(10,0); 
 v_V_DIS_TYPE_ID NUMBER(10,0); 
 v_V_INSERTPLANINFO NUMBER(10,0) := 0; 
 v_V_EMP_PERSON NUMBER(10,0):= 0; 
 v_V_TABLE_ID NUMBER(10,0) := 0; 
 v_V_ROW_ID NUMBER(10,0) := 0; 
 v_V_ROWCOUNT NUMBER(10,0) := 0; 
 v_V_CODE_ID_R NUMBER(10,0) := 0; 
 v_V_CODE_ID_RMDB NUMBER(10,0):= 0; 
 v_V_MODULENAME VARCHAR2(100) := 'STD_CLASS'; 
 v_V_DBNAME VARCHAR2(255); 
 v_V_SQL VARCHAR2(32000); 
 v_V_PROCNAME VARCHAR2(30) := 'DDS_IMPORT_STD_CLASS'; 
 v_V_TABLE_NAME VARCHAR2(30) :='DDS_STD_CLASS'; 
 v_V_ERRORCOUNT NUMBER(10,0) :=0; 
 v_V_ENTITY_ID NUMBER(10,0) :=0; 
 v_V_DEPT_ID NUMBER(10,0) :=0; 
 v_V_ENTITY_TABLE_ID NUMBER(10,0) :=0; 
 v_V_ABBREVIATION VARCHAR2(25) := NULL; 
 v_V_DELETED_FLAG NUMBER(10,0) :=0; 
 v_V_SYS_TABLE_NAME VARCHAR2(30) := null; 
 v_VSQLINSERT VARCHAR2(32000); 
 v_VSQLUPDATE VARCHAR2(32000); 
 v_V_DATETIME VARCHAR2(14); 
 v_V_ERROR_MESSAGE VARCHAR2(4000); 
 v_V_CODEFIELDS VARCHAR2(4000); 
 v_V_SYSTEMTABLENAME VARCHAR2(4000); 
 v_V_TABLENAME VARCHAR2(30); 
 v_V_SUPP_ERROR_COUNT NUMBER(10,0); 
 v_V_BANK_ACC_ID NUMBER(10,0); 
 v_V_SUB_ACC_ROW_ID NUMBER(10,0); 
 v_vReqColumns VARCHAR2(4000); 
 v_vReqColumns1 VARCHAR2(4000); 
 v_vReqColumns2 VARCHAR2(4000); 
 v_vReqColumns3 VARCHAR2(4000); 
 v_ILEN NUMBER(10,0); 
 v_vColName1 VARCHAR2(100); 
 v_vColName2 VARCHAR2(100); 
 v_vColName3 VARCHAR2(100); 
 v_vColName4 VARCHAR2(100); 
 v_V_VAL VARCHAR2(32000); 
 v_V_INSURED_EID_RMDB NUMBER(10,0); 
 v_V_NEWINSURED NUMBER(10,0); 
 v_V_CHECK_DIS_CLASS_WAIT NUMBER(10,0); 
 v_V_CHECK_DIS_CLASS_TD NUMBER(10,0); 
 v_V_FLAG_ID NUMBER(10,0); 
 v_V_CLAIM_LOB NUMBER(10,0); 
 v_V_CLASS_ROW_ID NUMBER(10,0); 
 v_V_NEWCLASS NUMBER(10,0); 
 v_V_WAIT_ROW_ID NUMBER(10,0); 
 v_V_WAGES_FROM_VAL NUMBER(20,2); 
 v_V_WAGES_TO_VAL NUMBER(20,2); 
 v_V_WEEKLY_BENEFIT_VAL NUMBER(20,2); 
 v_V_TD_ROW_ID NUMBER(10,0); 
  ---neha 33658 -- START 
  v_iRunStatCnt    NUMBER(10, 0):=1;  
  v_iRunCnt        NUMBER(10, 0):=1;  
  v_vProcessMsg    varchar2(4000); 
  v_iCount         NUMBER(10, 0) := 0; 
  ---neha 33658 -- end
 CURSOR DDS_STD_CLASS_CUR IS SELECT * FROM DDS_STD_CLASS WHERE JOBID = v_P_JOBID AND INVALID_ROW = 1; 
 
 BEGIN 
 BEGIN 
 BEGIN 
 ---- FETCHING VALUES FROM DDS_OPTIONSET 
 ------------------------- FOR SQL db name has to be suffixed by dbo ----------------------------------------- 
 IF v_P_DBName IS NOT NULL THEN 
 v_V_DBNAME := v_P_DBNAME || '.'; 
 END IF; 
 ----------------------------- Storing Values into Optionset variables --------------------------------------- 
 
 v_V_ERRORLOC := 'Z001'; 
      
      BEGIN --Neha Running status starts 33658
      SELECT COUNT(DA_ROW_ID) INTO v_iCount FROM DDS_STD_CLASS WHERE JOBID = v_P_JOBID AND INVALID_ROW=1; 
           exception
             when no_data_found then
             null; 
      END; --Neha Running status ends 33658
 
 v_V_SQL := 'SELECT ALLOW_NEW_CODES, CONFIG_ID, VALID_START_DATE, '; 
 v_V_SQL := v_V_SQL || 'VALID_END_DATE '; 
 v_V_SQL := v_V_SQL || 'FROM DDS_OPTIONSET WHERE JOBID = :1'; 
 
 BEGIN 
 EXECUTE IMMEDIATE V_V_SQL INTO 
 v_CheckCreateNewCodes, 
 v_CONFIG_ID, 
 v_Valid_Start_Date, 
 v_Valid_End_Date USING 
 v_P_JOBID ; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 v_Valid_Start_Date:=NULL; 
 END; 
 
 IF v_Valid_Start_Date IS NULL THEN 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 'Please select Valid Date Range from Optionset screen.', 
 'JOB_ID', 
 'DDS_OPTIONSET', 
 'JOB_ID', 
 v_P_JOBID, 
 1); 
 
 GOTO NEXTRECORD; 
 END IF; 
 EXCEPTION 
 WHEN OTHERS THEN 
 v_V_ERROR_MESSAGE:= SQLERRM; 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 v_V_ERROR_MESSAGE, 
 'EXCEPTION', 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 0); 
 
 v_V_ROWCOUNT := v_V_ROWCOUNT + 1; 
 END; 
 
 ----------------------------- Fetching PLAN Records For Validation---------------------------------------------------- 
 v_V_ERRORLOC := 'Z003'; 
 
 OPEN DDS_STD_CLASS_CUR;---- OPENING CURSOR 
 LOOP 
 FETCH DDS_STD_CLASS_CUR INTO v_V_DA_ROW_ID,v_V_JOBID,v_V_INVALID_ROW,v_V_CLASS_NAME,v_V_CLASS_DESC,v_V_PLAN_NUMBER,v_V_ELIG_BENE_PRD,v_V_BENE_PRD_TYPE,v_V_BENE_FROM_DT_TYPE,v_V_DIS_WAIT_PRD,v_V_DIS_CLNDR_WRK_TYPE,v_V_DIS_PRD_TYPE,v_V_DIS_MAX_PRD,v_V_DIS_MAX_PRD_TYPE,v_V_FROM_DIS_PRD_TYPE,v_V_ALLOW_EXT,v_V_EXTEND_PRD,v_V_EXTEND_PRD_TYPE,v_V_MAX_TOT_DIS_PRD,v_V_MAX_TOT_PRD_TYPE,v_V_ACTUAL_WORK_WEEK_FLAG,v_V_DAY7_WORK_WEEK_FLAG,v_V_DAY5_WORK_WEEK_FLAG,v_V_OTHER_WORK_WEEK_FLAG,v_V_OTHER_DAYS,v_V_BENE_PRCTG_FLAG,v_V_BENE_PER_AMT,v_V_BENE_FLAT_AMT_FLAG,v_V_BENE_FLAT_AMT,v_V_BENE_TD_FLAG,v_V_BENE_BASED_TYPE,v_V_WITHHOLD_FED_ITAX_FLAG,v_V_WITHHOLD_FICA_FLAG,v_V_WEEKLY_BENE_CAP,v_V_MAX_BEN_PER_CLAIM,v_V_MAX_BEN_PER_CAL_YR,v_V_WAGE_FOR_DIS_PRD,v_V_WAGE_FOR_CAL_YR,v_V_TAXABLE_PERCENT,v_V_WITHHOLD_MEDICARE_FLAG,v_V_WITHHOLD_STATE_FLAG,v_V_USE_VOUCHERS_FLAG,v_V_ALT_WAIT_DIS_TYPE,v_V_ALT_WAIT_DIS_TYPE_1,v_V_ALT_WAIT_DIS_TYPE_2,v_V_ALT_WAIT_DIS_TYPE_3,v_V_ALT_WAIT_DIS_TYPE_4,v_V_ALT_WAIT_DIS_TYPE_5,v_V_ALT_WAIT_DIS_TYPE_6,v_V_ALT_WAIT_DIS_TYPE_7,v_V_ALT_WAIT_DIS_TYPE_8,v_V_ALT_WAIT_DIS_PRD,v_V_ALT_WAIT_DIS_PRD_VAL_1,v_V_ALT_WAIT_DIS_PRD_VAL_2,v_V_ALT_WAIT_DIS_PRD_VAL_3,v_V_ALT_WAIT_DIS_PRD_VAL_4,v_V_ALT_WAIT_DIS_PRD_VAL_5,v_V_ALT_WAIT_DIS_PRD_VAL_6,v_V_ALT_WAIT_DIS_PRD_VAL_7,v_V_ALT_WAIT_DIS_PRD_VAL_8,v_V_ALT_WAIT_DIS_CLNDR_WRK_TYP,v_V_ALT_WAIT_DIS_CLNDR_WRK_TY1,v_V_ALT_WAIT_DIS_CLNDR_WRK_TY2,v_V_ALT_WAIT_DIS_CLNDR_WRK_TY3,v_V_ALT_WAIT_DIS_CLNDR_WRK_TY4,v_V_ALT_WAIT_DIS_CLNDR_WRK_TY5,v_V_ALT_WAIT_DIS_CLNDR_WRK_TY6,v_V_ALT_WAIT_DIS_CLNDR_WRK_TY7,v_V_ALT_WAIT_DIS_CLNDR_WRK_TY8,v_V_ALT_WAIT_DIS_PRD_TYPE,v_V_ALT_WAIT_DIS_PRD_TYPE_1,v_V_ALT_WAIT_DIS_PRD_TYPE_2,v_V_ALT_WAIT_DIS_PRD_TYPE_3,v_V_ALT_WAIT_DIS_PRD_TYPE_4,v_V_ALT_WAIT_DIS_PRD_TYPE_5,v_V_ALT_WAIT_DIS_PRD_TYPE_6,v_V_ALT_WAIT_DIS_PRD_TYPE_7,v_V_ALT_WAIT_DIS_PRD_TYPE_8,v_V_WAGES_FROM,v_V_WAGES_FROM_1,v_V_WAGES_FROM_2,v_V_WAGES_FROM_3,v_V_WAGES_FROM_4,v_V_WAGES_FROM_5,v_V_WAGES_FROM_6,v_V_WAGES_FROM_7,v_V_WAGES_FROM_8,v_V_WAGES_TO,v_V_WAGES_TO_1,v_V_WAGES_TO_2,v_V_WAGES_TO_3,v_V_WAGES_TO_4,v_V_WAGES_TO_5,v_V_WAGES_TO_6,v_V_WAGES_TO_7,v_V_WAGES_TO_8,v_V_WEEKLY_BENEFIT,v_V_WEEKLY_BENEFIT_1,v_V_WEEKLY_BENEFIT_2,v_V_WEEKLY_BENEFIT_3,v_V_WEEKLY_BENEFIT_4,v_V_WEEKLY_BENEFIT_5,v_V_WEEKLY_BENEFIT_6,v_V_WEEKLY_BENEFIT_7,v_V_WEEKLY_BENEFIT_8,v_V_DAY30_WORK_MONTH_FLAG,v_V_ACTUAL_MONTH_FLAG,v_V_UPPER_AGE_LIMIT,v_V_LOWER_AGE_LIMIT,v_V_SUPP_PERCENT,v_V_SUPP_FLAT_AMT,v_V_SUPP_BANK_ACC_NAME,v_V_SUPP_SUB_ACC_NAME,v_V_SUPP_TR_TYPE_CODE,v_V_SUPP_SEP_PAY_FLAG,v_V_PENSION_AMT,v_V_SS_AMT,v_V_OTHER_AMT,v_V_PRORATE_OFF_FLAG,v_V_FULLPAY_ONLY_FLAG; 
 EXIT WHEN DDS_STD_CLASS_CUR%NOTFOUND; 
 BEGIN 
 ----************** INITIALIZATION OF VARIABLES ****************** 
 v_V_ERRORLOC := 0; 
 v_V_CLASSROW_ID := 0; 
 v_V_PLAN_ID := 0; 
 v_V_TAXFLAGS := 0; 
 v_V_DIS_TYPE_ID := 0; 
 v_V_INSERTPLANINFO := 0; 
 v_V_EMP_PERSON := 0; 
 v_V_TABLE_ID := 0; 
 v_V_ROW_ID := 0; 
 v_V_ROWCOUNT := 0; 
 v_V_CODE_ID_R := 0; 
 v_V_CODE_ID_RMDB := 0; 
 v_V_ERRORCOUNT := 0; 
 v_V_ENTITY_ID := 0; 
 v_V_DEPT_ID := 0; 
 v_V_ENTITY_TABLE_ID := 0; 
 v_V_ABBREVIATION := 0; 
 v_V_DELETED_FLAG := 0; 
 v_V_SYS_TABLE_NAME := 0; 
 v_V_DATETIME := 0; 
 v_V_SUPP_ERROR_COUNT := 0; 
 v_vColName1 := NULL; 
 v_vReqColumns := NULL; 
 v_vReqColumns2 := NULL; 
 v_vReqColumns3 := NULL; 
 v_vColName2 := NULL; 
 v_vColName3 := NULL; 
 v_vColName4 := NULL; 
 v_vReqColumns1 := NULL; 
 v_V_INSURED_EID_RMDB := 0; 
 v_V_NEWINSURED := 0; 
 v_V_CHECK_DIS_CLASS_WAIT := 0; 
 v_V_CHECK_DIS_CLASS_TD := 0; 
 v_V_FLAG_ID := 0; 
 v_V_ALT_WAIT_DIS_PRD_VAL := 0; 
 v_V_WAGES_FROM_VAL := 0; 
 v_V_WAGES_TO_VAL := 0; 
 v_V_WEEKLY_BENEFIT_VAL := 0; 
 v_V_ALT_WAIT_DIS_TYPE_ID_1 := 0; 
 v_V_ALT_WAIT_DIS_TYPE_ID_2 := 0; 
 v_V_ALT_WAIT_DIS_TYPE_ID_3 := 0; 
 v_V_ALT_WAIT_DIS_TYPE_ID_4 := 0; 
 v_V_ALT_WAIT_DIS_TYPE_ID_5 := 0; 
 v_V_ALT_WAIT_DIS_TYPE_ID_6 := 0; 
 v_V_ALT_WAIT_DIS_TYPE_ID_7 := 0; 
 v_V_ALT_WAIT_DIS_TYPE_ID_8 := 0; 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY1 := 0; 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY2 := 0; 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY3 := 0; 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY4 := 0; 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY5 := 0; 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY6 := 0; 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY7 := 0; 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY8 := 0; 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_1 := 0; 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_2 := 0; 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_3 := 0; 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_4 := 0; 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_5 := 0; 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_6 := 0; 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_7 := 0; 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_8 := 0; 
 v_V_CLASS_ROW_ID := 0; 
 BEGIN 
 --********* REQUIRED FIELD VALIDATION STARTS ********************************************** 
 v_V_ERRORLOC := 'V001'; 
 v_vReqColumns := 'PLAN_NUMBER|CLASS_NAME|'; 
 
 WHILE INSTR(v_vReqColumns, '|', 1) > 0--CHECK FOR REQUIRED COLUMNS NULL IN IMPORT FILE 
 LOOP 
 
 v_vColName1 := SUBSTR(v_vReqColumns, 0, INSTR(v_vReqColumns, '|', 1) - 1); 
 v_vReqColumns := SUBSTR(v_vReqColumns,LENGTH(SUBSTR(v_vReqColumns,1,INSTR(v_vReqColumns, '|', 1)))+1,LENGTH(v_vReqColumns)); 
 
 
 v_V_VAL := (CASE 
 WHEN v_vColName1 = 'PLAN_NUMBER' THEN v_V_PLAN_NUMBER 
 WHEN v_vColName1 = 'CLASS_NAME' THEN v_V_CLASS_NAME END); 
 
 IF v_V_VAL IS NULL THEN 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 'Required Fields are Null or Empty.', 
 v_vColName1, 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 1); 
 
 v_V_ERRORCOUNT := v_V_ERRORCOUNT + 1; 
 END IF; 
 END LOOP; 
 EXCEPTION 
 WHEN OTHERS THEN 
 v_V_ERROR_MESSAGE := SQLERRM; 
 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 v_V_ERROR_MESSAGE, 
 'EXCEPTION', 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 0); 
 
 v_V_ROWCOUNT := v_V_ROWCOUNT + 1; 
 END; 
 
 BEGIN 
 BEGIN 
 --***************** REQUIRED FIELD VALIDATION ENDS ****************************************** 
 ----***************** SHORT CODE FIELDS VALIDATION STARTS ********************************* 
 v_V_ERRORLOC := 'V002'; 
 
 v_V_CODEFIELDS := 'BENE_PRD_TYPE|BENE_FROM_DT_TYPE|DIS_CLNDR_WRK_TYPE|DIS_PRD_TYPE|DIS_MAX_PRD_TYPE|FROM_DIS_PRD_TYPE|EXTEND_PRD_TYPE|MAX_TOT_PRD_TYPE|BENE_BASED_TYPE|SUPP_TR_TYPE_CODE|'; 
 v_V_CODEFIELDS := v_V_CODEFIELDS || 'ALT_WAIT_DIS_TYPE_1|ALT_WAIT_DIS_TYPE_2|ALT_WAIT_DIS_TYPE_3|ALT_WAIT_DIS_TYPE_4|ALT_WAIT_DIS_TYPE_5|ALT_WAIT_DIS_TYPE_6|ALT_WAIT_DIS_TYPE_7|ALT_WAIT_DIS_TYPE_8|'; 
 v_V_CODEFIELDS := v_V_CODEFIELDS || 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_1|ALT_WAIT_DIS_CLNDR_WRK_TYPE_2|ALT_WAIT_DIS_CLNDR_WRK_TYPE_3|ALT_WAIT_DIS_CLNDR_WRK_TYPE_4|ALT_WAIT_DIS_CLNDR_WRK_TYPE_5|ALT_WAIT_DIS_CLNDR_WRK_TYPE_6|ALT_WAIT_DIS_CLNDR_WRK_TYPE_7|ALT_WAIT_DIS_CLNDR_WRK_TYPE_8|'; 
 v_V_CODEFIELDS := v_V_CODEFIELDS || 'ALT_WAIT_DIS_PRD_TYPE_1|ALT_WAIT_DIS_PRD_TYPE_2|ALT_WAIT_DIS_PRD_TYPE_3|ALT_WAIT_DIS_PRD_TYPE_4|ALT_WAIT_DIS_PRD_TYPE_5|ALT_WAIT_DIS_PRD_TYPE_6|ALT_WAIT_DIS_PRD_TYPE_7|ALT_WAIT_DIS_PRD_TYPE_8|'; 
 v_V_SYSTEMTABLENAME := 'DURATION_TYPE|HIRED_PERIOD_TYPE|CALENDAR_WORK|DURATION_TYPE|DURATION_TYPE|BENE_START_PERIOD|DURATION_TYPE|DURATION_TYPE|RATE_TYPE|TRANS_TYPES|'; 
 v_V_SYSTEMTABLENAME := v_V_SYSTEMTABLENAME || 'BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|'; 
 v_V_SYSTEMTABLENAME := v_V_SYSTEMTABLENAME || 'CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|'; 
 v_V_SYSTEMTABLENAME := v_V_SYSTEMTABLENAME || 'DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|'; 
 
 WHILE INSTR(v_V_CODEFIELDS, '|', 1) > 0--CHECK FOR CODE ID EXISTENCE AND THEIR CREATIONS 
 LOOP 
 BEGIN 
 v_vColName1 := SUBSTR(v_V_CODEFIELDS, 0, INSTR(v_V_CODEFIELDS, '|', 1) - 1); 
 v_V_CODEFIELDS := SUBSTR(v_V_CODEFIELDS,LENGTH(SUBSTR(v_V_CODEFIELDS,1,INSTR(v_V_CODEFIELDS, '|', 1)))+1,LENGTH(v_V_CODEFIELDS)); 
 
 v_V_TABLENAME := SUBSTR(v_V_SYSTEMTABLENAME, 0, INSTR(v_V_SYSTEMTABLENAME, '|', 1) - 1); 
 v_V_SYSTEMTABLENAME := SUBSTR(v_V_SYSTEMTABLENAME,LENGTH(SUBSTR(v_V_SYSTEMTABLENAME,1,INSTR(v_V_SYSTEMTABLENAME, '|', 1)))+1,LENGTH(v_V_SYSTEMTABLENAME)); 
 
 
 v_V_VAL := (CASE 
 WHEN v_VCOLNAME1 = 'BENE_PRD_TYPE' THEN v_V_BENE_PRD_TYPE 
 WHEN v_VCOLNAME1 = 'BENE_FROM_DT_TYPE' THEN v_V_BENE_FROM_DT_TYPE 
 WHEN v_VCOLNAME1 = 'DIS_CLNDR_WRK_TYPE' THEN v_V_DIS_CLNDR_WRK_TYPE 
 WHEN v_VCOLNAME1 = 'DIS_PRD_TYPE' THEN v_V_DIS_PRD_TYPE 
 WHEN v_VCOLNAME1 = 'DIS_MAX_PRD_TYPE' THEN v_V_DIS_MAX_PRD_TYPE 
 WHEN v_VCOLNAME1 = 'FROM_DIS_PRD_TYPE' THEN v_V_FROM_DIS_PRD_TYPE 
 WHEN v_VCOLNAME1 = 'EXTEND_PRD_TYPE' THEN v_V_EXTEND_PRD_TYPE 
 WHEN v_VCOLNAME1 = 'MAX_TOT_PRD_TYPE' THEN v_V_MAX_TOT_PRD_TYPE 
 WHEN v_VCOLNAME1 = 'BENE_BASED_TYPE' THEN v_V_BENE_BASED_TYPE 
 WHEN v_VCOLNAME1 = 'SUPP_TR_TYPE_CODE' THEN v_V_SUPP_TR_TYPE_CODE 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_1' THEN v_V_ALT_WAIT_DIS_TYPE_1 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_2' THEN v_V_ALT_WAIT_DIS_TYPE_2 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_3' THEN v_V_ALT_WAIT_DIS_TYPE_3 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_4' THEN v_V_ALT_WAIT_DIS_TYPE_4 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_5' THEN v_V_ALT_WAIT_DIS_TYPE_5 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_6' THEN v_V_ALT_WAIT_DIS_TYPE_6 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_7' THEN v_V_ALT_WAIT_DIS_TYPE_7 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_8' THEN v_V_ALT_WAIT_DIS_TYPE_8 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_1' THEN v_V_ALT_WAIT_DIS_CLNDR_WRK_TY1 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_2' THEN v_V_ALT_WAIT_DIS_CLNDR_WRK_TY2 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_3' THEN v_V_ALT_WAIT_DIS_CLNDR_WRK_TY3 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_4' THEN v_V_ALT_WAIT_DIS_CLNDR_WRK_TY4 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_5' THEN v_V_ALT_WAIT_DIS_CLNDR_WRK_TY5 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_6' THEN v_V_ALT_WAIT_DIS_CLNDR_WRK_TY6 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_7' THEN v_V_ALT_WAIT_DIS_CLNDR_WRK_TY7 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_8' THEN v_V_ALT_WAIT_DIS_CLNDR_WRK_TY8 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_1' THEN v_V_ALT_WAIT_DIS_PRD_TYPE_1 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_2' THEN v_V_ALT_WAIT_DIS_PRD_TYPE_2 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_3' THEN v_V_ALT_WAIT_DIS_PRD_TYPE_3 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_4' THEN v_V_ALT_WAIT_DIS_PRD_TYPE_4 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_5' THEN v_V_ALT_WAIT_DIS_PRD_TYPE_5 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_6' THEN v_V_ALT_WAIT_DIS_PRD_TYPE_6 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_7' THEN v_V_ALT_WAIT_DIS_PRD_TYPE_7 
 WHEN v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_8' THEN v_V_ALT_WAIT_DIS_PRD_TYPE_8 END); 
 
 ----PRINT 'CODE CHECK BEGINS' 
 ----PRINT @V_VAL 
 IF v_V_VAL IS NOT NULL THEN 
 BEGIN 
 ----PRINT 'CODE CHECK BEGINS2' 
 DDS_CODE_VALIDATION_IMPORT(v_P_JOBID, 
 v_V_VAL, 
 v_V_TABLENAME, 
 v_CheckCreateNewCodes, 
 v_V_DBNAME, 
 v_V_CLAIM_LOB, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 'PLAN_NUMBER', 
 v_VCOLNAME1, 
 v_V_TABLE_NAME, 
 v_V_PLAN_NUMBER, 
 v_V_CODE_ID_R); 
 
 IF v_V_CODE_ID_R = 0 OR v_V_CODE_ID_R IS NULL THEN 
 v_V_ERRORCOUNT := v_V_ERRORCOUNT + 1; 
 END IF; 
 
 IF v_VCOLNAME1 = 'BENE_PRD_TYPE' THEN 
 v_V_BENE_PRD_TYPE_ID := v_V_CODE_ID_R; 
 ELSE 
 IF v_VCOLNAME1 = 'BENE_FROM_DT_TYPE' THEN 
 v_V_BENE_FROM_DT_TYPE_ID := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'DIS_CLNDR_WRK_TYPE' THEN 
 v_V_DIS_CLNDR_WRK_TYPE_ID := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'DIS_PRD_TYPE' THEN 
 v_V_DIS_PRD_TYPE_ID := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'DIS_MAX_PRD_TYPE' THEN 
 v_V_DIS_MAX_PRD_TYPE_ID := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'FROM_DIS_PRD_TYPE' THEN 
 v_V_FROM_DIS_PRD_TYPE_ID := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'EXTEND_PRD_TYPE' THEN 
 v_V_EXTEND_PRD_TYPE_ID := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'MAX_TOT_PRD_TYPE' THEN 
 v_V_MAX_TOT_PRD_TYPE_ID := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'BENE_BASED_TYPE' THEN 
 v_V_BENE_BASED_TYPE_ID := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'SUPP_TR_TYPE_CODE' THEN 
 v_V_SUPP_TR_TYPE_CODE_ID := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_1' THEN 
 v_V_ALT_WAIT_DIS_TYPE_ID_1 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_2' THEN 
 v_V_ALT_WAIT_DIS_TYPE_ID_2 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_3' THEN 
 v_V_ALT_WAIT_DIS_TYPE_ID_3 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_4' THEN 
 v_V_ALT_WAIT_DIS_TYPE_ID_4 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_5' THEN 
 v_V_ALT_WAIT_DIS_TYPE_ID_5 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_6' THEN 
 v_V_ALT_WAIT_DIS_TYPE_ID_6 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_7' THEN 
 v_V_ALT_WAIT_DIS_TYPE_ID_7 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_8' THEN 
 v_V_ALT_WAIT_DIS_TYPE_ID_8 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_1' THEN 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY1 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_2' THEN 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY2 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_3' THEN 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY3 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_4' THEN 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY4 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_5' THEN 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY5 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_6' THEN 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY6 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_7' THEN 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY7 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_8' THEN 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY8 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_1' THEN 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_1 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_2' THEN 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_2 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_3' THEN 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_3 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_4' THEN 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_4 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_5' THEN 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_5 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_6' THEN 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_6 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_7' THEN 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_7 := v_V_CODE_ID_R; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_8' THEN 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID_8 := v_V_CODE_ID_R; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 v_V_CODE_ID_R := NULL; 
 
 END; 
 END IF; 
 
 END; 
 END LOOP; 
 
 END; 
 EXCEPTION 
 WHEN OTHERS THEN 
 v_V_ERROR_MESSAGE := SQLERRM; 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 v_V_ERROR_MESSAGE, 
 'EXCEPTION', 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 0); 
 
 v_V_ROWCOUNT := v_V_ROWCOUNT + 1; 
 END; 
 
 BEGIN 
 BEGIN 
 ----***************** SHORT CODE FIELDS VALIDATION ENDS ******************************************* 
 ----***************** FLAG INITIALIZATION STARTS ****************************************** 
 v_V_ERRORLOC := 'V003'; 
 
 v_vReqColumns := 'ACTUAL_WORK_WEEK_FLAG|DAY7_WORK_WEEK_FLAG|DAY5_WORK_WEEK_FLAG|OTHER_WORK_WEEK_FLAG|BENE_PRCTG_FLAG|'; 
 v_vReqColumns := v_vReqColumns || 'BENE_FLAT_AMT_FLAG|BENE_TD_FLAG|WITHHOLD_FED_ITAX_FLAG|WITHHOLD_FICA_FLAG|WITHHOLD_MEDICARE_FLAG|'; 
 v_vReqColumns := v_vReqColumns || 'WITHHOLD_STATE_FLAG|USE_VOUCHERS_FLAG|DAY30_WORK_MONTH_FLAG|ACTUAL_MONTH_FLAG|SUPP_SEP_PAY_FLAG|'; 
 v_vReqColumns := v_vReqColumns || 'PRORATE_OFF_FLAG|FULLPAY_ONLY_FLAG|ALLOW_EXT|'; 
 
 WHILE INSTR(v_vReqColumns, '|', 1) > 0 
 LOOP 
 BEGIN 
 v_vColName1 := SUBSTR(v_vReqColumns, 0, INSTR(v_vReqColumns, '|', 1) - 1); 
 v_vReqColumns := SUBSTR(v_vReqColumns,LENGTH(SUBSTR(v_vReqColumns,1,INSTR(v_vReqColumns, '|', 1)))+1,LENGTH(v_vReqColumns)); 
 
 
 v_V_FLAG_ID := 0; 
 v_V_VAL := NULL; 
 
 v_V_VAL := (CASE 
 WHEN v_vColName1 = 'ACTUAL_WORK_WEEK_FLAG' THEN v_V_ACTUAL_WORK_WEEK_FLAG 
 WHEN v_vColName1 = 'DAY7_WORK_WEEK_FLAG' THEN v_V_DAY7_WORK_WEEK_FLAG 
 WHEN v_vColName1 = 'DAY5_WORK_WEEK_FLAG' THEN v_V_DAY5_WORK_WEEK_FLAG 
 WHEN v_vColName1 = 'OTHER_WORK_WEEK_FLAG' THEN v_V_OTHER_WORK_WEEK_FLAG 
 WHEN v_vColName1 = 'BENE_PRCTG_FLAG' THEN v_V_BENE_PRCTG_FLAG 
 WHEN v_vColName1 = 'BENE_FLAT_AMT_FLAG' THEN v_V_BENE_FLAT_AMT_FLAG 
 WHEN v_vColName1 = 'BENE_TD_FLAG' THEN v_V_BENE_TD_FLAG 
 WHEN v_vColName1 = 'WITHHOLD_FED_ITAX_FLAG' THEN v_V_WITHHOLD_FED_ITAX_FLAG 
 WHEN v_vColName1 = 'WITHHOLD_FICA_FLAG' THEN v_V_WITHHOLD_FICA_FLAG 
 WHEN v_vColName1 = 'WITHHOLD_MEDICARE_FLAG' THEN v_V_WITHHOLD_MEDICARE_FLAG 
 WHEN v_vColName1 = 'WITHHOLD_STATE_FLAG' THEN v_V_WITHHOLD_STATE_FLAG 
 WHEN v_vColName1 = 'USE_VOUCHERS_FLAG' THEN v_V_USE_VOUCHERS_FLAG 
 WHEN v_vColName1 = 'DAY30_WORK_MONTH_FLAG' THEN v_V_DAY30_WORK_MONTH_FLAG 
 WHEN v_vColName1 = 'ACTUAL_MONTH_FLAG' THEN v_V_ACTUAL_MONTH_FLAG 
 WHEN v_vColName1 = 'SUPP_SEP_PAY_FLAG' THEN v_V_SUPP_SEP_PAY_FLAG 
 WHEN v_vColName1 = 'PRORATE_OFF_FLAG' THEN v_V_PRORATE_OFF_FLAG 
 WHEN v_vColName1 = 'FULLPAY_ONLY_FLAG' THEN v_V_FULLPAY_ONLY_FLAG 
 WHEN v_vColName1 = 'ALLOW_EXT' THEN v_V_ALLOW_EXT END); 
 
 IF v_V_VAL IS NOT NULL THEN 
 IF UPPER(v_V_VAL) = 'Y' THEN 
 v_V_FLAG_ID := -1; 
 
 ELSE 
 IF UPPER(v_V_VAL) = 'N' OR UPPER(v_V_VAL) = '0' THEN---BY DEFAULT FLAG WILL BE 0 
 v_V_FLAG_ID := 0; 
 ELSE 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 'Not a Valid Flag Value. Permitted Values are ''Y'' or ''N'' or ''0''.', 
 v_vColName1, 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 1); 
 
 v_V_ERRORCOUNT := v_V_ERRORCOUNT + 1; 
 END IF; 
 END IF; 
 END IF; 
 
 IF v_VCOLNAME1 = 'ACTUAL_WORK_WEEK_FLAG' THEN 
 v_V_ACTUAL_WORK_WEEK_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'DAY7_WORK_WEEK_FLAG' THEN 
 v_V_DAY7_WORK_WEEK_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'DAY5_WORK_WEEK_FLAG' THEN 
 v_V_DAY5_WORK_WEEK_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'OTHER_WORK_WEEK_FLAG' THEN 
 v_V_OTHER_WORK_WEEK_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'BENE_PRCTG_FLAG' THEN 
 v_V_BENE_PRCTG_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'BENE_FLAT_AMT_FLAG' THEN 
 v_V_BENE_FLAT_AMT_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'BENE_TD_FLAG' THEN 
 v_V_BENE_TD_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'WITHHOLD_FED_ITAX_FLAG' THEN 
 v_V_WITHHOLD_FED_ITAX_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'WITHHOLD_FICA_FLAG' THEN 
 v_V_WITHHOLD_FICA_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'WITHHOLD_MEDICARE_FLAG' THEN 
 v_V_WITHHOLD_MEDICARE_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'WITHHOLD_STATE_FLAG' THEN 
 v_V_WITHHOLD_STATE_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'USE_VOUCHERS_FLAG' THEN 
 v_V_USE_VOUCHERS_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'DAY30_WORK_MONTH_FLAG' THEN 
 v_V_DAY30_WORK_MONTH_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ACTUAL_MONTH_FLAG' THEN 
 v_V_ACTUAL_MONTH_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'SUPP_SEP_PAY_FLAG' THEN 
 v_V_SUPP_SEP_PAY_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'PRORATE_OFF_FLAG' THEN 
 v_V_PRORATE_OFF_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'FULLPAY_ONLY_FLAG' THEN 
 v_V_FULLPAY_ONLY_FLAG_ID := v_V_FLAG_ID; 
 
 ELSE 
 IF v_VCOLNAME1 = 'ALLOW_EXT' THEN 
 v_V_ALLOW_EXT_FLAG_ID := v_V_FLAG_ID; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END; 
 END LOOP; 
 
 END; 
 EXCEPTION 
 WHEN OTHERS THEN 
 v_V_ERROR_MESSAGE := SQLERRM; 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 v_V_ERROR_MESSAGE, 
 'EXCEPTION', 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 0); 
 
 v_V_ROWCOUNT := v_V_ROWCOUNT + 1; 
 END; 
 
 --***************** FLAG INITIALIZATION ENDS ***************************************************** 
 --********************************** ERROR COUNT ******************************************************************************************* 
 v_V_ERRORLOC := 'V004'; 
 
 IF v_V_ERRORCOUNT + v_V_ROWCOUNT > 0 THEN 
 v_V_INVALID_ROW := 1; 
 
 ELSE 
 IF ( v_V_ERRORCOUNT + v_V_ROWCOUNT = 0 ) THEN 
 v_V_INVALID_ROW := 0; 
 
 END IF; 
 
 END IF; 
 
 BEGIN 
 BEGIN 
 --********************************** ERROR COUNT ****************************************************************************************** 
 ---**************** CHECK IF AN EXISTING PLAN OR A NEW PLAN ******************************************************************* 
 IF v_V_PLAN_NUMBER IS NOT NULL AND v_V_INVALID_ROW = 0 THEN 
 BEGIN 
 v_V_ERRORLOC := 'P001'; 
 v_V_SQL := 'SELECT PLAN_ID FROM ' || v_V_DBNAME || 'DISABILITY_PLAN WHERE PLAN_NUMBER = :1'; 
 
 BEGIN 
 EXECUTE IMMEDIATE V_V_SQL INTO v_V_PLAN_ID USING v_V_PLAN_NUMBER; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 v_V_PLAN_ID:=0; 
 END; 
 
 IF v_V_PLAN_ID > 0 THEN 
 v_V_ERRORLOC := 'P002'; 
 
 v_V_SQL := 'SELECT CLASS_ROW_ID FROM ' || v_V_DBNAME || 'DISABILITY_CLASS WHERE PLAN_ID = :1 AND CLASS_NAME = :2'; 
 
 BEGIN 
 EXECUTE IMMEDIATE V_V_SQL INTO v_V_CLASS_ROW_ID USING v_V_PLAN_ID, v_V_CLASS_NAME; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 v_V_CLASS_ROW_ID:=0; 
 END; 
 
 IF v_V_CLASS_ROW_ID > 0 THEN 
 v_V_NEWCLASS := 0;--CLASS EXIST IN RISKMASTER DATABASE 
 ELSE 
 IF v_V_CLASS_ROW_ID = 0 THEN 
 v_V_NEWCLASS := 1;--CLASS EXIST IN RISKMASTER DATABASE 
 END IF; 
 END IF; 
 ELSE 
 IF v_V_PLAN_ID = 0 THEN 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 'Disability Plan Number does not exists in Riskmaster.', 
 'PLAN_NUMBER', 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 1); 
 
 v_V_ERRORCOUNT := v_V_ERRORCOUNT + 1; 
 END IF; 
 
 END IF; 
 
 IF v_V_SUPP_BANK_ACC_NAME IS NOT NULL THEN 
 v_V_ERRORLOC := 'P003'; 
 v_V_BANK_ACC_ID := 0; 
 
 v_V_SQL := 'SELECT ACCOUNT_ID FROM ' || v_V_DBNAME || 'ACCOUNT WHERE ACCOUNT_NAME = :1'; 
 
 BEGIN 
 EXECUTE IMMEDIATE V_V_SQL INTO v_V_BANK_ACC_ID USING v_V_SUPP_BANK_ACC_NAME; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 v_V_BANK_ACC_ID:=0; 
 END; 
 
 END IF; 
 
 IF v_V_SUPP_SUB_ACC_NAME IS NOT NULL THEN 
 v_V_ERRORLOC := 'P004'; 
 
 v_V_SUB_ACC_ROW_ID := 0; 
 
 v_V_SQL := 'SELECT SUB_ROW_ID FROM ' || v_V_DBNAME || 'BANK_ACC_SUB WHERE SUB_ACC_NAME = :1'; 
 
 BEGIN 
 EXECUTE IMMEDIATE V_V_SQL INTO v_V_SUB_ACC_ROW_ID USING v_V_SUPP_BANK_ACC_NAME; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 v_V_SUB_ACC_ROW_ID:=0; 
 END; 
 
 END IF; 
 
 v_V_ERRORLOC := 'P005'; 
 
 v_vReqColumns := v_V_ALT_WAIT_DIS_TYPE; 
 v_vReqColumns1 := v_V_ALT_WAIT_DIS_PRD; 
 v_vReqColumns2 := v_V_ALT_WAIT_DIS_CLNDR_WRK_TYP; 
 v_vReqColumns3 := v_V_ALT_WAIT_DIS_PRD_TYPE; 
  
 IF v_vReqColumns IS NOT NULL THEN  
 v_vReqColumns := v_vReqColumns || '|'; 
 END IF; 
  
 IF v_vReqColumns1 IS NOT NULL THEN  
 v_vReqColumns1 := v_vReqColumns1 || '|'; 
 END IF; 
  
 IF v_vReqColumns2 IS NOT NULL THEN  
 v_vReqColumns2 := v_vReqColumns2 || '|'; 
 END IF; 
  
 IF v_vReqColumns3 IS NOT NULL THEN  
 v_vReqColumns3 := v_vReqColumns3 || '|'; 
 END IF; 
 
 IF (LENGTH(v_vReqColumns) - LENGTH(REPLACE(v_vReqColumns, '|', ''))) = (LENGTH(v_vReqColumns1) - LENGTH(REPLACE(v_vReqColumns1, '|', ''))) 
 AND (LENGTH(v_vReqColumns1) - LENGTH(REPLACE(v_vReqColumns1, '|', ''))) = (LENGTH(v_vReqColumns2) - LENGTH(REPLACE(v_vReqColumns2, '|', ''))) 
 AND (LENGTH(v_vReqColumns2) - LENGTH(REPLACE(v_vReqColumns2, '|', ''))) = (LENGTH(v_vReqColumns3) - LENGTH(REPLACE(v_vReqColumns3, '|', '')))  
 AND v_vReqColumns IS NOT NULL AND v_vReqColumns1 IS NOT NULL AND v_vReqColumns2 IS NOT NULL AND v_vReqColumns3 IS NOT NULL THEN 
  
 v_V_CHECK_DIS_CLASS_WAIT := (LENGTH(v_vReqColumns) - LENGTH(REPLACE(v_vReqColumns, '|', ''))); 
 
 ELSE IF v_vReqColumns IS NOT NULL AND v_vReqColumns1 IS NOT NULL AND v_vReqColumns2 IS NOT NULL AND v_vReqColumns3 IS NOT NULL THEN 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 'Numbers of components of ALT DIS CLASS WAIT fields does not match.', 
 'ALT_WAIT_DIS_TYPE,ALT_WAIT_DIS_PRD,ALT_WAIT_DIS_CLNDR_WRK_TYPE,ALT_WAIT_DIS_PRD_TYPE', 
 v_V_TABLE_NAME, 
 'CLASS_NUMBER', 
 v_V_CLASS_NAME, 
 1); 
 
 v_V_ERRORCOUNT := v_V_ERRORCOUNT + 1; 
 END IF; 
 END IF; 
 
 v_V_ERRORLOC := 'P006'; 
 v_vReqColumns := v_V_WAGES_FROM; 
 v_vReqColumns1 := v_V_WAGES_TO; 
 v_vReqColumns2 := v_V_WEEKLY_BENEFIT; 
 
 IF v_vReqColumns IS NOT NULL THEN  
 v_vReqColumns := v_vReqColumns || '|'; 
 END IF; 
  
 IF v_vReqColumns1 IS NOT NULL THEN  
 v_vReqColumns1 := v_vReqColumns1 || '|'; 
 END IF; 
  
 IF v_vReqColumns2 IS NOT NULL THEN  
 v_vReqColumns2 := v_vReqColumns2 || '|'; 
 END IF; 
  
 
 IF (LENGTH(v_vReqColumns) - LENGTH(REPLACE(v_vReqColumns, '|', ''))) = (LENGTH(v_vReqColumns1) - LENGTH(REPLACE(v_vReqColumns1, '|', ''))) 
 AND (LENGTH(v_vReqColumns1) - LENGTH(REPLACE(v_vReqColumns1, '|', ''))) = (LENGTH(v_vReqColumns2) - LENGTH(REPLACE(v_vReqColumns2, '|', '')))  
 AND v_vReqColumns IS NOT NULL AND v_vReqColumns1 IS NOT NULL AND v_vReqColumns2 IS NOT NULL THEN 
 
 v_V_CHECK_DIS_CLASS_TD := (LENGTH(v_vReqColumns) - LENGTH(REPLACE(v_vReqColumns, '|', ''))); 
 ELSE IF v_vReqColumns IS NOT NULL AND v_vReqColumns1 IS NOT NULL AND v_vReqColumns2 IS NOT NULL THEN 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 'Numbers of components of ALT DIS CLASS TD fields does not match.', 
 'WAGES_FROM,WAGES_TO,WEEKLY_BENEFIT', 
 v_V_TABLE_NAME, 
 'CLASS_NUMBER', 
 v_V_CLASS_NAME, 
 1); 
 
 v_V_ERRORCOUNT := v_V_ERRORCOUNT + 1; 
 END IF; 
 END IF; 
 
 END; 
 END IF; 
 
 END; 
 EXCEPTION 
 WHEN OTHERS THEN 
 v_V_ERROR_MESSAGE := SQLERRM; 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 v_V_ERROR_MESSAGE, 
 'EXCEPTION', 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 0); 
 
 v_V_ROWCOUNT := v_V_ROWCOUNT + 1; 
 
 END; 
 
 ----------************************** CHECK IF AN EXISTING PLAN OR A NEW PLAN ENDS ********************************************************** 
 ----**************************************************************************************************************************************** 
 IF v_V_INVALID_ROW = 0 THEN---- NO VALIDATION ERRORS ARE THERE 
 
 ---- BEGIN INVALID ROW 0 
 
 v_V_ERRORLOC := 'P007'; 
 
 IF v_V_ROWCOUNT + v_V_ERRORCOUNT > 0 THEN 
 v_V_INVALID_ROW := 1; 
 
 ELSE 
 IF v_V_ROWCOUNT + v_V_ERRORCOUNT = 0 THEN 
 v_V_INVALID_ROW := 0; 
 
 END IF; 
 
 END IF; 
 END IF; 
 
 BEGIN 
 BEGIN 
 -------- END INVALID ROW 0 
 ----**************************************************************************************************************************************** 
 ----**************************************************************************************************************************************** 
 ------------INSERT WORK STARTS 
 IF v_V_INVALID_ROW = 0 THEN 
 BEGIN----BEGIN LEVEL INSERT/UPDATE 
 
 v_V_ERRORLOC := 'INS01'; 
 
 v_V_DATETIME := TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS');--REPLACE(REPLACE(REPLACE(sqlserver_utilities.convert_('VARCHAR2(19)', SYSDATE, 120), '-', ''), ':', ''), ' ', ''); 
 
 IF v_V_NEWCLASS = 1 THEN 
 v_V_ERRORLOC := 'INS02'; 
 
 v_VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || v_V_DBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1'; 
 
 BEGIN 
 EXECUTE IMMEDIATE V_VSQLINSERT INTO v_V_CLASS_ROW_ID USING 'DISABILITY_CLASS'; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 v_V_CLASS_ROW_ID:=1; 
 END; 
 
 v_V_ERRORLOC := 'INS03'; 
 
 v_V_SQL := 'INSERT INTO ' || v_V_DBNAME || 'DISABILITY_CLASS(CLASS_ROW_ID,PLAN_ID, 
 CLASS_NAME, CLASS_DESC, ELIG_BENE_PRD, BENE_PRD_TYPE, BENE_FROM_DT_TYPE, DIS_WAIT_PRD, DIS_CLNDR_WRK_CODE, 
 DIS_PRD_TYPE, DIS_MAX_PRD, DIS_MAX_PRD_TYPE, FROM_DIS_PRD_TYPE, ALLOW_EXT, EXTEND_PRD, EXTEND_PRD_TYPE, MAX_TOT_DIS_PRD, 
 MAX_TOT_PRD_TYPE, ACTUAL_WORK_WEEK, DAY7_WORK_WEEK, DAY5_WORK_WEEK, OTHER_WORK_WEEK, OTHER_DAYS, BENE_PRCTG_FLAG, BENE_PER_AMT, 
 BENE_FLAT_AMT_FLAG, BENE_FLAT_AMT, BENE_TD_FLAG, BENE_BASED_CODE, WITHHOLD_FED_ITAX, WITHHOLD_FICA, WEEKLY_BENE_CAP, MAX_BEN_PER_CLAIM, 
 MAX_BEN_PER_CAL_YR, WAGE_FOR_DIS_PRD, WAGE_FOR_CAL_YR, TAXABLE_PERCENT, WITHHOLD_MEDICARE, WITHHOLD_STATE, USE_VOUCHERS, 
 DAY30_WORK_MONTH,ACTUAL_MONTH, UPPER_AGE_LIMIT, LOWER_AGE_LIMIT, SUPP_PERCENT, SUPP_FLAT_AMT, SUPP_BANK_ACC_ID, 
 SUPP_SUB_ACC_ID, SUPP_TR_TYPE_CODE,SUPP_SEP_PAY_FLAG, PENSION_AMT, SS_AMT, OTHER_AMT, PRORATE_OFF_FLAG, FULLPAY_ONLY_FLAG )'; 
 
 v_V_SQL := v_V_SQL || ' VALUES(:1, :2,:3, :4, :5, :6, :7, :8, :9,:10, :11, :12, :13, :14, 
 :15, :16, :17,:18, :19, :20, :21, :22, :23, :24, :25, 
 :26, :27, :28, :29, :30, :31, :32, :33,:34, :35, :36, :37, :38, :39, :40, 
 :41, :42, :43, :44, :45, :46, :47,:48, :49, :50, :51, :52, :53, :54, :55)'; 
 
 EXECUTE IMMEDIATE V_V_SQL USING 
 v_V_CLASS_ROW_ID,v_V_PLAN_ID,V_V_CLASS_NAME, V_V_CLASS_DESC, V_V_ELIG_BENE_PRD, V_V_BENE_PRD_TYPE_ID, V_V_BENE_FROM_DT_TYPE_ID, 
 V_V_DIS_WAIT_PRD, V_V_DIS_CLNDR_WRK_TYPE_ID, V_V_DIS_PRD_TYPE_ID, V_V_DIS_MAX_PRD, V_V_DIS_MAX_PRD_TYPE_ID, V_V_FROM_DIS_PRD_TYPE_ID, 
 V_V_ALLOW_EXT_FLAG_ID, V_V_EXTEND_PRD, V_V_EXTEND_PRD_TYPE_ID, V_V_MAX_TOT_DIS_PRD, 
 V_V_MAX_TOT_PRD_TYPE_ID, V_V_ACTUAL_WORK_WEEK_FLAG_ID, V_V_DAY7_WORK_WEEK_FLAG_ID, V_V_DAY5_WORK_WEEK_FLAG_ID, 
 V_V_OTHER_WORK_WEEK_FLAG_ID, V_V_OTHER_DAYS, V_V_BENE_PRCTG_FLAG_ID, V_V_BENE_PER_AMT, 
 V_V_BENE_FLAT_AMT_FLAG_ID, V_V_BENE_FLAT_AMT, V_V_BENE_TD_FLAG_ID, 
 V_V_BENE_BASED_TYPE_ID, V_V_WITHHOLD_FED_ITAX_FLAG_ID, V_V_WITHHOLD_FICA_FLAG_ID, V_V_WEEKLY_BENE_CAP, 
 V_V_MAX_BEN_PER_CLAIM,V_V_MAX_BEN_PER_CAL_YR, V_V_WAGE_FOR_DIS_PRD, V_V_WAGE_FOR_CAL_YR, V_V_TAXABLE_PERCENT, V_V_WITHHOLD_MEDICARE_FLAG_ID, 
 V_V_WITHHOLD_STATE_FLAG_ID, V_V_USE_VOUCHERS_FLAG_ID,V_V_DAY30_WORK_MONTH_FLAG_ID, V_V_ACTUAL_MONTH_FLAG_ID, V_V_UPPER_AGE_LIMIT, V_V_LOWER_AGE_LIMIT, V_V_SUPP_PERCENT, 
 V_V_SUPP_FLAT_AMT, V_V_BANK_ACC_ID, V_V_SUB_ACC_ROW_ID, V_V_SUPP_TR_TYPE_CODE_ID, V_V_SUPP_SEP_PAY_FLAG_ID, V_V_PENSION_AMT, V_V_SS_AMT, 
 V_V_OTHER_AMT, V_V_PRORATE_OFF_FLAG_ID, V_V_FULLPAY_ONLY_FLAG_ID ; 
 ELSE 
 BEGIN 
 v_V_ERRORLOC := 'INS03'; 
 
 v_V_SQL := 'UPDATE ' || v_V_DBNAME || 'DISABILITY_CLASS SET '; 
 
 v_V_SQL := v_V_SQL || ' CLASS_NAME = '||''''||V_V_CLASS_NAME||''''; 
 v_V_SQL := v_V_SQL || ', PLAN_ID = '||v_V_PLAN_ID; 
 IF v_V_CLASS_DESC IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', CLASS_DESC = '||''''||v_V_CLASS_DESC||''''; 
 END IF; 
 
 IF v_V_ELIG_BENE_PRD > 0 THEN 
 v_V_SQL := v_V_SQL || ', ELIG_BENE_PRD= '||v_V_ELIG_BENE_PRD; 
 END IF; 
 
 IF v_V_BENE_PRD_TYPE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', BENE_PRD_TYPE = '||v_V_BENE_PRD_TYPE_ID; 
 END IF; 
 
 IF v_V_BENE_FROM_DT_TYPE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', BENE_FROM_DT_TYPE = '||v_V_BENE_FROM_DT_TYPE_ID; 
 END IF; 
 
 IF v_V_DIS_WAIT_PRD > 0 THEN 
 v_V_SQL := v_V_SQL || ', DIS_WAIT_PRD = '||v_V_DIS_WAIT_PRD; 
 END IF; 
 
 IF v_V_DIS_CLNDR_WRK_TYPE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', DIS_CLNDR_WRK_CODE = '||v_V_DIS_CLNDR_WRK_TYPE_ID; 
 END IF; 
 
 IF v_V_DIS_PRD_TYPE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', DIS_PRD_TYPE = '||v_V_DIS_PRD_TYPE_ID; 
 END IF; 
 
 IF v_V_DIS_MAX_PRD > 0 THEN 
 v_V_SQL := v_V_SQL || ', DIS_MAX_PRD = '||v_V_DIS_MAX_PRD; 
 
 END IF; 
 
 IF v_V_DIS_MAX_PRD_TYPE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', DIS_MAX_PRD_TYPE = '||v_V_DIS_MAX_PRD_TYPE_ID; 
 
 END IF; 
 
 IF v_V_FROM_DIS_PRD_TYPE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', FROM_DIS_PRD_TYPE = '||v_V_FROM_DIS_PRD_TYPE_ID; 
 
 END IF; 
 
 IF v_V_ALLOW_EXT IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', ALLOW_EXT = '||v_V_ALLOW_EXT_FLAG_ID; 
 
 END IF; 
 
 IF v_V_EXTEND_PRD > 0 THEN 
 v_V_SQL := v_V_SQL || ', EXTEND_PRD = '||v_V_EXTEND_PRD; 
 
 END IF; 
 
 IF v_V_EXTEND_PRD_TYPE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', EXTEND_PRD_TYPE = '||v_V_EXTEND_PRD_TYPE_ID; 
 
 END IF; 
 
 IF v_V_MAX_TOT_DIS_PRD > 0 THEN 
 v_V_SQL := v_V_SQL || ', MAX_TOT_DIS_PRD = '||v_V_MAX_TOT_DIS_PRD; 
 
 END IF; 
 
 IF v_V_MAX_TOT_PRD_TYPE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', MAX_TOT_PRD_TYPE = '||v_V_MAX_TOT_PRD_TYPE_ID; 
 
 END IF; 
 
 IF v_V_ACTUAL_WORK_WEEK_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', ACTUAL_WORK_WEEK = '||v_V_ACTUAL_WORK_WEEK_FLAG_ID; 
 
 END IF; 
 
 IF v_V_DAY7_WORK_WEEK_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', DAY7_WORK_WEEK = '||v_V_DAY7_WORK_WEEK_FLAG_ID; 
 
 END IF; 
 
 IF v_V_DAY5_WORK_WEEK_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', DAY5_WORK_WEEK = '||v_V_DAY7_WORK_WEEK_FLAG_ID; 
 
 END IF; 
 
 IF v_V_OTHER_WORK_WEEK_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', OTHER_WORK_WEEK = '||v_V_OTHER_WORK_WEEK_FLAG_ID; 
 
 END IF; 
 
 IF v_V_OTHER_DAYS > 0 THEN 
 v_V_SQL := v_V_SQL || ', OTHER_DAYS = '||v_V_OTHER_DAYS; 
 
 END IF; 
 
 IF v_V_BENE_PRCTG_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', BENE_PRCTG_FLAG = '||v_V_BENE_PRCTG_FLAG_ID; 
 
 END IF; 
 
 IF v_V_BENE_PER_AMT IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', BENE_PER_AMT = '||v_V_BENE_PER_AMT; 
 
 END IF; 
 
 IF v_V_BENE_FLAT_AMT_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', BENE_FLAT_AMT_FLAG = '||v_V_BENE_FLAT_AMT_FLAG_ID; 
 
 END IF; 
 
 IF v_V_BENE_FLAT_AMT IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', BENE_FLAT_AMT = '||v_V_BENE_FLAT_AMT; 
 
 END IF; 
 
 IF v_V_BENE_TD_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', BENE_TD_FLAG = '||v_V_BENE_TD_FLAG_ID; 
 
 END IF; 
 
 IF v_V_BENE_BASED_TYPE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', BENE_BASED_CODE = '||v_V_BENE_BASED_TYPE_ID; 
 
 END IF; 
 
 IF v_V_WITHHOLD_FED_ITAX_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', WITHHOLD_FED_ITAX = '||v_V_WITHHOLD_FED_ITAX_FLAG_ID; 
 
 END IF; 
 
 IF v_V_WITHHOLD_FICA_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', WITHHOLD_FICA = '||v_V_WITHHOLD_FICA_FLAG_ID; 
 
 END IF; 
 
 IF v_V_WEEKLY_BENE_CAP > 0 THEN 
 v_V_SQL := v_V_SQL || ', WEEKLY_BENE_CAP = '||v_V_WEEKLY_BENE_CAP; 
 
 END IF; 
 
 IF v_V_MAX_BEN_PER_CLAIM > 0 THEN 
 v_V_SQL := v_V_SQL || ', MAX_BEN_PER_CLAIM = '||v_V_MAX_BEN_PER_CLAIM; 
 
 END IF; 
 
 IF v_V_MAX_BEN_PER_CAL_YR > 0 THEN 
 v_V_SQL := v_V_SQL || ', MAX_BEN_PER_CAL_YR = '||v_V_MAX_BEN_PER_CAL_YR; 
 
 END IF; 
 
 IF v_V_WAGE_FOR_DIS_PRD IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', WAGE_FOR_DIS_PRD = '||v_V_WAGE_FOR_DIS_PRD; 
 
 END IF; 
 
 IF v_V_WAGE_FOR_CAL_YR > 0 THEN 
 v_V_SQL := v_V_SQL || ', WAGE_FOR_CAL_YR = '||v_V_WAGE_FOR_CAL_YR; 
 
 END IF; 
 
 IF v_V_TAXABLE_PERCENT > 0 THEN 
 v_V_SQL := v_V_SQL || ', TAXABLE_PERCENT = '||v_V_TAXABLE_PERCENT; 
 
 END IF; 
 
 IF v_V_WITHHOLD_MEDICARE_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', WITHHOLD_MEDICARE = '||v_V_WITHHOLD_MEDICARE_FLAG_ID; 
 
 END IF; 
 
 IF v_V_WITHHOLD_STATE_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', WITHHOLD_STATE = '||v_V_WITHHOLD_STATE_FLAG_ID; 
 
 END IF; 
 
 IF v_V_USE_VOUCHERS_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', USE_VOUCHERS = '||v_V_USE_VOUCHERS_FLAG_ID; 
 
 END IF; 
 
 IF v_V_DAY30_WORK_MONTH_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', DAY30_WORK_MONTH = '||v_V_DAY30_WORK_MONTH_FLAG_ID; 
 
 END IF; 
 
 IF v_V_ACTUAL_MONTH_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', ACTUAL_MONTH = '||v_V_ACTUAL_MONTH_FLAG_ID; 
 
 END IF; 
 
 IF v_V_UPPER_AGE_LIMIT > 0 THEN 
 v_V_SQL := v_V_SQL || ', UPPER_AGE_LIMIT = '||v_V_UPPER_AGE_LIMIT; 
 
 END IF; 
 
 IF v_V_LOWER_AGE_LIMIT > 0 THEN 
 v_V_SQL := v_V_SQL || ', LOWER_AGE_LIMIT = '||v_V_LOWER_AGE_LIMIT; 
 
 END IF; 
 
 IF v_V_SUPP_PERCENT > 0 THEN 
 v_V_SQL := v_V_SQL || ', SUPP_PERCENT = '||v_V_SUPP_PERCENT; 
 
 END IF; 
 
 IF v_V_SUPP_FLAT_AMT > 0 THEN 
 v_V_SQL := v_V_SQL || ', SUPP_FLAT_AMT = '||v_V_SUPP_FLAT_AMT; 
 
 END IF; 
 
 IF v_V_BANK_ACC_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', SUPP_BANK_ACC_ID = '||v_V_BANK_ACC_ID; 
 
 END IF; 
 
 IF v_V_SUB_ACC_ROW_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', SUPP_SUB_ACC_ID = '||v_V_SUB_ACC_ROW_ID; 
 
 END IF; 
 
 IF v_V_SUPP_TR_TYPE_CODE_ID > 0 THEN 
 v_V_SQL := v_V_SQL || ', SUPP_TR_TYPE_CODE = '||v_V_SUPP_TR_TYPE_CODE_ID; 
 
 END IF; 
 
 IF v_V_SUPP_SEP_PAY_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', SUPP_SEP_PAY_FLAG = '||v_V_SUPP_SEP_PAY_FLAG_ID; 
 
 END IF; 
 
 IF v_V_PENSION_AMT > 0 THEN 
 v_V_SQL := v_V_SQL || ', PENSION_AMT = '||v_V_PENSION_AMT; 
 
 END IF; 
 
 IF v_V_SS_AMT > 0 THEN 
 v_V_SQL := v_V_SQL || ', SS_AMT = '||v_V_SS_AMT; 
 
 END IF; 
 
 IF v_V_OTHER_AMT > 0 THEN 
 v_V_SQL := v_V_SQL || ', OTHER_AMT = '||v_V_OTHER_AMT; 
 
 END IF; 
 
 IF v_V_PRORATE_OFF_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', PRORATE_OFF_FLAG = '||v_V_PRORATE_OFF_FLAG_ID; 
 
 END IF; 
 
 IF v_V_FULLPAY_ONLY_FLAG_ID IS NOT NULL THEN 
 v_V_SQL := v_V_SQL || ', FULLPAY_ONLY_FLAG = '||v_V_FULLPAY_ONLY_FLAG_ID; 
 
 END IF; 
 
 v_V_SQL := v_V_SQL || ' WHERE CLASS_ROW_ID = '||V_V_CLASS_ROW_ID; 
 
 EXECUTE IMMEDIATE V_V_SQL; 
 END; 
 END IF; 
 
 
 IF v_V_NEWCLASS = 1 THEN 
 v_V_ERRORLOC := 'INS04'; 
 
 v_VSQLUPDATE := 'UPDATE ' || v_V_DBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1'; 
 
 EXECUTE IMMEDIATE V_VSQLUPDATE USING 'DISABILITY_CLASS'; 
 
 END IF; 
 
 IF v_V_CHECK_DIS_CLASS_WAIT > 0 THEN 
 BEGIN 
 v_ILEN := 1; 
 
 WHILE v_ILEN <= v_V_CHECK_DIS_CLASS_WAIT  
 LOOP 
 BEGIN 
 v_V_ERRORLOC := 'INS05'; 
 
 IF v_ILEN = 1 THEN 
 BEGIN 
 v_V_ALT_WAIT_DIS_TYPE_ID := v_V_ALT_WAIT_DIS_TYPE_ID_1; 
 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY := v_V_ALT_WAIT_DIS_CDR_WRK_TY1; 
 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID := v_V_ALT_WAIT_DIS_PRD_TYPE_ID_1; 
 
 v_V_ALT_WAIT_DIS_PRD_VAL := v_V_ALT_WAIT_DIS_PRD_VAL_1; 
 
 END; 
 ELSE 
 IF v_ILEN = 2 THEN 
 BEGIN 
 v_V_ALT_WAIT_DIS_TYPE_ID := v_V_ALT_WAIT_DIS_TYPE_ID_2; 
 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY := v_V_ALT_WAIT_DIS_CDR_WRK_TY2; 
 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID := v_V_ALT_WAIT_DIS_PRD_TYPE_ID_2; 
 
 v_V_ALT_WAIT_DIS_PRD_VAL := v_V_ALT_WAIT_DIS_PRD_VAL_2; 
 
 END; 
 ELSE 
 IF v_ILEN = 3 THEN 
 BEGIN 
 v_V_ALT_WAIT_DIS_TYPE_ID := v_V_ALT_WAIT_DIS_TYPE_ID_3; 
 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY := v_V_ALT_WAIT_DIS_CDR_WRK_TY3; 
 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID := v_V_ALT_WAIT_DIS_PRD_TYPE_ID_3; 
 
 v_V_ALT_WAIT_DIS_PRD_VAL := v_V_ALT_WAIT_DIS_PRD_VAL_3; 
 
 END; 
 ELSE 
 IF v_ILEN = 4 THEN 
 BEGIN 
 v_V_ALT_WAIT_DIS_TYPE_ID := v_V_ALT_WAIT_DIS_TYPE_ID_4; 
 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY := v_V_ALT_WAIT_DIS_CDR_WRK_TY4; 
 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID := v_V_ALT_WAIT_DIS_PRD_TYPE_ID_4; 
 
 v_V_ALT_WAIT_DIS_PRD_VAL := v_V_ALT_WAIT_DIS_PRD_VAL_3; 
 
 END; 
 ELSE 
 IF v_ILEN = 5 THEN 
 BEGIN 
 v_V_ALT_WAIT_DIS_TYPE_ID := v_V_ALT_WAIT_DIS_TYPE_ID_5; 
 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY := v_V_ALT_WAIT_DIS_CDR_WRK_TY5; 
 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID := v_V_ALT_WAIT_DIS_PRD_TYPE_ID_5; 
 
 v_V_ALT_WAIT_DIS_PRD_VAL := v_V_ALT_WAIT_DIS_PRD_VAL_5; 
 
 END; 
 ELSE 
 IF v_ILEN = 6 THEN 
 BEGIN 
 v_V_ALT_WAIT_DIS_TYPE_ID := v_V_ALT_WAIT_DIS_TYPE_ID_6; 
 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY := v_V_ALT_WAIT_DIS_CDR_WRK_TY6; 
 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID := v_V_ALT_WAIT_DIS_PRD_TYPE_ID_6; 
 
 v_V_ALT_WAIT_DIS_PRD_VAL := v_V_ALT_WAIT_DIS_PRD_VAL_6; 
 
 END; 
 ELSE 
 IF v_ILEN = 7 THEN 
 BEGIN 
 v_V_ALT_WAIT_DIS_TYPE_ID := v_V_ALT_WAIT_DIS_TYPE_ID_7; 
 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY := v_V_ALT_WAIT_DIS_CDR_WRK_TY7; 
 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID := v_V_ALT_WAIT_DIS_PRD_TYPE_ID_7; 
 
 v_V_ALT_WAIT_DIS_PRD_VAL := v_V_ALT_WAIT_DIS_PRD_VAL_7; 
 
 END; 
 ELSE 
 IF v_ILEN = 8 THEN 
 BEGIN 
 v_V_ALT_WAIT_DIS_TYPE_ID := v_V_ALT_WAIT_DIS_TYPE_ID_8; 
 
 v_V_ALT_WAIT_DIS_CDR_WRK_TY := v_V_ALT_WAIT_DIS_CDR_WRK_TY8; 
 
 v_V_ALT_WAIT_DIS_PRD_TYPE_ID := v_V_ALT_WAIT_DIS_PRD_TYPE_ID_8; 
 
 v_V_ALT_WAIT_DIS_PRD_VAL := v_V_ALT_WAIT_DIS_PRD_VAL_8; 
 
 END; 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 v_V_ERRORLOC := 'INS06'; 
 
 v_V_WAIT_ROW_ID := 0; 
 
 v_V_SQL := 'SELECT WAIT_ROW_ID FROM ' || v_V_DBNAME || 'DIS_CLASS_WAIT WHERE CLASS_ID = :1 AND DIS_TYPE_CODE = :2'; 
 
 BEGIN 
 EXECUTE IMMEDIATE V_V_SQL INTO v_V_WAIT_ROW_ID USING v_V_CLASS_ROW_ID,v_V_ALT_WAIT_DIS_TYPE_ID; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 v_V_WAIT_ROW_ID:=0; 
 END; 
 
 IF v_V_WAIT_ROW_ID = 0 THEN 
 v_V_ERRORLOC := 'INS07'; 
 
 v_VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || v_V_DBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1'; 
 
 BEGIN 
 EXECUTE IMMEDIATE v_VSQLINSERT INTO v_V_WAIT_ROW_ID USING 'DIS_CLASS_WAIT'; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 v_V_WAIT_ROW_ID:=1; 
 END; 
 
 v_V_SQL := 'INSERT INTO ' || v_V_DBNAME || 'DIS_CLASS_WAIT(WAIT_ROW_ID, CLASS_ID, DIS_TYPE_CODE, DIS_WAIT_PRD, DIS_CLNDR_WRK_CODE, DIS_PRD_TYPE) 
 VALUES(:1, :2, :3, :4, :5, :6)'; 
 
 EXECUTE IMMEDIATE V_V_SQL USING v_V_WAIT_ROW_ID, V_V_CLASS_ROW_ID, V_V_ALT_WAIT_DIS_TYPE_ID, V_V_ALT_WAIT_DIS_PRD_VAL, V_V_ALT_WAIT_DIS_CDR_WRK_TY, V_V_ALT_WAIT_DIS_PRD_TYPE_ID; 
 
 ELSE 
 v_V_ERRORLOC := 'INS08'; 
 
 v_V_SQL := 'UPDATE ' || v_V_DBNAME || 'DIS_CLASS_WAIT SET CLASS_ID = :1, DIS_TYPE_CODE = :2 
 , DIS_WAIT_PRD = :3, DIS_CLNDR_WRK_CODE = :4, DIS_PRD_TYPE = :5 WHERE WAIT_ROW_ID = :6'; 
 
 EXECUTE IMMEDIATE V_V_SQL USING V_V_CLASS_ROW_ID, V_V_ALT_WAIT_DIS_TYPE_ID, V_V_ALT_WAIT_DIS_PRD_VAL, V_V_ALT_WAIT_DIS_CDR_WRK_TY, V_V_ALT_WAIT_DIS_PRD_TYPE_ID, v_V_WAIT_ROW_ID; 
 END IF; 
 
 IF v_V_ERRORLOC = 'INS07' THEN 
 v_V_ERRORLOC := 'INS09'; 
 
 v_VSQLUPDATE := 'UPDATE ' || v_V_DBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1'; 
 
 EXECUTE IMMEDIATE V_VSQLUPDATE USING 'DIS_CLASS_WAIT'; 
 END IF; 
 
 v_ILEN := v_ILEN + 1; 
 
 END; 
 END LOOP; 
 
 END; 
 END IF; 
 
 IF v_V_CHECK_DIS_CLASS_TD > 0 THEN 
 BEGIN 
 v_ILEN := 1; 
 
 WHILE v_ILEN <= v_V_CHECK_DIS_CLASS_TD 
 LOOP 
 BEGIN 
 v_V_ERRORLOC := 'INS09'; 
 
 IF v_ILEN = 1 THEN 
 v_V_WAGES_FROM_VAL := v_V_WAGES_FROM_1; 
 
 v_V_WAGES_TO_VAL := v_V_WAGES_TO_1; 
 
 v_V_WEEKLY_BENEFIT_VAL := v_V_WEEKLY_BENEFIT_1; 
 ELSE 
 IF v_ILEN = 2 THEN 
 v_V_WAGES_FROM_VAL := v_V_WAGES_FROM_2; 
 
 v_V_WAGES_TO_VAL := v_V_WAGES_TO_2; 
 
 v_V_WEEKLY_BENEFIT_VAL := v_V_WEEKLY_BENEFIT_2; 
 ELSE 
 IF v_ILEN = 3 THEN 
 v_V_WAGES_FROM_VAL := v_V_WAGES_FROM_3; 
 
 v_V_WAGES_TO_VAL := v_V_WAGES_TO_3; 
 
 v_V_WEEKLY_BENEFIT_VAL := v_V_WEEKLY_BENEFIT_3; 
 ELSE 
 IF v_ILEN = 4 THEN 
 v_V_WAGES_FROM_VAL := v_V_WAGES_FROM_4; 
 
 v_V_WAGES_TO_VAL := v_V_WAGES_TO_4; 
 
 v_V_WEEKLY_BENEFIT_VAL := v_V_WEEKLY_BENEFIT_4; 
 ELSE 
 IF v_ILEN = 5 THEN 
 v_V_WAGES_FROM_VAL := v_V_WAGES_FROM_5; 
 
 v_V_WAGES_TO_VAL := v_V_WAGES_TO_5; 
 
 v_V_WEEKLY_BENEFIT_VAL := v_V_WEEKLY_BENEFIT_5; 
 ELSE 
 IF v_ILEN = 6 THEN 
 v_V_WAGES_FROM_VAL := v_V_WAGES_FROM_6; 
 
 v_V_WAGES_TO_VAL := v_V_WAGES_TO_6; 
 
 v_V_WEEKLY_BENEFIT_VAL := v_V_WEEKLY_BENEFIT_6; 
 ELSE 
 IF v_ILEN = 7 THEN 
 v_V_WAGES_FROM_VAL := v_V_WAGES_FROM_7; 
 
 v_V_WAGES_TO_VAL := v_V_WAGES_TO_7; 
 
 v_V_WEEKLY_BENEFIT_VAL := v_V_WEEKLY_BENEFIT_7; 
 ELSE 
 IF v_ILEN = 8 THEN 
 BEGIN 
 v_V_WAGES_FROM_VAL := v_V_WAGES_FROM_8; 
 
 v_V_WAGES_TO_VAL := v_V_WAGES_TO_8; 
 
 v_V_WEEKLY_BENEFIT_VAL := v_V_WEEKLY_BENEFIT_8; 
 
 END; 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 END IF; 
 
 v_V_ERRORLOC := 'INS10'; 
 
 v_V_TD_ROW_ID := 0; 
 
 v_V_SQL := 'SELECT TD_ROW_ID FROM ' || v_V_DBNAME || 'DIS_CLASS_TD WHERE CLASS_ID = :1 '; 
 v_V_SQL := v_V_SQL || ' AND WAGES_FROM < :2' ; 
 v_V_SQL := v_V_SQL || ' AND WAGES_FROM > :3' ; 
 v_V_SQL := v_V_SQL || ' AND WAGES_TO < :4' ; 
 v_V_SQL := v_V_SQL || ' AND WAGES_TO > :5' ; 
 v_V_SQL := v_V_SQL || ' AND WEEKLY_BENEFIT < :6' ; 
 v_V_SQL := v_V_SQL || ' AND WEEKLY_BENEFIT > :7' ; 
 
 
 BEGIN 
 EXECUTE IMMEDIATE V_V_SQL INTO v_V_TD_ROW_ID USING v_V_CLASS_ROW_ID, v_V_WAGES_FROM_VAL + 0.01, v_V_WAGES_FROM_VAL - 0.01, v_V_WAGES_TO_VAL + 0.01, v_V_WAGES_TO_VAL - 0.01, v_V_WEEKLY_BENEFIT_VAL + 0.01, v_V_WEEKLY_BENEFIT_VAL - 0.01 ; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 V_V_TD_ROW_ID:=0; 
 END; 
 
 IF v_V_TD_ROW_ID = 0 THEN 
 v_V_ERRORLOC := 'INS11'; 
 
 v_VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || v_V_DBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1'; 
 
 BEGIN 
 EXECUTE IMMEDIATE v_VSQLINSERT INTO v_V_TD_ROW_ID USING 'DIS_CLASS_TD'; 
 EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
 V_V_TD_ROW_ID:=0; 
 END; 
 
 v_V_ERRORLOC := 'INS12'; 
 
 v_V_SQL := 'INSERT INTO ' || v_V_DBNAME || 'DIS_CLASS_TD(TD_ROW_ID, CLASS_ID, WAGES_FROM, WAGES_TO, WEEKLY_BENEFIT) 
 VALUES(:1, :2, :3, :4, :5)'; 
 
 EXECUTE IMMEDIATE V_V_SQL USING V_V_TD_ROW_ID, V_V_CLASS_ROW_ID, V_V_WAGES_FROM_VAL, V_V_WAGES_TO_VAL, V_V_WEEKLY_BENEFIT_VAL; 
 
 v_V_ERRORLOC := 'INS13'; 
 
 v_VSQLUPDATE := 'UPDATE ' || v_V_DBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1'; 
 
 EXECUTE IMMEDIATE v_VSQLUPDATE USING 'DIS_CLASS_TD'; 
 END IF; 
 
 v_ILEN := v_ILEN + 1; 
 
 END; 
 END LOOP; 
 
 END; 
 END IF; 
 
 END; 
 END IF; 
 
 END; 
 EXCEPTION 
 WHEN OTHERS THEN 
 ----END LEVEL INSERT/UPDATE 
 v_V_ERROR_MESSAGE := SQLERRM; 
 ROLLBACK; 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 v_V_ERROR_MESSAGE, 
 'EXCEPTION', 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 0); 
 
 v_V_ROWCOUNT := v_V_ROWCOUNT + 1; 
 END; 
 
 ----INSERT WORK ENDS 
 --******************************************************************************************************************************************************************** 
 v_V_ERRORLOC := 'END666'; 
 
 IF v_V_ROWCOUNT + v_V_ERRORCOUNT = 0 THEN 
 v_V_INVALID_ROW := 0; 
 ELSE v_V_INVALID_ROW := 1; 
 END IF; 
 
 IF v_V_INVALID_ROW = 0 THEN 
 v_V_SQL := 'UPDATE DDS_STD_CLASS SET INVALID_ROW = :1 WHERE DA_ROW_ID = :2 AND JOBID = :3'; 
 
 EXECUTE IMMEDIATE V_V_SQL USING v_V_INVALID_ROW, v_V_DA_ROW_ID,v_P_JOBID; 
 COMMIT; 
 END IF; 
 
        ---Neha Running status code starts 33658--- 
        --DBMS_OUTPUT.put_LINE('neha_counter-->'||v_iRunStatCnt);  
      
        IF v_iRunStatCnt = 1 THEN
          BEGIN
            v_vProcessMsg := 'Total Number of Records processed in STD CLASS : ' ||v_iRunStatCnt;
                             
            EXECUTE IMMEDIATE 'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES(:1,:2,:3,:4,:5)'
            USING v_P_JOBID, v_vProcessMsg, 'STD_CLASS_RUN', 'DDS_STD_CLASS_RUN', -11;
          END;
         ELSIF v_iRunCnt = 1000 THEN
            BEGIN
              v_vProcessMsg := 'Total Number of Records processed in STD CLASS : ' ||v_iRunStatCnt;
              v_V_SQL := 'UPDATE DDS_PROCESS_LOG_T SET PROCESS_DESC =:1 WHERE JOBID = :2 AND 
              MODULE_NAME =:3 AND TABLE_NAME=:4 AND DISPLAY_ORDER=-11';
            
              EXECUTE IMMEDIATE v_V_SQL using v_vProcessMsg, v_P_JOBID, 'STD_CLASS_RUN', 'DDS_STD_CLASS_RUN';
               v_iRunCnt:=1;  
            END;
         ELSIF (v_iCount=v_iRunStatCnt) THEN
              BEGIN
              v_vProcessMsg := 'Total Number of Records processed in STD CLASS : ' ||v_iCount;
              v_V_SQL := 'UPDATE DDS_PROCESS_LOG_T SET PROCESS_DESC =:1 WHERE JOBID = :2 AND 
              MODULE_NAME =:3 AND TABLE_NAME=:4 AND DISPLAY_ORDER=-11';
  
             EXECUTE IMMEDIATE v_V_SQL using v_vProcessMsg, v_P_JOBID, 'STD_CLASS_RUN', 'DDS_STD_CLASS_RUN';
             END;
        END IF;
        COMMIT;
    
      v_iRunStatCnt := v_iRunStatCnt + 1;
      v_iRunCnt := v_iRunCnt + 1;
      ---Neha running status code ends 33658---   
 
 END; 
 END LOOP; 
 --CLOSE DDS_STD_CLASS_CUR;---- END MAIN CATCH 
 <<NEXTRECORD>> 
 NULL; 
 
 ---PROCESS LOG CALLING FOR SUMMARY OF RECORDS 
 DDS_PROCESS_LOG(v_P_JOBID, 
 v_V_MODULENAME, 
 v_V_TABLE_NAME); 
 
 END; 
 EXCEPTION 
 WHEN OTHERS THEN 
 ---- END MAIN TRY 
 v_V_ERROR_MESSAGE:= SQLERRM; 
 ROLLBACK; 
 DDS_ERROR_LOG_CAPTURE(v_P_JOBID, 
 v_V_DA_ROW_ID, 
 v_V_MODULENAME, 
 v_V_ERRORLOC, 
 v_V_ERRORLOC, 
 v_V_PROCNAME, 
 v_V_ERROR_MESSAGE, 
 'EXCEPTION', 
 v_V_TABLE_NAME, 
 'CLASS_NAME', 
 v_V_CLASS_NAME, 
 0); 
 
 v_V_ROWCOUNT := v_V_ROWCOUNT + 1; 
 
 ---In case there is some exception in main try then the cursor needs to be closed and deallocated so that next run does not create any issues 
 ----- END MAIN 
END DDS_IMPORT_STD_CLASS;
