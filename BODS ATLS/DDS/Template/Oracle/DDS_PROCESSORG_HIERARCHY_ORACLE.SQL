CREATE OR REPLACE PROCEDURE DDS_PROCESSORG_HIERARCHY
(
  P_ORG_HIER_TYPE  DDS_ORG_HIERARCHY_TYPE,
  P_JOBID IN NUMBER,
  P_DA_ROW_ID IN NUMBER,
  P_DBNAME IN VARCHAR2,
  P_KEYCOLUMN IN VARCHAR2,
  P_KEY_VALUE IN VARCHAR2,
  P_ENTITY_ID OUT NUMBER
)
AUTHID CURRENT_USER 
AS
   VSQL VARCHAR2(4000);
   VSQLINSERT VARCHAR2(4000);
   VSYS_TABLE_NAME VARCHAR2(30);
   VDEPT_ID NUMBER:=0;
   VENTITY_TABLE_ID NUMBER:=0;
   VDIVISION VARCHAR2(25);
   VLOCATION VARCHAR2(25);
   VDEPARTMENT VARCHAR2(25);
   VCOMPANY VARCHAR2(25);
   VCLIENT VARCHAR2(25);
   VOPERATION VARCHAR2(25);
   VREGION VARCHAR2(25);
   VFACILITY VARCHAR2(25);
   VDIVISION_DESC VARCHAR2(255);
   VLOCATION_DESC VARCHAR2(255);
   VDEPARTMENT_DESC VARCHAR2(255);
   VCOMPANY_DESC VARCHAR2(255);
   VCLIENT_DESC VARCHAR2(255);
   VOPERATION_DESC VARCHAR2(255);
   VREGION_DESC VARCHAR2(255);
   VFACILITY_DESC VARCHAR2(255);
   VDBNAME VARCHAR2(255);
   VPROCNAME VARCHAR2(30):='DDS_PROCESSORG_HIERARCHY';
   VPARENT_EID NUMBER:=0;
   VLOCATION_EID NUMBER:=0;
   VDIVISION_EID NUMBER:=0;
   VCOMPANY_EID NUMBER:=0;
   VREGION_EID NUMBER:=0;
   VOPERATION_EID NUMBER:=0;
   VCLIENT_EID NUMBER:=0;
   VFACILITY_EID NUMBER:=0;
   PRAGMA AUTONOMOUS_TRANSACTION;
   V_ORG_HIER_TYPE  DDS_ORG_HIERARCHY_TABTYPE;
   V_ERROR_MESSAGE VARCHAR2(4000);
   V_ERRORLOC VARCHAR2(10);
   V_ROWCOUNT NUMBER;
   v_V_DATETIME varchar2(14);
   v_V_DDSUSER VARCHAR2(6):= 'DA DDS';
   
BEGIN

	--*************************************************************************************************************************************************************
	--****************************************** STRUCTURE OF DDS_PROCESSORG_HIERARCHY PROCEDURE ******************************************************************
	--*************************************************************************************************************************************************************
	--****		IT CHECKS WHETHER DEPARTMENT, LOCATION, DIVISON, COMPANY EXISTS IN ENTITY TABLE OR NOT OR NOT.												   ****
	--****      IF IT DOES NOT EXISTS THEN ENTITY AND ORG_HIERACHY ARE CREATED																				   ****
	--****      VARIABLE DECLARTIONS																														   ****
	--****      SELECT TOP ROW FROM ORG HIERARCHY TYPE CREATED IN THE CALLING PROCEDURES WHICH HAVE THE VALUES FOR ORG HIERARCHY LEVELS						   ****
	--****      INITIALIZATION OF VARIABLES( ORG HIERARCHY LEVEL'S DEFAULT VALUES ARE SPECIFIED IF THE CORRESPONDING VALUES ARE NULL)						   ****
	--****      CHECK IF DEPARTMENT EXISTS IN RISKMASTER OR NOT, IF YES THEN EXIT PROCEDURE AND RETURN DEPARTMENT EID                         				   ****
	--****      IF DEPARTMENT DOES NOT EXISTS IN RISKMASTER, THEN CHECK FOR LOCATION EXISTENCE															       ****	
	--****		IF LOCATION EXISTS, THEN CREATE DEPARTMENT AND FACILITY UNDER THAT LOCATION																	   ****
	--****		IF LOCATION DOES NOT EXISTS, THEN CHECK FOR DIVISION EXISTENCE																				   ****
	--****		IF DIVISION EXISTS, THEN CREATE DEPARTMENT, FACILITY AND LOCATION UNDER THAT DIVISION														   ****
	--****		IF DIVISION DOES NOT EXISTS, THEN CHECK FOR COMPANY EXISTENCE																				   ****
	--****		IF COMPANY EXISTS, THEN CREATE DEPARTMENT, FACILITY, LOCATION, REGION AND OPERATION UNDER THAT COMPANY										   ****
	--****		IF COMPANY DOES NOT EXISTS, THEN CREATE DEPARTMENT, FACILITY, LOCATION, REGION, OPERATION, COMPANY, CLIENT									   ****
	--****		FETCH ORG HIERACHY CORRESPONDING TO LOCATION, THEN CREATE COMPLETE ORG_HIERARCHY TILL DEPARTMENT											   ****
	--*************************************************************************************************************************************************************
	--*************************************************************************************************************************************************************

   V_ORG_HIER_TYPE  := DDS_ORG_HIERARCHY_TABTYPE(P_ORG_HIER_TYPE);

   FOR r in
     (select IJOBID,
             IDAROWID ,
             VDEPARTMENT ,
             VLOCATION ,
             VDIVISION ,
             VCOMPANY ,
             VDEPARTMENT_DESC ,
             VLOCATION_DESC ,
             VDIVISION_DESC ,
             VCOMPANY_DESC
          from TABLE(V_ORG_HIER_TYPE) rt
        where rt.iDaRowId=P_DA_ROW_ID AND RT.IJOBID=p_JobId AND ROWNUM<=1)
  LOOP

  BEGIN
         BEGIN

            VDBNAME := P_DBNAME;
            P_ENTITY_ID := 0;
            
            VDEPARTMENT := NVL(R.VDEPARTMENT, 'DEPT-DDS');
            VDEPARTMENT_DESC := NVL(R.VDEPARTMENT_DESC, VDEPARTMENT || 'Department');
            VFACILITY := 'FAC-DDS';
            VFACILITY_DESC := VFACILITY || ' Facility';
            VLOCATION := NVL(R.VLOCATION, 'LOC-DDS');
            VLOCATION_DESC := NVL(R.VLOCATION_DESC, VLOCATION || ' Location');
            VDIVISION := NVL(R.VDIVISION, 'DIV-DDS');
            VDIVISION_DESC := NVL(R.VDIVISION_DESC, VDIVISION || ' Division');
            VREGION := 'REGN-DDS';
            VREGION_DESC := VREGION || ' Region' ;
            VOPERATION := 'OPRN-DDS';
            VOPERATION_DESC := VOPERATION || ' Operation';
            VCOMPANY := NVL(R.VCOMPANY, 'CMPNY-DDS');
            VCOMPANY_DESC := NVL(R.VCOMPANY_DESC, VCOMPANY || ' Company');
            VCLIENT := 'CLIENT-DDS';
            VCLIENT_DESC := 'DDS Client';
            
            EXECUTE IMMEDIATE 'select to_char(sysdate,'||''''||'yyyymmddhh24miss'||''''||') from dual' into v_V_DATETIME ;

            VSYS_TABLE_NAME := 'DEPARTMENT';
             VSQL := 'SELECT  E.ENTITY_ID ';
             VSQL := VSQL || 'FROM ' || VDBNAME || 'ENTITY E, ' || VDBNAME || 'GLOSSARY G WHERE E.ENTITY_TABLE_ID = G.TABLE_ID
             AND G.SYSTEM_TABLE_NAME = :1 AND E.ABBREVIATION = :2  AND E.DELETED_FLAG = 0 ';

             V_ERRORLOC := 'ORG01';

             BEGIN
               EXECUTE IMMEDIATE VSQL INTO VDEPT_ID USING VSYS_TABLE_NAME,VDEPARTMENT;
             EXCEPTION
               WHEN NO_DATA_FOUND THEN
                   VDEPT_ID:=0;
               END;

IF VDEPT_ID > 0 THEN
      P_ENTITY_ID:= VDEPT_ID;
      RETURN;
ELSE
---BEGIN LEVEL LOCATION
       V_ERRORLOC := 'ORG02';
       VSYS_TABLE_NAME := 'LOCATION';
       VSQL := 'SELECT  E.ENTITY_ID ';
       VSQL := VSQL || 'FROM ' || VDBNAME || 'ENTITY E, ' || VDBNAME || 'GLOSSARY G WHERE E.ENTITY_TABLE_ID = G.TABLE_ID
       AND G.SYSTEM_TABLE_NAME = :1 AND E.ABBREVIATION = :2 AND E.DELETED_FLAG = 0';

   BEGIN
         EXECUTE IMMEDIATE VSQL INTO VLOCATION_EID USING VSYS_TABLE_NAME,VLOCATION;
/*
             DBMS_OUTPUT.PUT_LINE('values: ');
             DBMS_OUTPUT.PUT_LINE(v_vsql);
             DBMS_OUTPUT.PUT_LINE(v_IENTITY_ID);
             DBMS_OUTPUT.PUT_LINE(v_VENTITY_TABLE_ID);
             DBMS_OUTPUT.PUT_LINE(v_VABBREVIATION);
             DBMS_OUTPUT.PUT_LINE(v_VDELETED_FLAG);
             DBMS_OUTPUT.PUT_LINE(v_VSYS_TABLE_NAME);
             DBMS_OUTPUT.PUT_LINE(v_VLOCATION);*/
       EXCEPTION
         WHEN NO_DATA_FOUND THEN
           VLOCATION_EID:=0;
          WHEN OTHERS THEN
               V_ERRORLOC := 'ORG03';
               V_ERROR_MESSAGE := SQLERRM;
               DDS_ERROR_LOG_CAPTURE(p_JOBID => p_JobId,
                          p_DA_ROW_ID => p_Da_Row_Id,
                          p_MODULE_NAME => '',
                          p_CALLING_ERROR_LOCATION => V_ERRORLOC,
                          p_CURRENT_ERROR_LOCATION => V_ERRORLOC,
                          p_ERROR_PROC_NAME => vProcName,
                          p_ERROR_MSG => V_ERROR_MESSAGE,
                          p_ERROR_COLUMNS => 'EXCEPTION',
                          p_ERROR_TABLE_TO_CHECK => '',
                          p_ERROR_KEY_COLUMN => P_KEYCOLUMN,
                          P_ERROR_COLUMN_KEY_VALUE => P_KEY_VALUE,
                          P_IS_VALIDATION => 0);

               V_ROWCOUNT := V_ROWCOUNT + 1;
       END;

   IF VLOCATION_EID > 0 THEN--LOCATION EXISTS
     V_ERRORLOC := 'ORG03';
     ----PRINT 'CREATE DUMMY FACILITY'
     ----PRINT 'CREATE DUMMY DEPRATMENT'
     --CREATE FACILITY
     VENTITY_TABLE_ID := 1011;
     VPARENT_EID := VLOCATION_EID;
     VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
     EXECUTE IMMEDIATE VSQLINSERT INTO VFACILITY_EID USING 'ENTITY';

     V_ERRORLOC := 'ORG04';
     VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
     VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
     EXECUTE IMMEDIATE VSQLINSERT USING VFACILITY_EID,VENTITY_TABLE_ID, VFACILITY_DESC,VFACILITY,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

     V_ERRORLOC := 'ORG05';
     VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
     EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

     vPARENT_EID := VFACILITY_EID;

     --CREATE DEPARTMENT
     V_ERRORLOC := 'ORG06';
     VENTITY_TABLE_ID := 1012;
     VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
     EXECUTE IMMEDIATE VSQLINSERT INTO VDEPT_ID USING 'ENTITY';

     V_ERRORLOC := 'ORG07';
     VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
     VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
     EXECUTE IMMEDIATE VSQLINSERT USING VDEPT_ID,VENTITY_TABLE_ID, VDEPARTMENT_DESC,VDEPARTMENT,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

     --print @VSQLINSERT
     V_ERRORLOC := 'ORG08';
     VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
     EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

     vPARENT_EID := VDEPT_ID;
 ELSE
   IF VLOCATION_EID = 0 THEN-- LOCATION DOES NOT EXISTS
     ---BEGIN LEVEL DIVISION
      V_ERRORLOC := 'ORG09';
      VSYS_TABLE_NAME := 'DIVISION';
      VSQL := 'SELECT E.ENTITY_ID ';
      VSQL := VSQL || 'FROM ' || VDBNAME || 'ENTITY E, ' || VDBNAME || 'GLOSSARY G ' || ' WHERE E.ENTITY_TABLE_ID = G.TABLE_ID
      AND G.SYSTEM_TABLE_NAME = :1  AND E.ABBREVIATION = :2 AND E.DELETED_FLAG = 0';
        BEGIN
          EXECUTE IMMEDIATE VSQL INTO VDIVISION_EID USING VSYS_TABLE_NAME,VDIVISION;
        EXCEPTION
           WHEN NO_DATA_FOUND THEN
             VDIVISION_EID:=0;
        END;
        ----print 'values: '
        ----print @vsql;
        ----PRINT @IENTITY_ID;
        ----PRINT @VENTITY_TABLE_ID;
        ----PRINT @VABBREVIATION;
        ----PRINT @VDELETED_FLAG;
        ----PRINT @VSYS_TABLE_NAME;
        ----PRINT @VDIVISION;
       IF VDIVISION_EID > 0 THEN-- DIVISON EXISTS
           V_ERRORLOC := 'ORG10';
           ----PRINT 'CREATE DUMMY LOCATION'
           ----PRINT 'CREATE DUMMY FACILITY'
           ----PRINT 'CREATE DUMMY DEPRATMENT'
           --CREATE LOCATION
           VENTITY_TABLE_ID := 1010;
           vPARENT_EID := VDIVISION_EID;
           VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
           EXECUTE IMMEDIATE VSQLINSERT INTO VLOCATION_EID USING 'ENTITY';

           V_ERRORLOC := 'ORG11';
           VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
           VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
           EXECUTE IMMEDIATE VSQLINSERT USING VLOCATION_EID,VENTITY_TABLE_ID, VLOCATION_DESC,VLOCATION,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;
           ----print @VSQLINSERT

           V_ERRORLOC := 'ORG12';
           VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
           EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

           vPARENT_EID := VLOCATION_EID;

           --CREATE FACILITY
           V_ERRORLOC := 'ORG13';
           VENTITY_TABLE_ID := 1011;
           VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
           EXECUTE IMMEDIATE VSQLINSERT INTO VFACILITY_EID USING 'ENTITY';

           V_ERRORLOC := 'ORG14';
           VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
           VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
           EXECUTE IMMEDIATE VSQLINSERT USING VFACILITY_EID,VENTITY_TABLE_ID, VFACILITY_DESC,VFACILITY,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;
           ----print @VSQLINSERT

           V_ERRORLOC := 'ORG15';
           VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
           EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

           vPARENT_EID := VFACILITY_EID;

           --CREATE DEPARTMENT
           V_ERRORLOC := 'ORG16';
           VENTITY_TABLE_ID := 1012;
           VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
           EXECUTE IMMEDIATE VSQLINSERT INTO VDEPT_ID USING 'ENTITY';

           V_ERRORLOC := 'ORG17';
           VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
           VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
           EXECUTE IMMEDIATE VSQLINSERT USING VDEPT_ID,VENTITY_TABLE_ID, VDEPARTMENT_DESC,VDEPARTMENT,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;
           ----print @VSQLINSERT

           V_ERRORLOC := 'ORG18';
           VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
           EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

           vPARENT_EID := VDEPT_ID;

        ELSE
          IF VDIVISION_EID = 0 THEN-- DIVISON DOES NOT EXISTS
           BEGIN---BEGIN LEVEL COMPANY
              V_ERRORLOC := 'ORG19';
              VSYS_TABLE_NAME := 'COMPANY';
              VSQL := 'SELECT E.ENTITY_ID ';
              VSQL := VSQL || 'FROM ' || VDBNAME || 'ENTITY E, ' || VDBNAME || 'GLOSSARY G ' || ' WHERE E.ENTITY_TABLE_ID = G.TABLE_ID
              AND G.SYSTEM_TABLE_NAME = :1 AND E.ABBREVIATION = :2 AND E.DELETED_FLAG = 0';

              BEGIN
                EXECUTE IMMEDIATE VSQL INTO VCOMPANY_EID USING VSYS_TABLE_NAME,VCOMPANY;
              EXCEPTION
                 WHEN NO_DATA_FOUND THEN
                   VCOMPANY_EID:=0;
              END;
              ----print 'values: '
              ----print @vsql;
              ----PRINT @IENTITY_ID;
              ----PRINT @VENTITY_TABLE_ID;
              ----PRINT @VABBREVIATION;
              ----PRINT @VDELETED_FLAG;
              ----PRINT @VSYS_TABLE_NAME;
              ----PRINT @VCOMPANY;
              IF VCOMPANY_EID > 0 THEN-- COMPANY EXISTS
                 V_ERRORLOC := 'ORG20';
                 ----PRINT 'CREATE DUMMY OPERATION'
                 ----PRINT 'CREATE DUMMY REGION'
                 ----PRINT 'CREATE DUMMY DIVISON'
                 ----PRINT 'CREATE DUMMY LOCATION'
                 ----PRINT 'CREATE DUMMY FACILITY'
                 ----PRINT 'CREATE DUMMY DEPRATMENT'
                 --CREATE OPERATION
                 VENTITY_TABLE_ID := 1007;
                 VPARENT_EID := VCOMPANY_EID;

                 VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT INTO VOPERATION_EID USING 'ENTITY';

                 V_ERRORLOC := 'ORG21';

                 VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                 VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                 EXECUTE IMMEDIATE VSQLINSERT USING VOPERATION_EID,VENTITY_TABLE_ID, VOPERATION_DESC,VOPERATION,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                 V_ERRORLOC := 'ORG23';

                 VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                 vPARENT_EID := VOPERATION_EID;

                 --CREATE REGION
                 V_ERRORLOC := 'ORG24';
                 VENTITY_TABLE_ID := 1008;

                 VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT INTO VREGION_EID USING 'ENTITY';

                 V_ERRORLOC := 'ORG25';
                 VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                 VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                 EXECUTE IMMEDIATE VSQLINSERT USING VREGION_EID,VENTITY_TABLE_ID, VREGION_DESC,VREGION,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                 V_ERRORLOC := 'ORG26';
                 VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                 VPARENT_EID := VREGION_EID;

                 --CREATE DIVISON
                 V_ERRORLOC := 'ORG27';
                 VENTITY_TABLE_ID := 1009;
                 VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT INTO VDIVISION_EID USING 'ENTITY';

                 V_ERRORLOC := 'ORG28';
                 VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                 VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                 EXECUTE IMMEDIATE VSQLINSERT USING VDIVISION_EID,VENTITY_TABLE_ID, VDIVISION_DESC,VDIVISION,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                 V_ERRORLOC := 'ORG29';
                 VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                 vPARENT_EID := VDIVISION_EID;

                 --CREATE LOCATION
                 V_ERRORLOC := 'ORG30';
                 VENTITY_TABLE_ID := 1010;
                 VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT INTO VLOCATION_EID USING 'ENTITY';

                 V_ERRORLOC := 'ORG31';
                 VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                 VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                 EXECUTE IMMEDIATE VSQLINSERT USING VLOCATION_EID,VENTITY_TABLE_ID, VLOCATION_DESC,VLOCATION,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                 V_ERRORLOC := 'ORG32';

                 VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                 vPARENT_EID := VLOCATION_EID;

                 --CREATE FACILITY
                 V_ERRORLOC := 'ORG33';
                 VENTITY_TABLE_ID := 1011;
                 VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT INTO VFACILITY_EID USING 'ENTITY';

                 V_ERRORLOC := 'ORG34';
                 VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                 VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                 EXECUTE IMMEDIATE VSQLINSERT USING VFACILITY_EID,VENTITY_TABLE_ID, VFACILITY_DESC,VFACILITY,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                 V_ERRORLOC := 'ORG35';
                 VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                 vPARENT_EID := VFACILITY_EID;

                 --CREATE DEPARTMENT
                 V_ERRORLOC := 'ORG36';
                 VENTITY_TABLE_ID := 1012;
                 VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT INTO VDEPT_ID USING 'ENTITY';


                 V_ERRORLOC := 'ORG37';
                 VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                 VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                 EXECUTE IMMEDIATE VSQLINSERT USING VDEPT_ID,VENTITY_TABLE_ID, VDEPARTMENT_DESC,VDEPARTMENT,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                 V_ERRORLOC := 'ORG38';

                 VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                 EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';
                 vPARENT_EID := VDEPT_ID;

              ELSE
                 IF VCOMPANY_EID = 0 THEN-- COMPANY DOES NOT EXISTS
                    ----PRINT 'CREATE DUMMY CLIENT'
                    ----PRINT 'CREATE DUMMY OPERATION'
                    ----PRINT 'CREATE DUMMY REGION'
                    ----PRINT 'CREATE DUMMY DIVISON'
                    ----PRINT 'CREATE DUMMY LOCATION'
                    ----PRINT 'CREATE DUMMY FACILITY'
                    ----PRINT 'CREATE DUMMY DEPRATMENT'
                    --CREATE CLIENT
                    V_ERRORLOC := 'ORG39';
                    VENTITY_TABLE_ID := 1005;
                    VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT INTO VCLIENT_EID USING 'ENTITY';

                    V_ERRORLOC := 'ORG40';
                    VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                    VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                    EXECUTE IMMEDIATE VSQLINSERT USING VCLIENT_EID,VENTITY_TABLE_ID, VCLIENT_DESC,VCLIENT,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                    ----print @VSQLINSERT
                    V_ERRORLOC := 'ORG41';
                    VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                    vPARENT_EID := VCLIENT_EID;

                    --CREATE COMPANY
                    V_ERRORLOC := 'ORG42';
                    VENTITY_TABLE_ID := 1006;

                    VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT INTO VCOMPANY_EID USING 'ENTITY';

                    V_ERRORLOC := 'ORG43';
                    VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                    VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                    EXECUTE IMMEDIATE VSQLINSERT USING VCOMPANY_EID,VENTITY_TABLE_ID, VCOMPANY_DESC,VCOMPANY,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                    V_ERRORLOC := 'ORG44';
                    VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                    vPARENT_EID := VCOMPANY_EID;

                    --CREATE OPERATION
                    V_ERRORLOC := 'ORG45';
                    VENTITY_TABLE_ID := 1007;

                    VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT INTO VOPERATION_EID USING 'ENTITY';

                    V_ERRORLOC := 'ORG46';
                    VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                    VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                    EXECUTE IMMEDIATE VSQLINSERT USING VOPERATION_EID,VENTITY_TABLE_ID, VOPERATION_DESC,VOPERATION,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                    V_ERRORLOC := 'ORG47';
                    VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                    vPARENT_EID := VOPERATION_EID;

                    --CREATE REGION
                    V_ERRORLOC := 'ORG48';
                    VENTITY_TABLE_ID := 1008;

                    VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT INTO VREGION_EID USING 'ENTITY';

                    V_ERRORLOC := 'ORG49';
                    VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                    VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                    EXECUTE IMMEDIATE VSQLINSERT USING VREGION_EID,VENTITY_TABLE_ID, VREGION_DESC,VREGION,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                    V_ERRORLOC := 'ORG50';

                    VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                    vPARENT_EID := VREGION_EID;

                    --CREATE DIVISON
                    V_ERRORLOC := 'ORG51';
                    VENTITY_TABLE_ID := 1009;

                    VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT INTO VDIVISION_EID USING 'ENTITY';

                    V_ERRORLOC := 'ORG52';

                    VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                    VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                    EXECUTE IMMEDIATE VSQLINSERT USING VDIVISION_EID,VENTITY_TABLE_ID, VDIVISION_DESC,VDIVISION,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                    V_ERRORLOC := 'ORG53';

                    VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                    vPARENT_EID := VDIVISION_EID;

                    --CREATE LOCATION
                    V_ERRORLOC := 'ORG54';
                    VENTITY_TABLE_ID := 1010;

                    VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT INTO VLOCATION_EID USING 'ENTITY';

                    V_ERRORLOC := 'ORG55';
                    VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                    VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                    EXECUTE IMMEDIATE VSQLINSERT USING VLOCATION_EID,VENTITY_TABLE_ID, VLOCATION_DESC,VLOCATION,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                    V_ERRORLOC := 'ORG56';

                    VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                    vPARENT_EID := VLOCATION_EID;

                    --CREATE FACILITY
                    V_ERRORLOC := 'ORG57';
                    VENTITY_TABLE_ID := 1011;

                    VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT INTO VFACILITY_EID USING 'ENTITY';

                    V_ERRORLOC := 'ORG58';
                    VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                    VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                    EXECUTE IMMEDIATE VSQLINSERT USING VFACILITY_EID,VENTITY_TABLE_ID, VFACILITY_DESC,VFACILITY,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                    ----print @VSQLINSERT

                    V_ERRORLOC := 'ORG59';

                    VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                    vPARENT_EID := VFACILITY_EID;

                    --CREATE DEPARTMENT
                    V_ERRORLOC := 'ORG60';
                    VENTITY_TABLE_ID := 1012;

                    VSQLINSERT := 'SELECT NEXT_UNIQUE_ID FROM ' || VDBNAME || 'GLOSSARY WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT INTO VDEPT_ID USING 'ENTITY';

                    V_ERRORLOC := 'ORG61';
                    VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)';
                    VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11)';
                    EXECUTE IMMEDIATE VSQLINSERT USING VDEPT_ID,VENTITY_TABLE_ID, VDEPARTMENT_DESC,VDEPARTMENT,VPARENT_EID,0,0,v_V_DATETIME,v_V_DATETIME, v_V_DDSUSER, v_V_DDSUSER;

                    V_ERRORLOC := 'ORG62';

                    VSQLINSERT := 'UPDATE ' || VDBNAME || 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = :1';
                    EXECUTE IMMEDIATE VSQLINSERT USING 'ENTITY';

                    vPARENT_EID := VDEPT_ID;

                 END IF;

              END IF;

           END;
          END IF;
        END IF;
   END IF;
 END IF;

END IF;
         ---END LEVEL COMPANY
         ---END LEVEL DIVISION
         ---END LEVEL LOCATION
         -- FETCH ORG_HIERARCHY
         V_ERRORLOC := 'ORG63';

         BEGIN
           VSQL := 'SELECT DIVISION_EID, REGION_EID, OPERATION_EID, COMPANY_EID,
           CLIENT_EID FROM ' || VDBNAME || 'ORG_HIERARCHY WHERE LOCATION_EID = :1 AND ROWNUM<= 1 ORDER BY LOCATION_EID DESC ';
             EXECUTE IMMEDIATE VSQL INTO VDIVISION_EID,VREGION_EID,VOPERATION_EID,VCOMPANY_EID,VCLIENT_EID USING VLOCATION_EID;
        EXCEPTION
           WHEN NO_DATA_FOUND THEN
             NULL;
         END;
         ---- CREATE ORG_HIERARCHY
         V_ERRORLOC := 'ORG64';
         VSQLINSERT := 'INSERT INTO ' || VDBNAME || 'ORG_HIERARCHY(DEPARTMENT_EID, FACILITY_EID, LOCATION_EID, DIVISION_EID, REGION_EID, OPERATION_EID, COMPANY_EID, CLIENT_EID)';
         VSQLINSERT := VSQLINSERT || ' VALUES(:1, :2, :3, :4, :5, :6, :7, :8)';

         EXECUTE IMMEDIATE  VSQLINSERT USING VDEPT_ID, VFACILITY_EID, VLOCATION_EID, VDIVISION_EID, VREGION_EID, VOPERATION_EID,VCOMPANY_EID , VCLIENT_EID;

         P_ENTITY_ID := VDEPT_ID;
         COMMIT;

      END;
  EXCEPTION
   WHEN OTHERS THEN
      V_ERROR_MESSAGE := SQLERRM;
       DDS_ERROR_LOG_CAPTURE(p_JOBID => p_JobId,
                          p_DA_ROW_ID => p_Da_Row_Id,
                          p_MODULE_NAME => NULL,
                          p_CALLING_ERROR_LOCATION => V_ERRORLOC,
                          p_CURRENT_ERROR_LOCATION => V_ERRORLOC,
                          p_ERROR_PROC_NAME => vProcName,
                          p_ERROR_MSG => V_ERROR_MESSAGE,
                          p_ERROR_COLUMNS => 'EXCEPTION',
                          p_ERROR_TABLE_TO_CHECK => '',
                          p_ERROR_KEY_COLUMN => P_KEYCOLUMN,
                          P_ERROR_COLUMN_KEY_VALUE => P_KEY_VALUE,
                          P_IS_VALIDATION => 0);
      V_ROWCOUNT := V_ROWCOUNT + 1;
      ROLLBACK;
      P_ENTITY_ID := -1;
  END;
   END LOOP;
END DDS_PROCESSORG_HIERARCHY;
