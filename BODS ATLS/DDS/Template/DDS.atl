#__AW_Repository_Version '14.2.12.0000';
#__AW_Product_Version '14.2.12.2235';
#__AW_ATL_Locale 'eng_us.utf-8';
 AlGUIComment ("ActaName_1" = 'RDate_created', "ActaName_2" = 'RDate_modified', "ActaName_3" = 'RSavedAfterCheckOut', "ActaValue_1" = 'Tue Dec 24 15:35:52 2019', "ActaValue_2" = 'Thu Apr 30 14:15:13 2020', "ActaValue_3" = 'YES', "x" = '-1', "y" = '-1')
CREATE DATABASE DATASTORE DS_RMDB::'85be3700-2d42-44bd-92f4-b49c8cdb666b' SET ("DBLiveLoad" = 'no', "application_type" = 'Custom', "cdc_enabled" = 'no', "cdc_type" = 'native', "datastore_repotype" = 'local', "ds_configuration_enabled" = 'yes', "ds_configurations" = '<?xml version="1.0" encoding="WINDOWS-1252" ?>
<DSConfigurations>
<DSConfiguration default="true" name="MSSQL_2008">
<case_sensitive>yes</case_sensitive>
<cdc_ra_password>+0400000000120303000803E8E26F0B60BBEBB84E78C68249460BA7DD39461BAEEBA7BCFC860526D75FACE554242F4EF4996A124385D5449050</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E8EFEF353395ACA2A9AEFF7CF6A1CA8C2386B68667BC3E9502AB95529CDEABBF8EBF9F0E6523E7EF5E876F087257</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_subtype>On Premise</database_subtype>
<database_type>Microsoft_SQL_Server</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>DBO</db_alias_user1>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<mssql_windows_authentication>no</mssql_windows_authentication>
<password>+0400000000120303000803E88F42109DAAE094CEE94C9F87752D78E3DAA108AD600AB202ADAF5E2EF8BB01DEC463320899ADAC74D71C13B91EBD8BA1DEEC2F6C532C548C0D1B7C5B6D</password>
<server_codepage>&lt;default&gt;</server_codepage>
<sql_server_database>SQL Database Name</sql_server_database>
<sql_server_dataserver>SQL Server Name</sql_server_dataserver>
<sql_server_version>Microsoft SQL Server 2008</sql_server_version>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMDBUser</user>
</DSConfiguration>
<DSConfiguration default="false" name="MSSQL_2012">
<case_sensitive>no</case_sensitive>
<cdc_ra_password>+0400000000120303000803E8F3FEE0739517120C68F42BA3841B9574D384171AF594A9162E7325656956C24D07F689A8BF79D2AA64D823F627</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E8EE0942CDD7F29B71BC4466FE40D837398E574CF65AFE0F6A4B9F083D76D13F4E5F7246D11DB9188F29E51A6E1E</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_subtype>On Premise</database_subtype>
<database_type>Microsoft_SQL_Server</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>DBO</db_alias_user1>
<db_mssql_change_data_tracking_method>MSSQL_Replication</db_mssql_change_data_tracking_method>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<mssql_windows_authentication>no</mssql_windows_authentication>
<server_codepage>&lt;default&gt;</server_codepage>
<sql_server_database>SQL Database Name</sql_server_database>
<sql_server_dataserver>SQL Server Name</sql_server_dataserver>
<sql_server_version>Microsoft SQL Server 2012</sql_server_version>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMDBUser</user>
</DSConfiguration>
<DSConfiguration default="false" name="MSSQL_2014">
<case_sensitive>no</case_sensitive>
<cdc_ra_password>+0400000000120303000803E8C7852FD512C04F70FE3B2804378D5A7774373647F5F20EFB018147EC7611B10418E9DBF4B84FD81BFAFFE54BD6</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E8C3EAB610094965063A3FDA78E35E4C8508F445C9A378BE5D123F4E201ACD22DA99FA2BB692F949ADC09D0F1BDB</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_subtype>On Premise</database_subtype>
<database_type>Microsoft_SQL_Server</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>DBO</db_alias_user1>
<db_mssql_change_data_tracking_method>MSSQL_Replication</db_mssql_change_data_tracking_method>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<mssql_windows_authentication>no</mssql_windows_authentication>
<password>+0400000000120303000803E8BE5D9EA4033499400B4BB2FBFA4B54AB9F03790686DFD94A20BEF77D438FD77975466CF1C15D37B7F96B6628D7758D4C5E5C</password>
<server_codepage>&lt;default&gt;</server_codepage>
<sql_server_database>SQL Database Name</sql_server_database>
<sql_server_dataserver>SQL Server Name</sql_server_dataserver>
<sql_server_version>Microsoft SQL Server 2014</sql_server_version>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMDBUser</user>
</DSConfiguration>
<DSConfiguration default="false" name="ORACLE_10g">
<Oracle_default_number_precision>28</Oracle_default_number_precision>
<Oracle_default_number_scale>7</Oracle_default_number_scale>
<case_sensitive>no</case_sensitive>
<cdc_ra_password>+0400000000120303000803E82B4569F2F47A50FCD34AE566ECA02BBA16EC7171FD165733473ED75929F76F4EE4DF387BC17E1AF46D41B82E36</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E83C7950B52B8817C93545EA9F295136B5EF3E064FD7C35AB5583E144702E9146B690A143BE67601C28B1726B25F</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_type>Oracle</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>RMDBUSER</db_alias_user1>
<db_dsnless>no</db_dsnless>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<oracle_host_string>ORACLE Connection Name</oracle_host_string>
<oracle_version>Oracle 10g</oracle_version>
<server_codepage>&lt;default&gt;</server_codepage>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMDBUser</user>
</DSConfiguration>
<DSConfiguration default="false" name="ORACLE_11g">
<Oracle_default_number_precision>28</Oracle_default_number_precision>
<Oracle_default_number_scale>7</Oracle_default_number_scale>
<case_sensitive>no</case_sensitive>
<cdc_ra_password>+0400000000120303000803E8517037BC35394C330F8F8D50DB7CEED220DBC4E0DC97E0EBFB36DAF6430BC9F2944582A15D429E9BEC3775F74C</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E85A523505FB6DA52D1FEC4C1FA87B9F136FBF1EB21B90556E924969DB7004832914FE994325958F24C03F84FBC6</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_type>Oracle</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>RMDBUSER</db_alias_user1>
<db_dsnless>no</db_dsnless>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<oracle_host_string>ORACLE Connection Name</oracle_host_string>
<oracle_version>Oracle 11g</oracle_version>
<server_codepage>&lt;default&gt;</server_codepage>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMDBUser</user>
</DSConfiguration>
<DSConfiguration default="false" name="ORACLE_12c">
<Oracle_default_number_precision>28</Oracle_default_number_precision>
<Oracle_default_number_scale>7</Oracle_default_number_scale>
<case_sensitive>no</case_sensitive>
<cdc_ra_password>+0400000000120303000803E86BD4D877E33F87B5A264E4E9D3D105BB99D3E7E2BC06CE519D82F2DC773E302D641131141EC5B8F81A3014E8D1</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E844FB53564B38CEB4B56035FE57D1136A8E40E346F17CD80CCF02B519CF78B23A59412DAFE78A98B18E7F19D116</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_type>Oracle</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>RMDBUSER</db_alias_user1>
<db_dsnless>no</db_dsnless>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<oracle_host_string>ORACLE Connection Name</oracle_host_string>
<oracle_version>Oracle 12c</oracle_version>
<password>+0400000000120303000803E80A158DFAB68EC14AB443D224A64D5407822491D4EDD5FCEA82B02A2A23E60E9367B052247DF529EDAE91CCF7F6C748540A5CC3FDC536CE351D5CF06740</password>
<server_codepage>&lt;default&gt;</server_codepage>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMDBUser</user>
</DSConfiguration>
</DSConfigurations>
', "enable_data_transfer" = 'yes', "import_unknown_type" = 'no', "name" = 'DS_RMDB', "pcache_force_utf16" = 'no', "unknown_type_size" = '255');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Apr 17 07:18:07 2020', "ActaValue_3" = 'Thu Apr 30 14:17:01 2020', "x" = '-1', "y" = '-1')
CREATE DATABASE DATASTORE DS_RMX_STAGING::'af772e8b-8325-4a88-9e13-5fb55c9a56d7' SET ("DBLiveLoad" = 'no', "application_type" = 'Custom', "cdc_enabled" = 'no', "cdc_type" = 'native', "datastore_repotype" = 'local', "ds_configuration_enabled" = 'yes', "ds_configurations" = '<?xml version="1.0" encoding="WINDOWS-1252" ?>
<DSConfigurations>
<DSConfiguration default="true" name="MSSQL_2008">
<case_sensitive>yes</case_sensitive>
<cdc_ra_password>+0400000000120303000803E8DA7550692D6509089C946C4057EFF53330571DDCAECFD6C4CEBC7A5895175912574DE0B4438D5618A31B3A3D93</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E886F350F293ED9DD7E0EAC1B68E84999EC699E3E3823103A6F8E863C8C43C0B216B05E93507E2774136012C7916</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_subtype>On Premise</database_subtype>
<database_type>Microsoft_SQL_Server</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>DBO</db_alias_user1>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<mssql_windows_authentication>no</mssql_windows_authentication>
<password>+0400000000120303000803E8C1CA77B421DF1E1ED07B524504FFD9A4E2FF422E93B4943E030412F7D0B6E4F35D3489B2FE3409C0DA23E9E4742D6717550EEE99E522</password>
<server_codepage>&lt;default&gt;</server_codepage>
<sql_server_database>RMX Staging Database</sql_server_database>
<sql_server_dataserver>SQL Server Name</sql_server_dataserver>
<sql_server_version>Microsoft SQL Server 2008</sql_server_version>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMXStagingDBUser</user>
</DSConfiguration>
<DSConfiguration default="false" name="MSSQL_2012">
<case_sensitive>yes</case_sensitive>
<cdc_ra_password>+0400000000120303000803E8E50BCF0E7BB67992A602641D7BD5633B6D7B49B60948BF21323FF0149A65A262CEFB69BE4ED3A4D5B893DAAAC6</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E86206B78725BD3ED21C86336F6E78F56C1F79702D3AC2B41820257F6E282BB6F7314B687C41F50C4C348F4A583E</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_subtype>On Premise</database_subtype>
<database_type>Microsoft_SQL_Server</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>DBO</db_alias_user1>
<db_mssql_change_data_tracking_method>MSSQL_Replication</db_mssql_change_data_tracking_method>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<mssql_windows_authentication>no</mssql_windows_authentication>
<server_codepage>&lt;default&gt;</server_codepage>
<sql_server_database>RMX Staging Database</sql_server_database>
<sql_server_dataserver>SQL Server Name</sql_server_dataserver>
<sql_server_version>Microsoft SQL Server 2012</sql_server_version>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMXStagingDBUser</user>
</DSConfiguration>
<DSConfiguration default="false" name="MSSQL_2014">
<case_sensitive>no</case_sensitive>
<cdc_ra_password>+0400000000120303000803E8BF67E87BCE4DB37EA6B6CC4544D5D7933544E3EA08D673B411499D585EA9C66938C114D62CA185F3E1DC6A9480</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E84DF6144276C1FEFD8BB3D4E7A9EFC08B97BE2B5757CFA49A0027ED5C79C639190BC66DA9CF034110D93B42C64C</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_subtype>On Premise</database_subtype>
<database_type>Microsoft_SQL_Server</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>DBO</db_alias_user1>
<db_mssql_change_data_tracking_method>MSSQL_Replication</db_mssql_change_data_tracking_method>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<mssql_windows_authentication>no</mssql_windows_authentication>
<password>+0400000000120303000803E8EDBB377381B99C106605902952C3690509FC1448A40D71C21D1061826DF0E695F182A68CD77BDA4E52A794747F45DDABF91D</password>
<server_codepage>&lt;default&gt;</server_codepage>
<sql_server_database>RMX Staging Database</sql_server_database>
<sql_server_dataserver>SQL Server Name</sql_server_dataserver>
<sql_server_version>Microsoft SQL Server 2014</sql_server_version>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMXStagingDBUser</user>
</DSConfiguration>
<DSConfiguration default="false" name="ORACLE_11g">
<Oracle_default_number_precision>28</Oracle_default_number_precision>
<Oracle_default_number_scale>7</Oracle_default_number_scale>
<case_sensitive>no</case_sensitive>
<cdc_ra_password>+0400000000120303000803E84581C120D7D746E1F36DA60C23800CF97C23E9D27C44783495AADDB085693D55CED7EB8E50E562D10FAF421E0D</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E8A4D56F673E9243BF3AD0FA01455EA3A571529892460495BBE5BB71F8DB4877E2170D403B465013195C5C64E4CF</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_type>Oracle</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>RMXSTAGINGDBUSER</db_alias_user1>
<db_dsnless>no</db_dsnless>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<oracle_host_string>Oracle Connection Name</oracle_host_string>
<oracle_version>Oracle 11g</oracle_version>
<server_codepage>&lt;default&gt;</server_codepage>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMXStagingDBUser</user>
</DSConfiguration>
<DSConfiguration default="false" name="ORACLE_12c">
<Oracle_default_number_precision>28</Oracle_default_number_precision>
<Oracle_default_number_scale>7</Oracle_default_number_scale>
<case_sensitive>no</case_sensitive>
<cdc_ra_password>+0400000000120303000803E86558C0C7B5DB8DC5F6AA4D9D5A85CB12ED5ADA2131701F5E3D15A37AAD12DC10C1FE3CB0E47784A45BEBC7340B</cdc_ra_password>
<cdc_ra_server>DS_RA</cdc_ra_server>
<cdc_ra_user>sa</cdc_ra_user>
<cdc_rs_password>+0400000000120303000803E87FE9F758B9B7D66E384BDD34EB5C388244FC67A6AB09180A499761E2647EA9E83DBD4A3E4B93ECC763045AA026</cdc_rs_password>
<cdc_rs_retention>0</cdc_rs_retention>
<cdc_rs_server>SAMPLE_RS</cdc_rs_server>
<cdc_rs_user>ds</cdc_rs_user>
<database_type>Oracle</database_type>
<db_alias_name1>DBO</db_alias_name1>
<db_alias_user1>RMXSTAGINGDBUSER</db_alias_user1>
<db_dsnless>no</db_dsnless>
<loader_xact_size>1000</loader_xact_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
<oracle_host_string>Oracle Connection Name</oracle_host_string>
<oracle_version>Oracle 12c</oracle_version>
<password>+0400000000120303000803E8DE12B963864BFB02623CF7F871418176B6DE699EC6BF2679A6B967498864B0D27684DCB94A59FCD3744260AEDCE88429FB71267FBED2</password>
<server_codepage>&lt;default&gt;</server_codepage>
<use_ssl_encryption>no</use_ssl_encryption>
<user>RMXStagingDBUser</user>
</DSConfiguration>
</DSConfigurations>
', "enable_data_transfer" = 'yes', "import_unknown_type" = 'no', "name" = 'DS_RMX_STAGING', "pcache_force_utf16" = 'no', "unknown_type_size" = '255');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Nov 14 16:09:56 2017', "x" = '-1', "y" = '-1')
CREATE __BODI_FILELOCATION DATASTORE AmazonS3::'e3c98d0b-5ac6-4f89-9b1c-5edd045d5bf2' SET ("DBLiveLoad" = 'no', "application_type" = 'File Location', "cdc_enabled" = 'no', "cdc_type" = 'native', "datastore_repotype" = 'local', "ds_configuration_enabled" = 'yes', "ds_configurations" = '<?xml version="1.0" encoding="WINDOWS-1252" ?>
<DSConfigurations>
<DSConfiguration default="true" name="Configuration1">
<case_sensitive></case_sensitive>
<fl_bucket>‘%bucketname%\'</fl_bucket>
<fl_communication>https</fl_communication>
<fl_compression_type>none</fl_compression_type>
<fl_conn_retry_count>10</fl_conn_retry_count>
<fl_download_chunk_size>5</fl_download_chunk_size>
<fl_number_of_threads>1</fl_number_of_threads>
<fl_protocol>Amazon S3 Cloud Storage</fl_protocol>
<fl_remote_dir>DA FILES</fl_remote_dir>
<fl_s3_accesskey></fl_s3_accesskey>
<fl_s3_region>us-west-2</fl_s3_region>
<fl_s3_secretkey></fl_s3_secretkey>
<fl_upload_chunk_size>5</fl_upload_chunk_size>
<locale_codepage>&lt;default&gt;</locale_codepage>
<locale_language>&lt;default&gt;</locale_language>
<locale_territory>&lt;default&gt;</locale_territory>
</DSConfiguration>
</DSConfigurations>
', "enable_data_transfer" = 'yes', "import_unknown_type" = 'no', "name" = 'AmazonS3', "pcache_force_utf16" = 'no', "unknown_type_size" = '255');

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Fri May  1 03:52:03 2020' )
CREATE TABLE DS_RMDB.DBO.DATA_INTEGRATOR(OPTIONSET_ID DECIMAL(10, 0)  KEY  NOT NULL , 
USER_ID DECIMAL(10, 0)  NULL , 
MODULE_NAME VARCHAR(50)  NULL , 
OPTIONSET_NAME VARCHAR(50)  NULL , 
XML_STRING LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
DTTM_LAST_RUN VARCHAR(16)  NULL , 
FILE_COUNT DECIMAL(28, 7)  NULL ) 
PRIMARY KEY (OPTIONSET_ID) 
CREATE_INDEX DATA_INTEGRATOR_PK ON (OPTIONSET_ID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:22:16 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.DA_STATISTICS(JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
PASS_COUNT DECIMAL(28, 7)  KEY  NOT NULL , 
STAGE DECIMAL(28, 7)  NULL , 
IS_VALIDATION DECIMAL(28, 7)  NULL , 
IMPORT_MODULE_NAME VARCHAR(50)  NULL , 
TABLE_NAME VARCHAR(50)  KEY  NOT NULL , 
INPUT_ROW_COUNT DECIMAL(28, 7)  NULL , 
START_VALID_ROW_COUNT DECIMAL(28, 7)  NULL , 
START_INVALID_ROW_COUNT DECIMAL(28, 7)  NULL , 
END_VALID_ROW_COUNT DECIMAL(28, 7)  NULL , 
END_INVALID_ROW_COUNT DECIMAL(28, 7)  NULL , 
END_UPDATE_ROW_COUNT DECIMAL(28, 7)  NULL , 
TOTAL_ROWS DECIMAL(28, 7)  NULL , 
TOTAL_FAILED_VALIDATIONS DECIMAL(28, 7)  NULL , 
START_TIME VARCHAR(14)  NULL , 
END_TIME VARCHAR(14)  NULL ) 
PRIMARY KEY (JOBID, PASS_COUNT, TABLE_NAME) 
CREATE_INDEX DA_STATISTICS_PK ON (JOBID, PASS_COUNT, TABLE_NAME) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:22:18 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_ADJUSTER(JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
DA_ROW_ID DECIMAL(28, 7)  KEY  NOT NULL , 
INVALID_ROW DECIMAL(28, 7)  NOT NULL , 
RECORD_TYPE VARCHAR(25)  NULL , 
CLAIM_ID VARCHAR(25)  NULL , 
ADJ_DATE VARCHAR(8)  NULL , 
ADJ_TIME VARCHAR(6)  NULL , 
FIRST_NAME VARCHAR(255)  NULL , 
LAST_NAME VARCHAR(255)  NULL , 
TEXT LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
ADJUSTER_TYPE VARCHAR(25)  NULL , 
NAME_TYPE VARCHAR(25)  NULL ) 
PRIMARY KEY (JOBID, DA_ROW_ID) 
CREATE_INDEX DDS_ADJUSTER_PK ON (JOBID, DA_ROW_ID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:22:29 2020' , 
ActaName_8 = 'RDate_last_loaded',ActaValue_8 = 'Fri May  1 04:45:31 2020' , 
ActaName_9 = 'RTotal_Number_Of_Rows_Processed',ActaValue_9 = '1' , 
ActaName_10 = 'RNumber_Of_Rows_Rejected',ActaValue_10 = '0' , 
ActaName_11 = 'RNumber_Of_Inserts',ActaValue_11 = '1' , 
ActaName_12 = 'RNumber_Of_Updates',ActaValue_12 = '0' , 
ActaName_13 = 'RNumber_Of_Deletes',ActaValue_13 = '0' , 
ActaName_14 = 'RElapsed_Time_For_Load',ActaValue_14 = '0 Seconds' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_CLAIM(DA_ROW_ID DECIMAL(28, 7)  KEY  NOT NULL , 
JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
INVALID_ROW DECIMAL(28, 7)  NULL , 
RECORD_TYPE VARCHAR(1)  NULL , 
CLAIM_NUMBER VARCHAR(25)  NULL , 
CLAIM_SUFFIX DECIMAL(28, 7)  NULL , 
CLAIM_TYPE VARCHAR(25)  NULL , 
DIVISION VARCHAR(25)  NULL , 
LOCATION VARCHAR(25)  NULL , 
DEPARTMENT VARCHAR(25)  NULL , 
COMPANY VARCHAR(25)  NULL , 
COUNTRY VARCHAR(20)  NULL  SET("Content_Type" = 'COUNTRY'), 
DIVISION_DESC VARCHAR(255)  NULL , 
LOCATION_DESC VARCHAR(255)  NULL , 
DEPARTMENT_DESC VARCHAR(255)  NULL , 
COMPANY_DESC VARCHAR(255)  NULL , 
TIME_OF_CLAIM VARCHAR(6)  NULL , 
DATE_OF_LOSS VARCHAR(8)  NULL , 
DATE_REPORTED VARCHAR(8)  NULL , 
DATE_OF_CLAIM VARCHAR(8)  NULL , 
DATE_CLOSED VARCHAR(14)  NULL , 
DATE_REOPENED VARCHAR(8)  NULL , 
CLAIM_STATUS VARCHAR(25)  NULL , 
RESERVE_A_OPENING DOUBLE  NULL , 
RESERVE_A_CURRENT DOUBLE  NULL , 
RESERVE_A_DATE VARCHAR(8)  NULL , 
PAID_A_TOTAL DOUBLE  NULL , 
COLLECTION_A_TOTAL DOUBLE  NULL , 
RESERVE_B_OPENING DOUBLE  NULL , 
RESERVE_B_CURRENT DOUBLE  NULL , 
RESERVE_B_DATE VARCHAR(8)  NULL , 
PAID_B_TOTAL DOUBLE  NULL , 
COLLECTION_B_TOTAL DOUBLE  NULL , 
RESERVE_C_OPENING DOUBLE  NULL , 
RESERVE_C_CURRENT DOUBLE  NULL , 
RESERVE_C_DATE VARCHAR(8)  NULL , 
PAID_C_TOTAL DOUBLE  NULL , 
COLLECTION_C_TOTAL DOUBLE  NULL , 
RESERVE_D_OPENING DOUBLE  NULL , 
RESERVE_D_CURRENT DOUBLE  NULL , 
RESERVE_D_DATE VARCHAR(8)  NULL , 
PAID_D_TOTAL DOUBLE  NULL , 
COLLECTION_D_TOTAL DOUBLE  NULL , 
CAUSE_CODE VARCHAR(25)  NULL , 
CLAIMANT_LASTNAME VARCHAR(255)  NULL , 
CLAIMANT_FIRSTNAME VARCHAR(255)  NULL , 
CLAIMANT_SSN VARCHAR(20)  NULL , 
CLAIMANT_ADDRESS1 VARCHAR(100)  NULL , 
CLAIMANT_ADDRESS2 VARCHAR(100)  NULL , 
CLAIMANT_CITY VARCHAR(50)  NULL , 
CLAIMANT_STATE VARCHAR(4)  NULL , 
CLAIMANT_ZIP VARCHAR(10)  NULL , 
CLAIMANT_SEX VARCHAR(25)  NULL , 
CLAIMANT_BIRTH_DT VARCHAR(8)  NULL , 
CLAIMANT_PHONE VARCHAR(30)  NULL , 
CLAIMANT_COMMENT LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
DEF_LASTNAME VARCHAR(255)  NULL , 
DEF_FIRSTNAME VARCHAR(255)  NULL , 
DEF_ADDRESS VARCHAR(100)  NULL , 
DEF_CITY VARCHAR(50)  NULL , 
DEF_STATE VARCHAR(4)  NULL , 
DEF_ZIP VARCHAR(10)  NULL , 
DEF_PHONE VARCHAR(30)  NULL , 
DEF_COMMENT LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
CLOSURE_METHOD VARCHAR(25)  NULL , 
DESCRIPTION LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
SERVICE VARCHAR(25)  NULL , 
ICD10_1 VARCHAR(25)  NULL , 
ICD10_2 VARCHAR(25)  NULL , 
ICD10_3 VARCHAR(25)  NULL , 
ICD10_4 VARCHAR(25)  NULL , 
ICD10_5 VARCHAR(25)  NULL , 
DIAGNOSIS_1 VARCHAR(25)  NULL , 
DIAGNOSIS_2 VARCHAR(25)  NULL , 
DIAGNOSIS_3 VARCHAR(25)  NULL , 
DIAGNOSIS_4 VARCHAR(25)  NULL , 
DIAGNOSIS_5 VARCHAR(25)  NULL , 
POLICY_NUMBER VARCHAR(40)  NULL , 
POLICY_EFFECT_DATE VARCHAR(8)  NULL , 
POLICY_EXPIRE_DATE VARCHAR(8)  NULL , 
SUIT_DATE VARCHAR(8)  NULL , 
CASE_NUMBER VARCHAR(22)  NULL , 
EVENT_NUMBER VARCHAR(25)  NULL , 
COMMENTS LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
ILLNESS_CODE VARCHAR(25)  NULL , 
INJURY_CODE_1 VARCHAR(25)  NULL , 
INJURY_CODE_2 VARCHAR(25)  NULL , 
INJURY_CODE_3 VARCHAR(25)  NULL , 
INJURY_CODE_4 VARCHAR(25)  NULL , 
INJURY_CODE_5 VARCHAR(25)  NULL , 
BODY_PART_1 VARCHAR(25)  NULL , 
BODY_PART_2 VARCHAR(25)  NULL , 
BODY_PART_3 VARCHAR(25)  NULL , 
BODY_PART_4 VARCHAR(25)  NULL , 
BODY_PART_5 VARCHAR(25)  NULL , 
EMP_DEPARTMENT VARCHAR(25)  NULL , 
OCCUPATION VARCHAR(25)  NULL , 
DATE_OF_BIRTH VARCHAR(8)  NULL , 
DATE_OF_HIRE VARCHAR(8)  NULL , 
DATE_OF_DEATH VARCHAR(8)  NULL , 
OSHA_RECORDABLE VARCHAR(8)  NULL , 
EMPLOYEE_SEX VARCHAR(8)  NULL , 
WEEKLY_WAGE_RATE DOUBLE  NULL , 
HOURLY_WAGE_RATE DOUBLE  NULL , 
WEEKLY_HOURS DOUBLE  NULL , 
NCCI_CLASS_CODE VARCHAR(25)  NULL , 
ACCIDENT_STATE VARCHAR(4)  NULL , 
MARITAL_STATUS VARCHAR(25)  NULL , 
DEPENDENT_LNAME VARCHAR(255)  NULL , 
DEPENDENT_FNAME VARCHAR(255)  NULL , 
DEPENDENT_BIRTH_DT VARCHAR(8)  NULL , 
LICENSE_NUMBER VARCHAR(22)  NULL , 
LICENSE_EXPIR_DATE VARCHAR(8)  NULL , 
LICENSE_TYPE VARCHAR(22)  NULL , 
LICENSE_RESTRICT VARCHAR(25)  NULL , 
RETURN_WORK_DATE VARCHAR(8)  NULL , 
ACTIVE_FLAG VARCHAR(1)  NULL , 
EMPLOYER_SIC_CODE VARCHAR(25)  NULL , 
EMPLOYER_PAYROLL_CLASS_CODE VARCHAR(25)  NULL , 
VEHICLE_ID VARCHAR(20)  NULL , 
VEHICLE_YEAR VARCHAR(4)  NULL , 
VEHICLE_MAKE VARCHAR(20)  NULL , 
EMPLOYEE_ID VARCHAR(20)  NULL , 
VEHICLE_MODEL VARCHAR(50)  NULL , 
FILE_NUMBER VARCHAR(32)  NULL , 
DATE_LAST_WORKED VARCHAR(8)  NULL , 
CLAIMANT_MIDDLENAME VARCHAR(255)  NULL , 
ACCIDENT_DESC VARCHAR(25)  NULL , 
ACCIDENT_PREVENTABLE VARCHAR(1)  NULL , 
USER_FIELD_A LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
USER_FIELD_B VARCHAR(255)  NULL , 
USER_FIELD_C VARCHAR(255)  NULL , 
USER_FIELD_D VARCHAR(255)  NULL , 
USER_FIELD_E VARCHAR(255)  NULL , 
USER_FIELD_F VARCHAR(255)  NULL , 
USER_FIELD_G VARCHAR(255)  NULL , 
USER_FIELD_H VARCHAR(255)  NULL , 
USER_FIELD_I VARCHAR(255)  NULL , 
USER_FIELD_J VARCHAR(255)  NULL , 
USER_FIELD_K VARCHAR(255)  NULL , 
USER_FIELD_L VARCHAR(255)  NULL , 
USER_FIELD_M VARCHAR(255)  NULL , 
USER_FIELD_N VARCHAR(255)  NULL , 
USER_FIELD_O VARCHAR(255)  NULL , 
USER_FIELD_P VARCHAR(255)  NULL , 
USER_FIELD_Q VARCHAR(255)  NULL , 
USER_FIELD_R VARCHAR(255)  NULL , 
USER_FIELD_S VARCHAR(255)  NULL , 
USER_FIELD_T VARCHAR(255)  NULL , 
USER_FIELD_U VARCHAR(255)  NULL , 
USER_FIELD_V VARCHAR(255)  NULL , 
USER_FIELD_W VARCHAR(255)  NULL , 
USER_FIELD_X VARCHAR(255)  NULL , 
USER_FIELD_Y VARCHAR(255)  NULL , 
USER_FIELD_Z VARCHAR(255)  NULL , 
PLAN_NAME VARCHAR(20)  NULL , 
CLASS_NAME VARCHAR(20)  NULL , 
DISABIL_FROM_DATE VARCHAR(8)  NULL , 
DISABIL_TO_DATE VARCHAR(8)  NULL , 
BENEFITS_START VARCHAR(8)  NULL , 
BENEFITS_THROUGH VARCHAR(8)  NULL , 
DIS_TYPE VARCHAR(25)  NULL , 
BEN_CALC_PAY_START VARCHAR(8)  NULL , 
BEN_CALC_PAY_TO VARCHAR(8)  NULL , 
FEDERAL_TAX_FLAG VARCHAR(1)  NULL , 
SOCIAL_SEC_TAX_FLAG VARCHAR(1)  NULL , 
MEDICARE_TAX_FLAG VARCHAR(1)  NULL , 
STATE_TAX_FLAG VARCHAR(1)  NULL , 
STD_DISABIL_TYPE VARCHAR(25)  NULL , 
MONTHLY_RATE DOUBLE  NULL , 
ELIG_DIS_BEN_FLAG VARCHAR(1)  NULL , 
DIS_OPTION_CODE VARCHAR(25)  NULL , 
PENSION_AMT DOUBLE  NULL , 
SS_AMT DOUBLE  NULL , 
OTHER_AMT DOUBLE  NULL , 
RESERVE_E_OPENING DOUBLE  NULL , 
RESERVE_E_CURRENT DOUBLE  NULL , 
RESERVE_E_DATE VARCHAR(8)  NULL , 
PAID_E_TOTAL DOUBLE  NULL , 
COLLECTION_E_TOTAL DOUBLE  NULL , 
CLAIMANT_TYPE VARCHAR(25)  NULL , 
OSHA_ACC_DESC VARCHAR(16)  NULL , 
DATE_WORKED_LAST VARCHAR(8)  NULL , 
DATE_RETURNED VARCHAR(8)  NULL , 
STATE_DURATION VARCHAR(4)  NULL , 
DATE_FIRST_RESTRICT VARCHAR(8)  NULL , 
DATE_LAST_RESTRICT VARCHAR(8)  NULL , 
PERCENT_DISABLED VARCHAR(4)  NULL , 
SETTLEMENT_METHOD VARCHAR(25)  NULL , 
MGND_CARE_ORG_TYPE VARCHAR(25)  NULL , 
DISPUTED_CASE_FLAG VARCHAR(1)  NULL , 
NCCI_LOSS_TYPE_LOSS_CODE VARCHAR(25)  NULL , 
NCCI_LOSS_TYPE_RECOV_CODE VARCHAR(25)  NULL , 
TREATMENT_CODE VARCHAR(25)  NULL , 
CLAIMANT_STATUS VARCHAR(25)  NULL , 
NAME_TYPE VARCHAR(25)  NULL , 
BENEFICIARY_CODE VARCHAR(25)  NULL , 
INFO_REQ_DATE VARCHAR(8)  NULL , 
PROOF_OF_LOSS_DATE VARCHAR(8)  NULL , 
CLAIM_CAUSE_CODE VARCHAR(25)  NULL , 
DEF_BIRTH_DT VARCHAR(8)  NULL , 
POLICY_LOB VARCHAR(25)  NULL , 
CURR_CODE VARCHAR(25)  NULL , 
CLAIM_TYPE_DATE_CHANGED VARCHAR(8)  NULL , 
REVIEW_STATUS_CODE VARCHAR(25)  NULL , 
REVIEW_STATUS_DATE_CHANGED VARCHAR(8)  NULL , 
REVIEW_REASON VARCHAR(2000)  NULL , 
CLAIM_TYPE_REASON VARCHAR(2000)  NULL ) 
PRIMARY KEY (DA_ROW_ID, JOBID) 
CREATE_INDEX PK_DDS_CLAIM ON (DA_ROW_ID, JOBID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:22:40 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_ENHANCEDNOTES(DA_ROW_ID DECIMAL(28, 7)  KEY  NOT NULL , 
JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
INVALID_ROW DECIMAL(28, 7)  NULL , 
ID VARCHAR(25)  NULL , 
CLAIM_OR_EVENT VARCHAR(1)  NULL , 
NOTE_TYPE VARCHAR(25)  NULL , 
USER_TYPE VARCHAR(25)  NULL , 
NOTE_MEMO LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
ENTERED_BY VARCHAR(50)  NULL , 
DATE_ENTERED VARCHAR(12)  NULL , 
DATE_CREATED VARCHAR(12)  NULL , 
TIME_CREATED VARCHAR(12)  NULL , 
ENTERED_BY_NAME VARCHAR(50)  NULL , 
CLAIMANT_LASTNAME VARCHAR(255)  NULL , 
CLAIMANT_FIRSTNAME VARCHAR(255)  NULL , 
CLAIMANT_SSN VARCHAR(20)  NULL , 
ABBREVIATION VARCHAR(25)  NULL ) 
PRIMARY KEY (DA_ROW_ID, JOBID) 
CREATE_INDEX PK_DDS_ENHANCEDNOTES ON (DA_ROW_ID, JOBID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:22:44 2020' , 
ActaName_8 = 'RDate_last_loaded',ActaValue_8 = 'Fri May  1 04:10:11 2020' , 
ActaName_9 = 'RTotal_Number_Of_Rows_Processed',ActaValue_9 = '1' , 
ActaName_10 = 'RNumber_Of_Rows_Rejected',ActaValue_10 = '0' , 
ActaName_11 = 'RNumber_Of_Inserts',ActaValue_11 = '1' , 
ActaName_12 = 'RNumber_Of_Updates',ActaValue_12 = '0' , 
ActaName_13 = 'RNumber_Of_Deletes',ActaValue_13 = '0' , 
ActaName_14 = 'RElapsed_Time_For_Load',ActaValue_14 = '0 Seconds' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG(ERR_LOG_ROW_ID DECIMAL(28, 7)  NOT NULL , 
JOBID DECIMAL(28, 7)  NOT NULL , 
DA_ROW_ID DECIMAL(28, 7)  NULL , 
MODULE_NAME VARCHAR(50)  NULL , 
ERROR_TABLE_TO_CHECK VARCHAR(100)  NULL , 
CALLING_ERROR_LOCATION LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
CURRENT_ERROR_LOCATION LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
ERROR_PROC_NAME LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
ERROR_TIME VARCHAR(14)  NULL , 
ERROR_DESC LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
IS_VALIDATION DECIMAL(28, 7)  NULL , 
ERROR_COLUMNS LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
ERROR_KEY_COLUMN VARCHAR(50)  NULL , 
ERROR_KEY_COLUMN_VALUE VARCHAR(50)  NULL ) 
CREATE_INDEX DDS_ERRORLOG_IDX ON (JOBID, DA_ROW_ID, ERROR_TABLE_TO_CHECK, IS_VALIDATION) 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:22:58 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_EVENT(JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
DA_ROW_ID DECIMAL(28, 7)  KEY  NOT NULL , 
INPUT_ROW_ID DECIMAL(28, 7)  NULL , 
INVALID_ROW DECIMAL(28, 7)  NULL , 
UPDATE_ROW DECIMAL(28, 7)  NULL , 
EVENT_NUMBER VARCHAR(25)  NULL , 
EVENT_TYPE_CODE VARCHAR(25)  NULL , 
EVENT_STATUS_CODE VARCHAR(25)  NULL , 
EVENT_IND_CODE VARCHAR(25)  NULL , 
EVENT_DESCRIPTION LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
BRIEF_DESCRIPTION VARCHAR(250)  NULL , 
DEPARTMENT VARCHAR(25)  NULL , 
DEPT_INVOLVED VARCHAR(25)  NULL , 
ADDR1 VARCHAR(100)  NULL , 
ADDR2 VARCHAR(100)  NULL , 
CITY VARCHAR(50)  NULL , 
STATE VARCHAR(4)  NULL , 
ZIP_CODE VARCHAR(10)  NULL , 
COUNTRY VARCHAR(20)  NULL  SET("Content_Type" = 'COUNTRY'), 
COUNTY_OF_INJURY VARCHAR(50)  NULL , 
LOCATION_AREA_DESC LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
PRIMARY_LOC_CODE VARCHAR(25)  NULL , 
LOCATION_TYPE_CODE VARCHAR(25)  NULL , 
ON_PREMISE_FLAG VARCHAR(1)  NULL , 
NO_OF_INJURIES DECIMAL(28, 7)  NULL , 
NO_OF_FATALITIES DECIMAL(28, 7)  NULL , 
CAUSE_CODE VARCHAR(25)  NULL , 
DATE_OF_EVENT VARCHAR(8)  NULL , 
TIME_OF_EVENT VARCHAR(6)  NULL , 
DATE_REPORTED VARCHAR(8)  NULL , 
TIME_REPORTED VARCHAR(6)  NULL , 
REPORTED_TAX_ID VARCHAR(20)  NULL , 
REPORTED_LAST_NAME VARCHAR(255)  NULL , 
REPORTED_FIRST_NAME VARCHAR(255)  NULL , 
REPORTED_ADDR1 VARCHAR(100)  NULL , 
REPORTED_ADDR2 VARCHAR(100)  NULL , 
REPORTED_CITY VARCHAR(50)  NULL , 
REPORTED_STATE VARCHAR(4)  NULL , 
REPORTED_ZIP_CODE VARCHAR(10)  NULL , 
REPORTED_PHONE VARCHAR(30)  NULL , 
COMMENTS LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
ACTIVITY_WHEN_INJ VARCHAR(255)  NULL , 
HOW_ACC_OCCURRED VARCHAR(255)  NULL , 
OBJ_SUBST_THAT_INJ VARCHAR(255)  NULL , 
RECORDABLE_FLAG VARCHAR(1)  NULL , 
SAFEG_NOTUSED_FLAG VARCHAR(1)  NULL , 
SAFEGUARD_FLAG VARCHAR(1)  NULL , 
NO_RULES_FLAG VARCHAR(1)  NULL , 
DATE_PHYS_ADVISED VARCHAR(8)  NULL , 
TIME_PHYS_ADVISED VARCHAR(8)  NULL , 
ACTION_1_CODE VARCHAR(25)  NULL , 
ACTION_2_CODE VARCHAR(25)  NULL , 
ACTION_3_CODE VARCHAR(25)  NULL , 
ACTION_4_CODE VARCHAR(25)  NULL , 
ACTION_5_CODE VARCHAR(25)  NULL , 
OUTCOME_1_CODE VARCHAR(25)  NULL , 
OUTCOME_2_CODE VARCHAR(25)  NULL , 
OUTCOME_3_CODE VARCHAR(25)  NULL , 
OUTCOME_4_CODE VARCHAR(25)  NULL , 
OUTCOME_5_CODE VARCHAR(25)  NULL , 
DATE_TO_FOLLOW_UP VARCHAR(129)  NULL , 
TREATMENT_GIVEN VARCHAR(8)  NULL , 
RELEASE_SIGNED VARCHAR(1)  NULL , 
DEPT_HEAD_ADVISED VARCHAR(1)  NULL , 
PHYS_NOTES LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
DATE_CARRIER_NOTIF VARCHAR(8)  NULL , 
PI_SUFFIX DECIMAL(28, 7)  NULL , 
PI_TAX_ID VARCHAR(20)  NULL , 
PI_LAST_NAME VARCHAR(255)  NULL , 
PI_FIRST_NAME VARCHAR(255)  NULL , 
PI_ADDR1 VARCHAR(100)  NULL , 
PI_ADDR2 VARCHAR(100)  NULL , 
PI_CITY VARCHAR(50)  NULL , 
PI_STATE VARCHAR(4)  NULL , 
PI_ZIP_CODE VARCHAR(10)  NULL , 
PI_PHONE VARCHAR(30)  NULL , 
PI_TYPE_CODE VARCHAR(50)  NULL , 
MARITAL_STAT_CODE VARCHAR(1)  NULL , 
SEX_CODE VARCHAR(8)  NULL , 
BIRTH_DATE VARCHAR(8)  NULL , 
DATE_OF_DEATH VARCHAR(8)  NULL , 
ILLNESS_CODE VARCHAR(25)  NULL , 
INJURY_1_CODE VARCHAR(25)  NULL , 
INJURY_2_CODE VARCHAR(25)  NULL , 
INJURY_3_CODE VARCHAR(25)  NULL , 
INJURY_4_CODE VARCHAR(25)  NULL , 
INJURY_5_CODE VARCHAR(25)  NULL , 
BODY_PART_1_CODE VARCHAR(25)  NULL , 
BODY_PART_2_CODE VARCHAR(25)  NULL , 
BODY_PART_3_CODE VARCHAR(25)  NULL , 
BODY_PART_4_CODE VARCHAR(25)  NULL , 
BODY_PART_5_CODE VARCHAR(25)  NULL , 
DIAGNOSIS_1_CODE VARCHAR(25)  NULL , 
DIAGNOSIS_2_CODE VARCHAR(25)  NULL , 
DIAGNOSIS_3_CODE VARCHAR(25)  NULL , 
DIAGNOSIS_4_CODE VARCHAR(25)  NULL , 
DIAGNOSIS_5_CODE VARCHAR(25)  NULL , 
TREATMENT_1_CODE VARCHAR(25)  NULL , 
TREATMENT_2_CODE VARCHAR(25)  NULL , 
TREATMENT_3_CODE VARCHAR(25)  NULL , 
TREATMENT_4_CODE VARCHAR(25)  NULL , 
TREATMENT_5_CODE VARCHAR(25)  NULL , 
PHYSICIAN_1_LAST_NAME VARCHAR(50)  NULL , 
PHYSICIAN_1_FIRST_NAME VARCHAR(25)  NULL , 
PHYSICIAN_1_PHONE VARCHAR(30)  NULL , 
PHYSICIAN_2_LAST_NAME VARCHAR(50)  NULL , 
PHYSICIAN_2_FIRST_NAME VARCHAR(25)  NULL , 
PHYSICIAN_2_PHONE VARCHAR(30)  NULL , 
PHYSICIAN_3_LAST_NAME VARCHAR(50)  NULL , 
PHYSICIAN_3_FIRST_NAME VARCHAR(25)  NULL , 
PHYSICIAN_3_PHONE VARCHAR(30)  NULL , 
HOSPITAL_1_NAME VARCHAR(50)  NULL , 
HOSPITAL_1_PHONE VARCHAR(30)  NULL , 
HOSPITAL_2_NAME VARCHAR(50)  NULL , 
HOSPITAL_2_PHONE VARCHAR(30)  NULL , 
HOSPITAL_3_NAME VARCHAR(50)  NULL , 
HOSPITAL_3_PHONE VARCHAR(30)  NULL , 
DRIVERS_LIC_NO VARCHAR(20)  NULL , 
DRIVERSLICTYPECODE VARCHAR(25)  NULL , 
DATE_DRIVERSLICEXP VARCHAR(8)  NULL , 
DRIVLIC_RSTRCT_CODE VARCHAR(25)  NULL , 
DRIVLIC_STATE VARCHAR(4)  NULL , 
COUNTY_OF_RESIDNC VARCHAR(50)  NULL , 
NCCI_CLASS_CODE VARCHAR(25)  NULL , 
EST_LEN_DISABILITY DECIMAL(28, 7)  NULL , 
INSURABLE_FLAG VARCHAR(1)  NULL , 
LAST_VERIFIED_DATE VARCHAR(8)  NULL , 
PATIENT_ACCT_NO VARCHAR(20)  NULL , 
MEDICAL_RCD_NO VARCHAR(12)  NULL , 
INS_PLAN_GROUP_NO VARCHAR(16)  NULL , 
DATE_OF_ADMISSION VARCHAR(8)  NULL , 
DATE_OF_DISCHARGE VARCHAR(8)  NULL , 
ADM_TYPE_CODE VARCHAR(25)  NULL , 
ADM_SOURCE_CODE VARCHAR(25)  NULL , 
ADMISSION_REASON LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
ACUITY_LEVEL_CODE VARCHAR(25)  NULL , 
PATIENT_STAT_CODE VARCHAR(25)  NULL , 
PATIENT_COND_CODE VARCHAR(25)  NULL , 
DISCHARGE_DSP_CODE VARCHAR(25)  NULL , 
EXP_LENGTH_OF_STAY DECIMAL(28, 7)  NULL , 
EXPECTED_COST DECIMAL(20, 2)  NULL , 
QI_SIGNIF_CODE VARCHAR(25)  NULL , 
EPISODE_OF_CARE_ID VARCHAR(8)  NULL , 
PATIENT_TYPE_CODE VARCHAR(25)  NULL , 
WEIGHT DECIMAL(28, 7)  NULL , 
EMERGENCY_CONTACT VARCHAR(20)  NULL , 
EMERGENCY_CONT_NO VARCHAR(20)  NULL , 
PATIENT_ROOM_NO VARCHAR(14)  NULL , 
FACILITY_UNIT_CODE VARCHAR(25)  NULL , 
FACILITY_DEPT VARCHAR(25)  NULL , 
HCO_ID_NO VARCHAR(20)  NULL , 
HCO_SITE_ID_NO VARCHAR(20)  NULL , 
WHY_AT_FACILITY LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
DISABILITY_CODE VARCHAR(25)  NULL , 
EMPLOYEE_NUMBER VARCHAR(20)  NULL , 
POSITION_CODE VARCHAR(25)  NULL , 
DEPT_ASSIGNED VARCHAR(25)  NULL , 
SUPER_TAX_ID VARCHAR(20)  NULL , 
SUPER_EMP_NO VARCHAR(34)  NULL , 
SUPER_LAST_NAME VARCHAR(255)  NULL , 
SUPER_FIRST_NAME VARCHAR(255)  NULL , 
SUPER_ADDR1 VARCHAR(100)  NULL , 
SUPER_ADDR2 VARCHAR(100)  NULL , 
SUPER_CITY VARCHAR(50)  NULL , 
SUPER_STATE VARCHAR(4)  NULL , 
SUPER_ZIP_CODE VARCHAR(10)  NULL , 
SUPER_PHONE1 VARCHAR(30)  NULL , 
FULL_TIME_FLAG VARCHAR(1)  NULL , 
PAY_TYPE_CODE VARCHAR(25)  NULL , 
HOURLY_RATE DECIMAL(20, 2)  NULL , 
WEEKLY_HOURS DECIMAL(20, 2)  NULL , 
WEEKLY_RATE DECIMAL(20, 2)  NULL , 
PAY_AMOUNT DECIMAL(20, 2)  NULL , 
ACTIVE_FLAG VARCHAR(1)  NULL , 
DATE_HIRED VARCHAR(8)  NULL , 
DATE_LAST_WORKED_1 VARCHAR(8)  NULL , 
DATE_RETURNED_1 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_2 VARCHAR(8)  NULL , 
DATE_RETURNED_2 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_3 VARCHAR(8)  NULL , 
DATE_RETURNED_3 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_4 VARCHAR(8)  NULL , 
DATE_RETURNED_4 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_5 VARCHAR(8)  NULL , 
DATE_RETURNED_5 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_6 VARCHAR(8)  NULL , 
DATE_RETURNED_6 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_7 VARCHAR(8)  NULL , 
DATE_RETURNED_7 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_8 VARCHAR(8)  NULL , 
DATE_RETURNED_8 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_9 VARCHAR(8)  NULL , 
DATE_RETURNED_9 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_10 VARCHAR(8)  NULL , 
DATE_RETURNED_10 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_11 VARCHAR(8)  NULL , 
DATE_RETURNED_11 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_12 VARCHAR(8)  NULL , 
DATE_RETURNED_12 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_13 VARCHAR(8)  NULL , 
DATE_RETURNED_13 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_14 VARCHAR(8)  NULL , 
DATE_RETURNED_14 VARCHAR(8)  NULL , 
DATE_LAST_WORKED_15 VARCHAR(8)  NULL , 
DATE_RETURNED_15 VARCHAR(8)  NULL , 
LOST_WORK_FLAG VARCHAR(134)  NULL , 
LEN_OF_SVC_DAYS VARCHAR(1)  NULL , 
EXEMPT_STATUS_FLAG VARCHAR(1)  NULL , 
NO_OF_EXEMPTIONS VARCHAR(1)  NULL , 
WORK_SUN_FLAG VARCHAR(1)  NULL , 
WORK_MON_FLAG VARCHAR(1)  NULL , 
WORK_TUE_FLAG VARCHAR(1)  NULL , 
WORK_WED_FLAG VARCHAR(1)  NULL , 
WORK_THU_FLAG VARCHAR(1)  NULL , 
WORK_FRI_FLAG VARCHAR(1)  NULL , 
WORK_SAT_FLAG VARCHAR(1)  NULL , 
WORKDAY_START_TIME VARCHAR(6)  NULL , 
WORK_PERMIT_DATE VARCHAR(8)  NULL , 
WORK_PERMIT_NUMBER VARCHAR(50)  NULL , 
REGULAR_JOB_FLAG VARCHAR(1)  NULL , 
HIRED_IN_STATE_FLAG VARCHAR(1)  NULL , 
NUM_OF_VIOLATION DECIMAL(28, 7)  NULL , 
DESC_BY_WITNESS LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
USER_FIELD_A LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
USER_FIELD_B VARCHAR(255)  NULL , 
USER_FIELD_C VARCHAR(255)  NULL , 
USER_FIELD_D VARCHAR(255)  NULL , 
USER_FIELD_E VARCHAR(255)  NULL , 
USER_FIELD_F VARCHAR(255)  NULL , 
USER_FIELD_G VARCHAR(255)  NULL , 
USER_FIELD_H VARCHAR(255)  NULL , 
USER_FIELD_I VARCHAR(255)  NULL , 
USER_FIELD_J VARCHAR(255)  NULL , 
USER_FIELD_K VARCHAR(255)  NULL , 
USER_FIELD_L VARCHAR(255)  NULL , 
USER_FIELD_M VARCHAR(255)  NULL , 
USER_FIELD_N VARCHAR(255)  NULL , 
USER_FIELD_O VARCHAR(255)  NULL , 
USER_FIELD_P VARCHAR(255)  NULL , 
USER_FIELD_Q VARCHAR(255)  NULL , 
USER_FIELD_R VARCHAR(255)  NULL , 
USER_FIELD_S VARCHAR(255)  NULL , 
USER_FIELD_T VARCHAR(255)  NULL , 
USER_FIELD_U VARCHAR(255)  NULL , 
USER_FIELD_V VARCHAR(255)  NULL , 
USER_FIELD_W VARCHAR(255)  NULL , 
USER_FIELD_X VARCHAR(255)  NULL , 
USER_FIELD_Y VARCHAR(255)  NULL , 
COND_PRIOR_CODE VARCHAR(25)  NULL , 
RAIL_POSITION_CODE VARCHAR(25)  NULL , 
RESTRAINT_CODE VARCHAR(25)  NULL , 
BED_POSITION_CODE VARCHAR(25)  NULL , 
CALL_LIGHT_CODE VARCHAR(25)  NULL , 
REPORTED_COUNTRY VARCHAR(25)  NULL , 
REPORTED_PHONE2 VARCHAR(30)  NULL , 
REPORTED_FAX VARCHAR(30)  NULL , 
PI_MIDDLE_NAME VARCHAR(255)  NULL , 
PRIVACY_CASE_FLAG VARCHAR(1)  NULL , 
SHARPS_OBJECT VARCHAR(25)  NULL , 
SHARPS_BRAND_MAKE VARCHAR(25)  NULL , 
SAFEG_PROVIDED VARCHAR(1)  NULL , 
RULES_NOT_FOLLOWED VARCHAR(1)  NULL , 
OSHA_ESTAB_EID VARCHAR(25)  NULL , 
NAME_TYPE VARCHAR(25)  NULL , 
REPORTED_BIRTH_DT VARCHAR(8)  NULL , 
BENEFICIARY_CODE VARCHAR(25)  NULL ) 
PRIMARY KEY (JOBID, DA_ROW_ID) 
CREATE_INDEX DDS_EVENT_PK ON (JOBID, DA_ROW_ID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:23:18 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_MEDWATCH(JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
DA_ROW_ID DECIMAL(28, 7)  KEY  NOT NULL , 
INVALID_ROW DECIMAL(28, 7)  NULL , 
UPDATE_ROW DECIMAL(28, 7)  NULL , 
INPUT_ROW_ID DECIMAL(28, 7)  NULL , 
EVENT_NUMBER VARCHAR(25)  NULL , 
UNIT_CODE VARCHAR(25)  NULL , 
DATE_RPTD_FDA VARCHAR(8)  NULL , 
DATE_RPTD_MFG VARCHAR(8)  NULL , 
RPTD_BY_LAST_NAME VARCHAR(255)  NULL , 
RPTD_BY_FIRST_NAME VARCHAR(255)  NULL , 
RPTD_BY_ADDR1 VARCHAR(100)  NULL , 
RPTD_BY_ADDR2 VARCHAR(100)  NULL , 
RPTD_BY_CITY VARCHAR(50)  NULL , 
RPTD_BY_STATE VARCHAR(4)  NULL , 
RPTD_BY_ZIP_CODE VARCHAR(10)  NULL , 
RPTD_BY_TAX_ID VARCHAR(20)  NULL , 
RPTD_BY_PRO_FLAG VARCHAR(1)  NULL , 
RPTD_BY_POS_CODE VARCHAR(25)  NULL , 
RELEVANT_HISTORY LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
LAST_REPORT_DATE VARCHAR(8)  NULL , 
REPORT_YEAR DECIMAL(28, 7)  NULL , 
REPORT_SERIAL_NO DECIMAL(28, 7)  NULL , 
ADVERSE_EVENT_FLAG VARCHAR(1)  NULL , 
PRODUCT_PROB_FLAG VARCHAR(1)  NULL , 
LIFE_THREAT_FLAG VARCHAR(1)  NULL , 
HOSPITALIZ_FLAG VARCHAR(1)  NULL , 
DISABILITY_FLAG VARCHAR(1)  NULL , 
CONGENITAL_FLAG VARCHAR(1)  NULL , 
REQD_INTERV_FLAG VARCHAR(1)  NULL , 
FOLLOW_UP_COUNT DECIMAL(28, 7)  NULL , 
RPT_MANDATORY VARCHAR(1)  NULL , 
MED_TYPE VARCHAR(25)  NULL , 
MED_NAME VARCHAR(25)  NULL , 
DOSE VARCHAR(25)  NULL , 
FREQUENCY VARCHAR(25)  NULL , 
ROUTE VARCHAR(25)  NULL , 
THERAPY_FROM_DATE VARCHAR(8)  NULL , 
THERAPY_TO_DATE VARCHAR(8)  NULL , 
DURATION DECIMAL(28, 7)  NULL , 
LOT_NUMBER VARCHAR(15)  NULL , 
NDC_NUMBER DECIMAL(28, 7)  NULL , 
EXPIRATION_DATE VARCHAR(8)  NULL , 
EVENT_ABATED VARCHAR(1)  NULL , 
EVENT_REAPPEARED VARCHAR(1)  NULL , 
DIAGNOSIS_TEST VARCHAR(25)  NULL , 
BRAND_NAME VARCHAR(25)  NULL , 
EQUIP_TYPE_CODE VARCHAR(25)  NULL , 
MANUF_NAME VARCHAR(255)  NULL , 
MANUF_ADDR1 VARCHAR(100)  NULL , 
MANUF_ADDR2 VARCHAR(100)  NULL , 
MANUF_CITY VARCHAR(50)  NULL , 
MANUF_STATE VARCHAR(4)  NULL , 
MANUF_ZIP_CODE VARCHAR(10)  NULL , 
MODEL_NUMBER VARCHAR(15)  NULL , 
CATALOG_NUMBER VARCHAR(15)  NULL , 
SERIAL_NUMBER VARCHAR(15)  NULL , 
OTHER_NUMBER VARCHAR(15)  NULL , 
DEVICE_OPER_CODE VARCHAR(25)  NULL , 
IMPLANT_DATE VARCHAR(8)  NULL , 
EXPLANT_DATE VARCHAR(8)  NULL , 
AGE_OF_DEVICE VARCHAR(12)  NULL , 
DEV_AVAIL_FOR_EVAL VARCHAR(1)  NULL , 
DEVICE_RETURN_DATE VARCHAR(8)  NULL , 
EQ_LOT_NUMBER VARCHAR(15)  NULL , 
EQ_EXPIRATION_DATE VARCHAR(8)  NULL , 
TEST_LAB_TEST_1 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_LAB_TEST_2 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_LAB_TEST_3 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_LAB_TEST_4 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_LAB_TEST_5 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_RESULT_1 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_RESULT_2 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_RESULT_3 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_RESULT_4 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_RESULT_5 LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
TEST_DATE_1 VARCHAR(8)  NULL , 
TEST_DATE_2 VARCHAR(8)  NULL , 
TEST_DATE_3 VARCHAR(8)  NULL , 
TEST_DATE_4 VARCHAR(8)  NULL , 
TEST_DATE_5 VARCHAR(8)  NULL , 
CONCOM_PRODUCT_ID_1 DECIMAL(28, 7)  NULL , 
CONCOM_PRODUCT_ID_2 DECIMAL(28, 7)  NULL , 
CONCOM_PRODUCT_ID_3 DECIMAL(28, 7)  NULL , 
CONCOM_PRODUCT_ID_4 DECIMAL(28, 7)  NULL , 
CONCOM_PRODUCT_ID_5 DECIMAL(28, 7)  NULL , 
CONCOM_PRODUCT_ID_6 DECIMAL(28, 7)  NULL , 
CONCOM_FROM_DATE_1 VARCHAR(8)  NULL , 
CONCOM_FROM_DATE_2 VARCHAR(8)  NULL , 
CONCOM_FROM_DATE_3 VARCHAR(8)  NULL , 
CONCOM_FROM_DATE_4 VARCHAR(8)  NULL , 
CONCOM_FROM_DATE_5 VARCHAR(8)  NULL , 
CONCOM_FROM_DATE_6 VARCHAR(8)  NULL , 
CONCOM_TO_DATE_1 VARCHAR(8)  NULL , 
CONCOM_TO_DATE_2 VARCHAR(8)  NULL , 
CONCOM_TO_DATE_3 VARCHAR(8)  NULL , 
CONCOM_TO_DATE_4 VARCHAR(8)  NULL , 
CONCOM_TO_DATE_5 VARCHAR(8)  NULL , 
CONCOM_TO_DATE_6 VARCHAR(8)  NULL , 
CONCOM_PRODUCT_1 VARCHAR(40)  NULL , 
CONCOM_PRODUCT_2 VARCHAR(40)  NULL , 
CONCOM_PRODUCT_3 VARCHAR(40)  NULL , 
CONCOM_PRODUCT_4 VARCHAR(40)  NULL , 
CONCOM_PRODUCT_5 VARCHAR(40)  NULL , 
CONCOM_PRODUCT_6 VARCHAR(40)  NULL , 
USER_FIELD_A LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
USER_FIELD_B VARCHAR(255)  NULL , 
USER_FIELD_C VARCHAR(255)  NULL , 
USER_FIELD_D VARCHAR(255)  NULL , 
USER_FIELD_E VARCHAR(255)  NULL , 
USER_FIELD_F VARCHAR(255)  NULL , 
USER_FIELD_G VARCHAR(255)  NULL , 
USER_FIELD_H VARCHAR(255)  NULL , 
USER_FIELD_I VARCHAR(255)  NULL , 
USER_FIELD_J VARCHAR(255)  NULL , 
USER_FIELD_K VARCHAR(255)  NULL , 
USER_FIELD_L VARCHAR(255)  NULL , 
USER_FIELD_M VARCHAR(255)  NULL , 
USER_FIELD_N VARCHAR(255)  NULL , 
USER_FIELD_O VARCHAR(255)  NULL , 
USER_FIELD_P VARCHAR(255)  NULL , 
USER_FIELD_Q VARCHAR(255)  NULL , 
USER_FIELD_R VARCHAR(255)  NULL , 
USER_FIELD_S VARCHAR(255)  NULL , 
USER_FIELD_T VARCHAR(255)  NULL , 
USER_FIELD_U VARCHAR(255)  NULL , 
USER_FIELD_V VARCHAR(255)  NULL , 
USER_FIELD_W VARCHAR(255)  NULL , 
USER_FIELD_X VARCHAR(255)  NULL , 
USER_FIELD_Y VARCHAR(255)  NULL , 
NAME_TYPE VARCHAR(25)  NULL , 
RPTD_BY_BIRTH_DT VARCHAR(8)  NULL , 
MANUF_BIRTH_DT VARCHAR(8)  NULL ) 
PRIMARY KEY (JOBID, DA_ROW_ID) 
CREATE_INDEX DDS_MEDWATCH_PK ON (JOBID, DA_ROW_ID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:23:34 2020' , 
ActaName_8 = 'RDate_last_loaded',ActaValue_8 = 'Fri May  1 04:45:19 2020' , 
ActaName_9 = 'RTotal_Number_Of_Rows_Processed',ActaValue_9 = '1' , 
ActaName_10 = 'RNumber_Of_Rows_Rejected',ActaValue_10 = '0' , 
ActaName_11 = 'RNumber_Of_Inserts',ActaValue_11 = '1' , 
ActaName_12 = 'RNumber_Of_Updates',ActaValue_12 = '0' , 
ActaName_13 = 'RNumber_Of_Deletes',ActaValue_13 = '0' , 
ActaName_14 = 'RElapsed_Time_For_Load',ActaValue_14 = '0 Seconds' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_OPTIONSET(JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
PERFORM_VERIFICATION DECIMAL(28, 7)  NULL , 
EVENTS_AVAILABLE DECIMAL(28, 7)  NULL , 
MED_WATCH_AVAILABLE DECIMAL(28, 7)  NULL , 
CLAIMS_AVAILABLE DECIMAL(28, 7)  NULL , 
STD_AVAILABLE DECIMAL(28, 7)  NULL , 
ADJUSTER_NOTES_AVAILABLE DECIMAL(28, 7)  NULL , 
PAYMENTS_AVAILABLE DECIMAL(28, 7)  NULL , 
PAYMENT_SUB_ACCOUNT DECIMAL(28, 7)  NULL , 
PAYMENT_BANK_ACCOUNT DECIMAL(28, 7)  NULL , 
ENHANCED_NOTES_AVAILABLE DECIMAL(28, 7)  NULL , 
ALLOW_NEW_CODES DECIMAL(28, 7)  NULL , 
NON_EMP_MATCH_BY_NAME_TAX_ID DECIMAL(28, 7)  NULL , 
ALLOW_NEW_DEPARTMENT DECIMAL(28, 7)  NULL , 
CHK_DUPLICATE_ENTITY DECIMAL(28, 7)  NULL , 
CHK_CREATE_NEWENTITY DECIMAL(28, 7)  NULL , 
EMPLOYEE_MATCH_BY_NAME DECIMAL(28, 7)  NULL , 
EMPLOYEE_MATCH_BY_TAX_ID DECIMAL(28, 7)  NULL , 
EMPLOYEE_MATCH_BY_DOB DECIMAL(28, 7)  NULL , 
EMPLOYEE_MATCH_BY_EMP_NUM DECIMAL(28, 7)  NULL , 
NON_EMP_MATCH_BY_NAME DECIMAL(28, 7)  NULL , 
NON_EMP_MATCH_BY_TAX_ID DECIMAL(28, 7)  NULL , 
NON_EMP_MATCH_BY_DOB DECIMAL(28, 7)  NULL , 
CREATE_PI_ENT_IF_TAXID_EMPTY DECIMAL(28, 7)  NULL , 
ALLOW_NEW_EMPLOYEES DECIMAL(28, 7)  NULL , 
ALLOW_NEW_CLAIMS DECIMAL(28, 7)  NULL , 
UPDATE_CLAIMANT_DETAILS DECIMAL(28, 7)  NULL , 
ID_CLAIMANT_BY_NAME_GCVA DECIMAL(28, 7)  NULL , 
ID_CLAIMANT_BY_SUFFIX_GCVA DECIMAL(28, 7)  NULL , 
UPDATE_CLAIMANT_NAME_GCVA DECIMAL(28, 7)  NULL , 
CRT_ENT_IF_TAXID_EMPTY_GCVA DECIMAL(28, 7)  NULL , 
UPDATE_CLAIMANT_NAME_WC DECIMAL(28, 7)  NULL , 
ATTACH_TRANS_ID_TO_CHECK_NO DECIMAL(28, 7)  NULL , 
RECALCULATE_RESERVES DECIMAL(28, 7)  NULL , 
DONT_CHECK_DUPLICATE_PAYMENTS DECIMAL(28, 7)  NULL , 
CHECK_DUPLICATE_RESERVE_TRANS DECIMAL(28, 7)  NULL , 
ID_CLAIMANT_BY_NAME DECIMAL(28, 7)  NULL , 
ID_CLAIMANT_BY_SUFFIX DECIMAL(28, 7)  NULL , 
VALIDATE_SUPPLEMENTALS DECIMAL(28, 7)  NULL , 
SET_ADJUSTER_AS_CURRENT DECIMAL(28, 7)  NULL , 
EN_ENT_MATCH_BY_NAME DECIMAL(28, 7)  NULL , 
EN_ENT_MATCH_BY_TAX_ID DECIMAL(28, 7)  NULL , 
EN_ENT_MATCH_BY_ABBRV DECIMAL(28, 7)  NULL , 
EVENT_SUPP DECIMAL(28, 7)  NULL , 
CLAIM_SUPP DECIMAL(28, 7)  NULL , 
PAYMENT_SUPP DECIMAL(28, 7)  NULL , 
CONFIG_ID DECIMAL(28, 7)  NOT NULL , 
ORGSEC_FLAG DECIMAL(28, 7)  NULL , 
DIARY_TO_USERS VARCHAR(255)  NULL , 
USE_TRANSACTIONS DECIMAL(28, 7)  NULL , 
VALID_START_DATE VARCHAR(8)  NULL , 
VALID_END_DATE VARCHAR(8)  NULL , 
MAX_ERRORS DECIMAL(28, 7)  NULL , 
EVENT_IMPORTFILE_NAME VARCHAR(255)  NULL , 
MEDWATCH_IMPORTFILE_NAME VARCHAR(255)  NULL , 
CLAIM_IMPORTFILE_NAME VARCHAR(255)  NULL , 
STD_PLAN_IMPORTFILE_NAME VARCHAR(255)  NULL , 
STD_CLASS_IMPORTFILE_NAME VARCHAR(255)  NULL , 
ADJUSTER_IMPORTFILE_NAME VARCHAR(255)  NULL , 
PAYMENT_IMPORTFILE_NAME VARCHAR(255)  NULL , 
EN_IMPORTFILE_NAME VARCHAR(255)  NULL , 
OPTIONSET_NAME VARCHAR(50)  NULL , 
ENHNOTES_CLMNT_NAME DECIMAL(28, 7)  NULL , 
ENHNOTES_CLMNT_TAX DECIMAL(28, 7)  NULL , 
ENHNOTES_CLMNT_ABBREVIATION DECIMAL(28, 7)  NULL , 
MEDWATCH_SUPP DECIMAL(28, 7)  NULL , 
STDPLAN_SUPP DECIMAL(28, 7)  NULL ) 
PRIMARY KEY (JOBID) 
CREATE_INDEX PK_DDS_OPTIONSET ON (JOBID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:23:41 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_PAYMENT(DA_ROW_ID DECIMAL(28, 7)  KEY  NOT NULL , 
JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
INPUT_ROW_ID DECIMAL(28, 7)  NULL , 
INVALID_ROW DECIMAL(28, 7)  NULL , 
UPDATE_ROW DECIMAL(28, 7)  NULL , 
RECORD_TYPE VARCHAR(1)  NULL , 
TRANSACTION_TYPE VARCHAR(1)  NULL , 
CLAIM_ID VARCHAR(25)  NULL , 
ACTIVITY_DATE VARCHAR(8)  NULL , 
TYPE_FLAG VARCHAR(1)  NULL , 
AMOUNT DOUBLE  NULL , 
MEMO VARCHAR(255)  NULL , 
CARRIER VARCHAR(16)  NULL , 
ADJUSTER VARCHAR(16)  NULL , 
CHECK_NO VARCHAR(25)  NULL , 
CHECK_SUFFIX DECIMAL(28, 7)  NULL , 
CHECK_STATUS VARCHAR(1)  NULL , 
TYPE_CODE VARCHAR(25)  NULL , 
PAYEE_TYPE VARCHAR(25)  NULL , 
PAYEE_TAX_ID_NO VARCHAR(20)  NULL , 
PAYEE_LASTNAME VARCHAR(255)  NULL , 
PAYEE_FIRSTNAME VARCHAR(255)  NULL , 
PAYEE_ADDRESS VARCHAR(100)  NULL , 
PAYEE_CITY VARCHAR(50)  NULL , 
PAYEE_STATE VARCHAR(4)  NULL , 
PAYEE_ZIP VARCHAR(10)  NULL , 
TRANSACTION_DATE VARCHAR(8)  NULL , 
REPORT_1099_FLAG VARCHAR(1)  NULL , 
SERVICE_FROM_DATE VARCHAR(8)  NULL , 
SERVICE_TO_DATE VARCHAR(8)  NULL , 
CLEARED_FLAG VARCHAR(1)  NULL , 
DATE_CLEARED VARCHAR(8)  NULL , 
BANK_ACCOUNT_NUM VARCHAR(20)  NULL , 
BANK_SUB_ACCNT_NUM VARCHAR(20)  NULL , 
PAYEE_ADDRESS2 VARCHAR(100)  NULL , 
USER_FIELD_A LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
USER_FIELD_B VARCHAR(255)  NULL , 
USER_FIELD_C VARCHAR(255)  NULL , 
USER_FIELD_D VARCHAR(255)  NULL , 
USER_FIELD_E VARCHAR(255)  NULL , 
USER_FIELD_F VARCHAR(255)  NULL , 
USER_FIELD_G VARCHAR(255)  NULL , 
USER_FIELD_H VARCHAR(255)  NULL , 
USER_FIELD_I VARCHAR(255)  NULL , 
USER_FIELD_J VARCHAR(255)  NULL , 
USER_FIELD_K VARCHAR(255)  NULL , 
USER_FIELD_L VARCHAR(255)  NULL , 
USER_FIELD_M VARCHAR(255)  NULL , 
USER_FIELD_N VARCHAR(255)  NULL , 
USER_FIELD_O VARCHAR(255)  NULL , 
USER_FIELD_P VARCHAR(255)  NULL , 
USER_FIELD_Q VARCHAR(255)  NULL , 
USER_FIELD_R VARCHAR(255)  NULL , 
USER_FIELD_S VARCHAR(255)  NULL , 
USER_FIELD_T VARCHAR(255)  NULL , 
USER_FIELD_U VARCHAR(255)  NULL , 
USER_FIELD_V VARCHAR(255)  NULL , 
USER_FIELD_W VARCHAR(255)  NULL , 
USER_FIELD_X VARCHAR(255)  NULL , 
USER_FIELD_Y VARCHAR(255)  NULL , 
USER_FIELD_Z VARCHAR(255)  NULL , 
INVOICE_NUMBER VARCHAR(25)  NULL , 
CLAIMANT_SUFFIX DECIMAL(28, 7)  NULL , 
RES_STATUS_CODE VARCHAR(25)  NULL , 
UNIT_TYPE VARCHAR(10)  NULL , 
POLICY_NAME VARCHAR(20)  NULL , 
UNIT_NUMBER VARCHAR(10)  NULL , 
COVERAGE_CODE VARCHAR(25)  NULL , 
LOSS_CODE VARCHAR(25)  NULL , 
RESERVE_SUB_TYPE VARCHAR(25)  NULL , 
DISABILITY_CATEGORY VARCHAR(25)  NULL , 
VOID_CODE_REASON VARCHAR(255)  NULL , 
MODULE_NO VARCHAR(10)  NULL , 
PREFIX VARCHAR(25)  NULL , 
SUFFIX_COMMON VARCHAR(25)  NULL , 
SUFFIX_LEGAL VARCHAR(50)  NULL , 
MEMO_PHRASE VARCHAR(50)  NULL , 
CLASS_CODE VARCHAR(25)  NULL , 
CVG_SEQUENCE_NO VARCHAR(8)  NULL , 
TRANS_SEQ_NO VARCHAR(8)  NULL , 
CVG_DESC VARCHAR(100)  NULL , 
SUBLINE_DESC VARCHAR(100)  NULL , 
CLASS_DESC VARCHAR(100)  NULL , 
STAT_UNIT_NUMBER VARCHAR(10)  NULL , 
POLICY_CVG_SEQNO VARCHAR(10)  NULL , 
RESERVE_TYPE VARCHAR(25)  NULL , 
NAME_TYPE VARCHAR(25)  NULL , 
POLICY_NUMBER VARCHAR(40)  NULL , 
POLICY_SYMBOL VARCHAR(20)  NULL , 
MASTER_COMPANY VARCHAR(10)  NULL , 
LOCATION_COMPANY VARCHAR(10)  NULL , 
DSTRBN_TYPE_CODE VARCHAR(25)  NULL , 
PAYEE_DOB VARCHAR(8)  NULL , 
REGION VARCHAR(4)  NULL  SET("Content_Type" = 'REGION'), 
BEN_REVIEW_DATE VARCHAR(8)  NULL , 
EOB_REMARKS_CODE_1 VARCHAR(25)  NULL , 
EOB_REMARKS_CODE_2 VARCHAR(25)  NULL , 
EOB_REMARKS_CODE_3 VARCHAR(25)  NULL , 
EOB_REMARKS_CODE_4 VARCHAR(25)  NULL , 
EOB_REMARKS_CODE_5 VARCHAR(25)  NULL , 
EOB_PRINTED_DATE VARCHAR(8)  NULL , 
EOB_PRINTED_BY_USER VARCHAR(50)  NULL , 
UNIT_FIRST_NAME VARCHAR(255)  NULL , 
UNIT_LAST_NAME VARCHAR(255)  NULL , 
UNIT_TAX_ID VARCHAR(20)  NULL , 
UNIT_DOB VARCHAR(8)  NULL , 
CLMNT_LAST_NAME VARCHAR(255)  NULL , 
CLMNT_FIRST_NAME VARCHAR(255)  NULL , 
CLMNT_TAX_ID VARCHAR(20)  NULL , 
EMP_NUM VARCHAR(20)  NULL , 
UNIT_ID VARCHAR(20)  NULL , 
PMT_CURR_CODE VARCHAR(25)  NULL , 
PMT_TO_BASE_CURR_RATE DECIMAL(20, 2)  NULL , 
PMT_TO_POL_CURR_RATE DECIMAL(20, 2)  NULL , 
PMT_TO_CLM_CURR_RATE DECIMAL(20, 2)  NULL , 
CLM_TO_BASE_CURR_RATE DECIMAL(20, 2)  NULL , 
CLM_TO_POL_CURR_RATE DECIMAL(20, 2)  NULL ) 
PRIMARY KEY (DA_ROW_ID, JOBID) 
CREATE_INDEX PK_DDS_PAYMENT ON (DA_ROW_ID, JOBID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:23:49 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_PROCESS_LOG_T(JOBID DECIMAL(28, 7)  NOT NULL , 
PROCESS_DESC VARCHAR(4000)  NULL , 
MODULE_NAME VARCHAR(50)  NULL , 
TABLE_NAME VARCHAR(50)  NULL , 
DISPLAY_ORDER DECIMAL(28, 7)  NULL ) 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:23:58 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_STD_CLASS(DA_ROW_ID DECIMAL(28, 7)  KEY  NOT NULL , 
JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
INVALID_ROW DECIMAL(28, 7)  NULL , 
CLASS_NAME VARCHAR(20)  NULL , 
CLASS_DESC VARCHAR(50)  NULL , 
PLAN_NUMBER VARCHAR(20)  NULL , 
ELIG_BENE_PRD DECIMAL(28, 7)  NULL , 
BENE_PRD_TYPE VARCHAR(25)  NULL , 
BENE_FROM_DT_TYPE VARCHAR(25)  NULL , 
DIS_WAIT_PRD DECIMAL(28, 7)  NULL , 
DIS_CLNDR_WRK_TYPE VARCHAR(25)  NULL , 
DIS_PRD_TYPE VARCHAR(25)  NULL , 
DIS_MAX_PRD DECIMAL(28, 7)  NULL , 
DIS_MAX_PRD_TYPE VARCHAR(25)  NULL , 
FROM_DIS_PRD_TYPE VARCHAR(25)  NULL , 
ALLOW_EXT VARCHAR(1)  NULL , 
EXTEND_PRD DECIMAL(28, 7)  NULL , 
EXTEND_PRD_TYPE VARCHAR(25)  NULL , 
MAX_TOT_DIS_PRD DECIMAL(28, 7)  NULL , 
MAX_TOT_PRD_TYPE VARCHAR(25)  NULL , 
ACTUAL_WORK_WEEK_FLAG VARCHAR(1)  NULL , 
DAY7_WORK_WEEK_FLAG VARCHAR(1)  NULL , 
DAY5_WORK_WEEK_FLAG VARCHAR(1)  NULL , 
OTHER_WORK_WEEK_FLAG VARCHAR(1)  NULL , 
OTHER_DAYS DECIMAL(28, 7)  NULL , 
BENE_PRCTG_FLAG VARCHAR(1)  NULL , 
BENE_PER_AMT DECIMAL(20, 2)  NULL , 
BENE_FLAT_AMT_FLAG VARCHAR(1)  NULL , 
BENE_FLAT_AMT DECIMAL(20, 2)  NULL , 
BENE_TD_FLAG VARCHAR(1)  NULL , 
BENE_BASED_TYPE VARCHAR(25)  NULL , 
WITHHOLD_FED_ITAX_FLAG VARCHAR(1)  NULL , 
WITHHOLD_FICA_FLAG VARCHAR(1)  NULL , 
WEEKLY_BENE_CAP DECIMAL(20, 2)  NULL , 
MAX_BEN_PER_CLAIM DECIMAL(20, 2)  NULL , 
MAX_BEN_PER_CAL_YR DECIMAL(20, 2)  NULL , 
WAGE_FOR_DIS_PRD DECIMAL(20, 2)  NULL , 
WAGE_FOR_CAL_YR DECIMAL(20, 2)  NULL , 
TAXABLE_PERCENT DECIMAL(20, 2)  NULL , 
WITHHOLD_MEDICARE_FLAG VARCHAR(1)  NULL , 
WITHHOLD_STATE_FLAG VARCHAR(1)  NULL , 
USE_VOUCHERS_FLAG VARCHAR(1)  NULL , 
ALT_WAIT_DIS_TYPE VARCHAR(207)  NULL , 
ALT_WAIT_DIS_TYPE_1 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_TYPE_2 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_TYPE_3 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_TYPE_4 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_TYPE_5 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_TYPE_6 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_TYPE_7 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_TYPE_8 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_PRD VARCHAR(39)  NULL , 
ALT_WAIT_DIS_PRD_VAL_1 DECIMAL(28, 7)  NULL , 
ALT_WAIT_DIS_PRD_VAL_2 DECIMAL(28, 7)  NULL , 
ALT_WAIT_DIS_PRD_VAL_3 DECIMAL(28, 7)  NULL , 
ALT_WAIT_DIS_PRD_VAL_4 DECIMAL(28, 7)  NULL , 
ALT_WAIT_DIS_PRD_VAL_5 DECIMAL(28, 7)  NULL , 
ALT_WAIT_DIS_PRD_VAL_6 DECIMAL(28, 7)  NULL , 
ALT_WAIT_DIS_PRD_VAL_7 DECIMAL(28, 7)  NULL , 
ALT_WAIT_DIS_PRD_VAL_8 DECIMAL(28, 7)  NULL , 
ALT_WAIT_DIS_CLNDR_WRK_TYPE VARCHAR(207)  NULL , 
ALT_WAIT_DIS_CLNDR_WRK_TYPE_1 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_CLNDR_WRK_TYPE_2 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_CLNDR_WRK_TYPE_3 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_CLNDR_WRK_TYPE_4 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_CLNDR_WRK_TYPE_5 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_CLNDR_WRK_TYPE_6 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_CLNDR_WRK_TYPE_7 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_CLNDR_WRK_TYPE_8 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_PRD_TYPE VARCHAR(207)  NULL , 
ALT_WAIT_DIS_PRD_TYPE_1 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_PRD_TYPE_2 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_PRD_TYPE_3 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_PRD_TYPE_4 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_PRD_TYPE_5 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_PRD_TYPE_6 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_PRD_TYPE_7 VARCHAR(25)  NULL , 
ALT_WAIT_DIS_PRD_TYPE_8 VARCHAR(25)  NULL , 
WAGES_FROM VARCHAR(175)  NULL , 
WAGES_FROM_1 DECIMAL(20, 2)  NULL , 
WAGES_FROM_2 DECIMAL(20, 2)  NULL , 
WAGES_FROM_3 DECIMAL(20, 2)  NULL , 
WAGES_FROM_4 DECIMAL(20, 2)  NULL , 
WAGES_FROM_5 DECIMAL(20, 2)  NULL , 
WAGES_FROM_6 DECIMAL(20, 2)  NULL , 
WAGES_FROM_7 DECIMAL(20, 2)  NULL , 
WAGES_FROM_8 DECIMAL(20, 2)  NULL , 
WAGES_TO VARCHAR(175)  NULL , 
WAGES_TO_1 DECIMAL(20, 2)  NULL , 
WAGES_TO_2 DECIMAL(20, 2)  NULL , 
WAGES_TO_3 DECIMAL(20, 2)  NULL , 
WAGES_TO_4 DECIMAL(20, 2)  NULL , 
WAGES_TO_5 DECIMAL(20, 2)  NULL , 
WAGES_TO_6 DECIMAL(20, 2)  NULL , 
WAGES_TO_7 DECIMAL(20, 2)  NULL , 
WAGES_TO_8 DECIMAL(20, 2)  NULL , 
WEEKLY_BENEFIT VARCHAR(175)  NULL , 
WEEKLY_BENEFIT_1 DECIMAL(20, 2)  NULL , 
WEEKLY_BENEFIT_2 DECIMAL(20, 2)  NULL , 
WEEKLY_BENEFIT_3 DECIMAL(20, 2)  NULL , 
WEEKLY_BENEFIT_4 DECIMAL(20, 2)  NULL , 
WEEKLY_BENEFIT_5 DECIMAL(20, 2)  NULL , 
WEEKLY_BENEFIT_6 DECIMAL(20, 2)  NULL , 
WEEKLY_BENEFIT_7 DECIMAL(20, 2)  NULL , 
WEEKLY_BENEFIT_8 DECIMAL(20, 2)  NULL , 
DAY30_WORK_MONTH_FLAG VARCHAR(1)  NULL , 
ACTUAL_MONTH_FLAG VARCHAR(1)  NULL , 
UPPER_AGE_LIMIT DECIMAL(28, 7)  NULL , 
LOWER_AGE_LIMIT DECIMAL(28, 7)  NULL , 
SUPP_PERCENT DECIMAL(20, 2)  NULL , 
SUPP_FLAT_AMT DECIMAL(20, 2)  NULL , 
SUPP_BANK_ACC_NAME VARCHAR(50)  NULL , 
SUPP_SUB_ACC_NAME VARCHAR(50)  NULL , 
SUPP_TR_TYPE_CODE VARCHAR(25)  NULL , 
SUPP_SEP_PAY_FLAG VARCHAR(1)  NULL , 
PENSION_AMT DECIMAL(20, 2)  NULL , 
SS_AMT DECIMAL(20, 2)  NULL , 
OTHER_AMT DECIMAL(20, 2)  NULL , 
PRORATE_OFF_FLAG VARCHAR(1)  NULL , 
FULLPAY_ONLY_FLAG VARCHAR(1)  NULL ) 
PRIMARY KEY (DA_ROW_ID, JOBID) 
CREATE_INDEX PK_DDS_STD_CLASS ON (DA_ROW_ID, JOBID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:24:09 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.DDS_STD_PLAN(DA_ROW_ID DECIMAL(28, 7)  KEY  NOT NULL , 
JOBID DECIMAL(28, 7)  KEY  NOT NULL , 
INVALID_ROW DECIMAL(28, 7)  NULL , 
PLAN_NUMBER VARCHAR(20)  NULL , 
PLAN_NAME VARCHAR(20)  NULL , 
PLAN_DESCRIPTION VARCHAR(50)  NULL , 
PLAN_STATUS VARCHAR(25)  NULL , 
PREMIUM DECIMAL(20, 2)  NULL , 
BANK_ACCOUNT_NUM VARCHAR(20)  NULL , 
EFFECTIVE_DATE VARCHAR(8)  NULL , 
EXPIRATION_DATE VARCHAR(8)  NULL , 
ISSUE_DATE VARCHAR(8)  NULL , 
REVIEW_DATE VARCHAR(8)  NULL , 
RENEWAL_DATE VARCHAR(8)  NULL , 
CANCEL_DATE VARCHAR(8)  NULL , 
PREF_DAY_PAY_TYPE VARCHAR(25)  NULL , 
PREF_PAY_SCHEDULE_TYPE VARCHAR(25)  NULL , 
COMMENTS VARCHAR(255)  NULL , 
START_PAY_PERIOD VARCHAR(8)  NULL , 
PRINT_BEFORE_END_FLAG VARCHAR(1)  NULL , 
BANK_SUB_ACCNT_NUM VARCHAR(20)  NULL , 
INSURED_EID VARCHAR(207)  NULL , 
INSURED_HIER_LEVEL VARCHAR(15)  NULL , 
USER_FIELD_A LONG  NULL  SET("Long Type" = 'CLOB', "Native Type" = 'CLOB'), 
USER_FIELD_B VARCHAR(255)  NULL , 
USER_FIELD_C VARCHAR(255)  NULL , 
USER_FIELD_D VARCHAR(255)  NULL , 
USER_FIELD_E VARCHAR(255)  NULL , 
USER_FIELD_F VARCHAR(255)  NULL , 
USER_FIELD_G VARCHAR(255)  NULL , 
USER_FIELD_H VARCHAR(255)  NULL , 
USER_FIELD_I VARCHAR(255)  NULL , 
USER_FIELD_J VARCHAR(255)  NULL , 
USER_FIELD_K VARCHAR(255)  NULL , 
USER_FIELD_L VARCHAR(255)  NULL , 
USER_FIELD_M VARCHAR(255)  NULL , 
USER_FIELD_N VARCHAR(255)  NULL , 
USER_FIELD_O VARCHAR(255)  NULL , 
USER_FIELD_P VARCHAR(255)  NULL , 
USER_FIELD_Q VARCHAR(255)  NULL , 
USER_FIELD_R VARCHAR(255)  NULL , 
USER_FIELD_S VARCHAR(255)  NULL , 
USER_FIELD_T VARCHAR(255)  NULL , 
USER_FIELD_U VARCHAR(255)  NULL , 
USER_FIELD_V VARCHAR(255)  NULL , 
USER_FIELD_W VARCHAR(255)  NULL , 
USER_FIELD_X VARCHAR(255)  NULL , 
USER_FIELD_Y VARCHAR(255)  NULL ) 
PRIMARY KEY (DA_ROW_ID, JOBID) 
CREATE_INDEX PK_DDS_STD_PLAN ON (DA_ROW_ID, JOBID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Fri May  1 03:54:02 2020' )
CREATE TABLE DS_RMDB.DBO.GLOSSARY(IND_STAND_TABLE_ID DECIMAL(10, 0)  NULL , 
LINE_OF_BUS_FLAG INT  NULL , 
REQD_IND_TABL_FLAG INT  NULL , 
TABLE_ID DECIMAL(10, 0)  KEY  NOT NULL , 
SYSTEM_TABLE_NAME VARCHAR(30)  NULL , 
GLOSSARY_TYPE_CODE DECIMAL(10, 0)  NULL , 
ATTACHMENTS_FLAG INT  NULL , 
RELATED_TABLE_ID DECIMAL(10, 0)  NULL , 
REQD_REL_TABL_FLAG INT  NULL , 
NEXT_UNIQUE_ID DECIMAL(10, 0)  NULL , 
RM_USER_ID VARCHAR(50)  NULL , 
DTTM_LAST_UPDATE VARCHAR(14)  NULL , 
DELETED_FLAG INT  NULL , 
TREE_DISPLAY_FLAG DECIMAL(10, 0)  NULL , 
PRIMARY_KEY_COLUMN VARCHAR(100)  NULL ) 
PRIMARY KEY (TABLE_ID) 
CREATE_INDEX IDX_GL_GLOSSSARY_TYPE_CODE ON (GLOSSARY_TYPE_CODE) 
CREATE_INDEX IDX_GL_SYSTEM_TABLE_NAME ON (SYSTEM_TABLE_NAME) 
CREATE_INDEX PK_GLOSSARY ON (TABLE_ID) PRIMARY 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Thu Apr 30 14:24:13 2020' )
CREATE TABLE DS_RMX_STAGING.DBO.USER_VERIFICATION(JOBID DECIMAL(28, 7)  NULL , 
OPTIONSET_ID DECIMAL(28, 7)  NULL , 
MODULE_NAME VARCHAR(25)  NULL , 
IMPORT_AREA VARCHAR(25)  NULL , 
TABLE_NAME VARCHAR(4000)  NULL , 
VERIFICATION_FLAG DECIMAL(28, 7)  NULL , 
STOP_VERIFICATION DECIMAL(28, 7)  NULL ) 
SET("db_alias_name" = 'DBO')
;

 AlGUIComment (ActaName_1 = 'RDatabase_Object_Type',ActaValue_1 = 'TABLE' , 
ActaName_2 = 'RTable_Type',ActaValue_2 = 'TABLE' , 
ActaName_3 = 'RDescription',ActaValue_3 = '' , 
ActaName_4 = 'REstimated_Row_Count',ActaValue_4 = '50000' , 
ActaName_5 = 'RSavedAfterCheckOut',ActaValue_5 = 'YES' , 
ActaName_6 = 'RLoader_Is_Template_Table',ActaValue_6 = 'no' , 
ActaName_7 = 'RDate_modified',ActaValue_7 = 'Fri May  1 03:55:16 2020' )
CREATE TABLE DS_RMDB.DBO.WPA_DIARY_ENTRY(ATT_FORM_CODE DECIMAL(10, 0)  NULL , 
ATT_FORM_SCRTY DECIMAL(10, 0)  NULL , 
ATT_PARENT_CODE DECIMAL(10, 0)  NULL , 
ATT_SEC_REC_ID DECIMAL(10, 0)  NULL , 
AUTO_ID DECIMAL(10, 0)  NULL , 
DIARY_DELETED INT  NULL , 
DIARY_VOID INT  NULL , 
ESTIMATE_TIME DECIMAL(10, 2)  NULL , 
NOTIFY_FLAG INT  NULL , 
ROUTE_FLAG INT  NULL , 
ENTRY_ID DECIMAL(10, 0)  KEY  NOT NULL , 
ENTRY_NAME VARCHAR(200)  NULL , 
ENTRY_NOTES VARCHAR(2000)  NULL , 
CREATE_DATE VARCHAR(14)  NULL , 
COMPLETE_TIME VARCHAR(6)  NULL , 
COMPLETE_DATE VARCHAR(8)  NULL , 
PRIORITY DECIMAL(10, 0)  NULL , 
STATUS_OPEN INT  NULL , 
AUTO_CONFIRM INT  NULL , 
RESPONSE_DATE VARCHAR(8)  NULL , 
RESPONSE VARCHAR(200)  NULL , 
ASSIGNED_USER VARCHAR(50)  NULL , 
ASSIGNING_USER VARCHAR(50)  NULL , 
ASSIGNED_GROUP VARCHAR(50)  NULL , 
IS_ATTACHED INT  NULL , 
ATTACH_TABLE VARCHAR(18)  NULL , 
ATTACH_RECORDID DECIMAL(10, 0)  NULL , 
REGARDING VARCHAR(100)  NULL , 
TE_TRACKED INT  NULL , 
TE_START_TIME VARCHAR(6)  NULL , 
TE_END_TIME VARCHAR(6)  NULL , 
TE_TOTAL_HOURS DOUBLE  NULL , 
TE_EXPENSES DOUBLE  NULL , 
COMPLETED_BY_USER VARCHAR(50)  NULL , 
AUTO_LATE_NOTIFY VARCHAR(200)  NULL , 
EMAIL_NOTIFY_FLAG INT  NULL , 
LEGACY_UNIQUE_IDENTIFIER VARCHAR(100)  NULL , 
NON_ROUTE_FLAG INT  NULL , 
NON_ROLL_FLAG INT  NULL , 
DTTM_RCD_ADDED VARCHAR(14)  NULL , 
ADDED_BY_USER VARCHAR(50)  NULL , 
DTTM_RCD_LAST_UPD VARCHAR(14)  NULL , 
UPDATED_BY_USER VARCHAR(50)  NULL , 
DIARY_STATUS DECIMAL(10, 0)  NULL , 
COLOR_CODE DECIMAL(10, 0)  NULL , 
ATT_PARENT_TABLE VARCHAR(18)  NULL , 
LOG_INFO VARCHAR(2000)  NULL , 
ACTION VARCHAR(2000)  NULL ) 
PRIMARY KEY (ENTRY_ID) 
CREATE_INDEX IDX_WDE_ASSIGNED_GROUP ON (ASSIGNED_GROUP) 
CREATE_INDEX IDX_WDE_ASSIGNED_USER ON (ASSIGNED_USER) 
CREATE_INDEX IDX_WDE_MULTI_1 ON (ATTACH_RECORDID, AUTO_ID) 
CREATE_INDEX PK_WPA_DIARY_ENTRY ON (ENTRY_ID) PRIMARY 
CREATE_INDEX RMA_IDX_RMX_WPA_STATUS ON (ATTACH_TABLE, ATTACH_RECORDID, STATUS_OPEN) 
SET("db_alias_name" = 'DBO')
;
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Apr 17 07:18:10 2020')
CREATE __AL_PROJECT DA_DDS J_DDS;
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'NO', "ActaValue_2" = 'Mon Apr 25 17:21:05 2016', "ActaValue_3" = 'Mon May 02 16:09:48 2016', "InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '88', "x" = '-1', "y" = '-1')
CREATE __AL_MESSAGE DATASTORE DDS::'a8dadfd7-4255-4eb6-adab-0fbbcf216065'(gEVENTS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCLAIMS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPAYMENTS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPAYMENT_SUB_ACCOUNT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPAYMENT_BANK_ACCOUNT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gMED_WATCH_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gADJUSTER_NOTES_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gENHANCED_NOTES_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gSTD_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPERFORM_VERIFICATION INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCHK_DUPLICATE_ENTITY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gALLOW_NEW_CODES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gALLOW_NEW_EMPLOYEES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gALLOW_NEW_DEPARTMENT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCHK_CREATE_NEWENTITY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEMPLOYEE_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEMPLOYEE_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEMPLOYEE_MATCH_BY_DOB INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEMPLOYEE_MATCH_BY_EMP_NUM INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gNON_EMP_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gNON_EMP_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gNON_EMP_MATCH_BY_DOB INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCREATE_PI_ENT_IF_TAXID_EMPTY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gALLOW_NEW_CLAIMS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gID_CLAIMANT_BY_NAME_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gID_CLAIMANT_BY_SUFFIX_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gUPDATE_CLAIMANT_NAME_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCRT_ENT_IF_TAXID_EMPTY_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gUPDATE_CLAIMANT_NAME_WC INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gATTACH_TRANS_ID_TO_CHECK_NO INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gRECALCULATE_RESERVES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gDONT_CHECK_DUPLICATE_PAYMENTS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCHECK_DUPLICATE_RESERVE_TRANS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gID_CLAIMANT_BY_Suffix INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gID_CLAIMANT_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gVALIDATE_SUPPLEMENTALS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEN_ENT_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEN_ENT_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEN_ENT_MATCH_BY_ABBRV INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gSET_ADJUSTER_AS_CURRENT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gENHNOTES_CLMNT_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gENHNOTES_CLMNT_TAX INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gENHNOTES_CLMNT_ABBREVIATION INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCONFIG_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEVENT_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCLAIM_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPAYMENT_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gMEDWATCH_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gSTDPLAN_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gORGSEC_FLAG INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gDIARY_TO_USERS VARCHAR(1024) , gUSE_TRANSACTIONS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gVALID_START_DATE VARCHAR(1024) , gVALID_END_DATE VARCHAR(1024) , gEVENT_IMPORTFILE_NAME VARCHAR(1024) , gMEDWATCH_IMPORTFILE_NAME VARCHAR(1024) , gCLAIM_IMPORTFILE_NAME VARCHAR(1024) , gSTD_PLAN_IMPORTFILE_NAME VARCHAR(1024) , gSTD_CLASS_IMPORTFILE_NAME VARCHAR(1024) , gADJUSTER_IMPORTFILE_NAME VARCHAR(1024) , gPAYMENT_IMPORTFILE_NAME VARCHAR(1024) , gEN_IMPORTFILE_NAME VARCHAR(1024) )
 SET ("ACTA_INCLUDE_1_C:\\Users\\nkhetan\\Desktop\\DDS.xsd" = '<?xml version="1.0" encoding="Windows-1252"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="DDS">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="gEVENTS_AVAILABLE" type="xs:unsignedByte" />
        <xs:element name="gCLAIMS_AVAILABLE" type="xs:unsignedByte" />
        <xs:element name="gPAYMENTS_AVAILABLE" type="xs:unsignedByte" />
	<xs:element name="gPAYMENT_SUB_ACCOUNT" type="xs:unsignedByte" />
	<xs:element name="gPAYMENT_BANK_ACCOUNT" type="xs:unsignedByte" />
	<xs:element name="gMED_WATCH_AVAILABLE" type="xs:unsignedByte" />
	<xs:element name="gADJUSTER_NOTES_AVAILABLE" type="xs:unsignedByte" />
	<xs:element name="gENHANCED_NOTES_AVAILABLE" type="xs:unsignedByte" />
	<xs:element name="gSTD_AVAILABLE" type="xs:unsignedByte" />
  	<xs:element name="gPERFORM_VERIFICATION" type="xs:unsignedByte" />
        <xs:element name="gCHK_DUPLICATE_ENTITY" type="xs:unsignedByte" />
	<xs:element name="gALLOW_NEW_CODES" type="xs:unsignedByte" />
        <xs:element name="gALLOW_NEW_EMPLOYEES" type="xs:unsignedByte" />
        <xs:element name="gALLOW_NEW_DEPARTMENT" type="xs:unsignedByte" />
        <xs:element name="gCHK_CREATE_NEWENTITY" type="xs:unsignedByte" />
        <xs:element name="gEMPLOYEE_MATCH_BY_NAME" type="xs:unsignedByte" />
        <xs:element name="gEMPLOYEE_MATCH_BY_TAX_ID" type="xs:unsignedByte" />
	<xs:element name="gEMPLOYEE_MATCH_BY_DOB" type="xs:unsignedByte" />
        <xs:element name="gEMPLOYEE_MATCH_BY_EMP_NUM" type="xs:unsignedByte" />
        <xs:element name="gNON_EMP_MATCH_BY_NAME" type="xs:unsignedByte" />
        <xs:element name="gNON_EMP_MATCH_BY_TAX_ID" type="xs:unsignedByte" />
	<xs:element name="gNON_EMP_MATCH_BY_DOB" type="xs:unsignedByte" />
        <xs:element name="gCREATE_PI_ENT_IF_TAXID_EMPTY" type="xs:unsignedByte" />
        <xs:element name="gALLOW_NEW_CLAIMS" type="xs:unsignedByte" />
        <xs:element name="gID_CLAIMANT_BY_NAME_GCVA" type="xs:unsignedByte" />
        <xs:element name="gID_CLAIMANT_BY_SUFFIX_GCVA" type="xs:unsignedByte" />
        <xs:element name="gUPDATE_CLAIMANT_NAME_GCVA" type="xs:unsignedByte" />
        <xs:element name="gCRT_ENT_IF_TAXID_EMPTY_GCVA" type="xs:unsignedByte" />
        <xs:element name="gUPDATE_CLAIMANT_NAME_WC" type="xs:unsignedByte" />
        <xs:element name="gATTACH_TRANS_ID_TO_CHECK_NO" type="xs:unsignedByte" />
        <xs:element name="gRECALCULATE_RESERVES" type="xs:unsignedByte" />
        <xs:element name="gDONT_CHECK_DUPLICATE_PAYMENTS" type="xs:unsignedByte" />
        <xs:element name="gCHECK_DUPLICATE_RESERVE_TRANS" type="xs:unsignedByte" />
        <xs:element name="gID_CLAIMANT_BY_Suffix" type="xs:unsignedByte" />
	<xs:element name="gID_CLAIMANT_BY_NAME" type="xs:unsignedByte" />
	<xs:element name="gVALIDATE_SUPPLEMENTALS" type="xs:unsignedByte" />
        <xs:element name="gEN_ENT_MATCH_BY_NAME" type="xs:unsignedByte" />
        <xs:element name="gEN_ENT_MATCH_BY_TAX_ID" type="xs:unsignedByte" />
        <xs:element name="gEN_ENT_MATCH_BY_ABBRV" type="xs:unsignedByte" />
	<xs:element name="gSET_ADJUSTER_AS_CURRENT" type="xs:unsignedByte" />
	<xs:element name="gENHNOTES_CLMNT_NAME" type="xs:unsignedByte" />
	<xs:element name="gENHNOTES_CLMNT_TAX" type="xs:unsignedByte" />
	<xs:element name="gENHNOTES_CLMNT_ABBREVIATION" type="xs:unsignedByte" />
	<xs:element name="gCONFIG_ID" type="xs:unsignedByte" />
        <xs:element name="gEVENT_SUPP" type="xs:unsignedByte" />
        <xs:element name="gCLAIM_SUPP" type="xs:unsignedByte" />
        <xs:element name="gPAYMENT_SUPP" type="xs:unsignedByte" />
	<xs:element name="gMEDWATCH_SUPP" type="xs:unsignedByte" />
	<xs:element name="gSTDPLAN_SUPP" type="xs:unsignedByte" />
        <xs:element name="gORGSEC_FLAG" type="xs:unsignedByte" />
        <xs:element name="gDIARY_TO_USERS" />
        <xs:element name="gUSE_TRANSACTIONS" type="xs:unsignedByte" />
        <xs:element name="gVALID_START_DATE" />
        <xs:element name="gVALID_END_DATE" />
        <xs:element name="gEVENT_IMPORTFILE_NAME" />
        <xs:element name="gMEDWATCH_IMPORTFILE_NAME" />
        <xs:element name="gCLAIM_IMPORTFILE_NAME" />
        <xs:element name="gSTD_PLAN_IMPORTFILE_NAME" />
        <xs:element name="gSTD_CLASS_IMPORTFILE_NAME" />
        <xs:element name="gADJUSTER_IMPORTFILE_NAME" />
        <xs:element name="gPAYMENT_IMPORTFILE_NAME" />
        <xs:element name="gEN_IMPORTFILE_NAME" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>', "DEFAULT_VARCHAR_SIZE_IN_IMPORTED_XML_DEFINITION" = '1024', "DTD2NRDM_CIRCULAR_LEVEL" = '0', "DTDRootElement" = 'DDS', "IsDTD" = 'no', "NewKeyFormat" = 'YES', "TREAT_BASE64BINARY_AS_BLOB" = 'no', "application_type" = '', "ds_configuration_enabled" = 'no', "is_xml_schema" = 'yes', "message_type" = 'xml', "schema_file" = 'C:\\Users\\nkhetan\\Desktop\\DDS.xsd', "schema_string" = '<DDS xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xsi:noNamespaceSchemaLocation="C:\\Users\\nkhetan\\Desktop\\DDS.xsd">
</DDS>');
 AlGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "x" = '-1', "y" = '-1')
CREATE __AL_MESSAGE DATASTORE DDS_161::'2d87b003-543a-4c6d-9bde-7f0ff9f4d745'(gEVENTS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gMED_WATCH_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCLAIMS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gSTD_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gADJUSTER_NOTES_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPAYMENTS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPAYMENT_SUB_ACCOUNT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPAYMENT_BANK_ACCOUNT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gENHANCED_NOTES_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPERFORM_VERIFICATION INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCHK_DUPLICATE_ENTITY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gALLOW_NEW_CODES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gALLOW_NEW_EMPLOYEES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gALLOW_NEW_DEPARTMENT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCHK_CREATE_NEWENTITY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEMPLOYEE_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEMPLOYEE_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEMPLOYEE_MATCH_BY_EMP_NUM INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gNON_EMP_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gNON_EMP_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCREATE_PI_ENT_IF_TAXID_EMPTY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gALLOW_NEW_CLAIMS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gID_CLAIMANT_BY_NAME_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gID_CLAIMANT_BY_SUFFIX_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gUPDATE_CLAIMANT_NAME_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCRT_ENT_IF_TAXID_EMPTY_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gUPDATE_CLAIMANT_NAME_WC INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gATTACH_TRANS_ID_TO_CHECK_NO INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gRECALCULATE_RESERVES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gDONT_CHECK_DUPLICATE_PAYMENTS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCHECK_DUPLICATE_RESERVE_TRANS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gID_CLAIMANT_BY_Suffix INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gID_CLAIMANT_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gVALIDATE_SUPPLEMENTALS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gSET_ADJUSTER_AS_CURRENT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEN_ENT_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEN_ENT_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEN_ENT_MATCH_BY_ABBRV INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCONFIG_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gEVENT_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gCLAIM_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gPAYMENT_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gORGSEC_FLAG INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gDIARY_TO_USERS VARCHAR(1024) , gUSE_TRANSACTIONS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') , gVALID_START_DATE VARCHAR(1024) , gVALID_END_DATE VARCHAR(1024) , gEVENT_IMPORTFILE_NAME VARCHAR(1024) , gMEDWATCH_IMPORTFILE_NAME VARCHAR(1024) , gCLAIM_IMPORTFILE_NAME VARCHAR(1024) , gSTD_PLAN_IMPORTFILE_NAME VARCHAR(1024) , gSTD_CLASS_IMPORTFILE_NAME VARCHAR(1024) , gADJUSTER_IMPORTFILE_NAME VARCHAR(1024) , gPAYMENT_IMPORTFILE_NAME VARCHAR(1024) , gEN_IMPORTFILE_NAME VARCHAR(1024) )
 SET ("ACTA_INCLUDE_1_C:\\Users\\nkhetan\\Desktop\\DDS_16.1.xsd" = '<?xml version="1.0" encoding="Windows-1252"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="DDS">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="gEVENTS_AVAILABLE" type="xs:unsignedByte" />
        <xs:element name="gMED_WATCH_AVAILABLE" type="xs:unsignedByte" />
        <xs:element name="gCLAIMS_AVAILABLE" type="xs:unsignedByte" />
        <xs:element name="gSTD_AVAILABLE" type="xs:unsignedByte" />
        <xs:element name="gADJUSTER_NOTES_AVAILABLE" type="xs:unsignedByte" />
        <xs:element name="gPAYMENTS_AVAILABLE" type="xs:unsignedByte" />
	<xs:element name="gPAYMENT_SUB_ACCOUNT" type="xs:unsignedByte" />
	<xs:element name="gPAYMENT_BANK_ACCOUNT" type="xs:unsignedByte" />
	<xs:element name="gENHANCED_NOTES_AVAILABLE" type="xs:unsignedByte" />
  	<xs:element name="gPERFORM_VERIFICATION" type="xs:unsignedByte" />
        <xs:element name="gCHK_DUPLICATE_ENTITY" type="xs:unsignedByte" />
	<xs:element name="gALLOW_NEW_CODES" type="xs:unsignedByte" />
        <xs:element name="gALLOW_NEW_EMPLOYEES" type="xs:unsignedByte" />
        <xs:element name="gALLOW_NEW_DEPARTMENT" type="xs:unsignedByte" />
        <xs:element name="gCHK_CREATE_NEWENTITY" type="xs:unsignedByte" />
        <xs:element name="gEMPLOYEE_MATCH_BY_NAME" type="xs:unsignedByte" />
        <xs:element name="gEMPLOYEE_MATCH_BY_TAX_ID" type="xs:unsignedByte" />
        <xs:element name="gEMPLOYEE_MATCH_BY_EMP_NUM" type="xs:unsignedByte" />
        <xs:element name="gNON_EMP_MATCH_BY_NAME" type="xs:unsignedByte" />
        <xs:element name="gNON_EMP_MATCH_BY_TAX_ID" type="xs:unsignedByte" />
        <xs:element name="gCREATE_PI_ENT_IF_TAXID_EMPTY" type="xs:unsignedByte" />
        <xs:element name="gALLOW_NEW_CLAIMS" type="xs:unsignedByte" />
        <xs:element name="gID_CLAIMANT_BY_NAME_GCVA" type="xs:unsignedByte" />
        <xs:element name="gID_CLAIMANT_BY_SUFFIX_GCVA" type="xs:unsignedByte" />
        <xs:element name="gUPDATE_CLAIMANT_NAME_GCVA" type="xs:unsignedByte" />
        <xs:element name="gCRT_ENT_IF_TAXID_EMPTY_GCVA" type="xs:unsignedByte" />
        <xs:element name="gUPDATE_CLAIMANT_NAME_WC" type="xs:unsignedByte" />
        <xs:element name="gATTACH_TRANS_ID_TO_CHECK_NO" type="xs:unsignedByte" />
        <xs:element name="gRECALCULATE_RESERVES" type="xs:unsignedByte" />
        <xs:element name="gDONT_CHECK_DUPLICATE_PAYMENTS" type="xs:unsignedByte" />
        <xs:element name="gCHECK_DUPLICATE_RESERVE_TRANS" type="xs:unsignedByte" />
        <xs:element name="gID_CLAIMANT_BY_Suffix" type="xs:unsignedByte" />
	<xs:element name="gID_CLAIMANT_BY_NAME" type="xs:unsignedByte" />
	<xs:element name="gVALIDATE_SUPPLEMENTALS" type="xs:unsignedByte" />
        <xs:element name="gSET_ADJUSTER_AS_CURRENT" type="xs:unsignedByte" />
        <xs:element name="gEN_ENT_MATCH_BY_NAME" type="xs:unsignedByte" />
        <xs:element name="gEN_ENT_MATCH_BY_TAX_ID" type="xs:unsignedByte" />
        <xs:element name="gEN_ENT_MATCH_BY_ABBRV" type="xs:unsignedByte" />
        <xs:element name="gCONFIG_ID" type="xs:unsignedByte" />
        <xs:element name="gEVENT_SUPP" type="xs:unsignedByte" />
        <xs:element name="gCLAIM_SUPP" type="xs:unsignedByte" />
        <xs:element name="gPAYMENT_SUPP" type="xs:unsignedByte" />
        <xs:element name="gORGSEC_FLAG" type="xs:unsignedByte" />
        <xs:element name="gDIARY_TO_USERS" />
        <xs:element name="gUSE_TRANSACTIONS" type="xs:unsignedByte" />
        <xs:element name="gVALID_START_DATE" />
        <xs:element name="gVALID_END_DATE" />
        <xs:element name="gEVENT_IMPORTFILE_NAME" />
        <xs:element name="gMEDWATCH_IMPORTFILE_NAME" />
        <xs:element name="gCLAIM_IMPORTFILE_NAME" />
        <xs:element name="gSTD_PLAN_IMPORTFILE_NAME" />
        <xs:element name="gSTD_CLASS_IMPORTFILE_NAME" />
        <xs:element name="gADJUSTER_IMPORTFILE_NAME" />
        <xs:element name="gPAYMENT_IMPORTFILE_NAME" />
        <xs:element name="gEN_IMPORTFILE_NAME" />
      </xs:sequence>
    </xs:complexType>
  </xs:element>
</xs:schema>', "DEFAULT_VARCHAR_SIZE_IN_IMPORTED_XML_DEFINITION" = '1024', "DTD2NRDM_CIRCULAR_LEVEL" = '0', "DTDRootElement" = 'DDS', "IsDTD" = 'no', "TREAT_BASE64BINARY_AS_BLOB" = 'no', "application_type" = '', "ds_configuration_enabled" = 'no', "is_xml_schema" = 'yes', "message_type" = 'xml', "schema_file" = 'C:\\Users\\nkhetan\\Desktop\\DDS_16.1.xsd', "schema_string" = '<DDS xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   xsi:noNamespaceSchemaLocation="C:\\Users\\nkhetan\\Desktop\\DDS_16.1.xsd">
</DDS>');
 AlGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '67', "ui_display_name" = 'Copy_1_Adjuster_csv', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_Adjuster_csv::'3c325101-84fb-41ef-8c9a-5c8d5be6b5ff'(RECORD_TYPE VARCHAR(25) , CLAIM_ID VARCHAR(25) , ADJ_DATE VARCHAR(8) , ADJ_TIME VARCHAR(6) , FIRST_NAME VARCHAR(255) , LAST_NAME VARCHAR(255) , TEXT VARCHAR(32000) , ADJUSTER_TYPE VARCHAR(25) , NAME_TYPE VARCHAR(25) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '25', "column_width2" = '25', "column_width3" = '8', "column_width4" = '6', "column_width5" = '255', "column_width6" = '255', "column_width7" = '32000', "column_width8" = '25', "column_width9" = '25', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gAdjusters_ImportFile_Name', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 18:28:55 2017', "InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '83', "ui_display_name" = 'DDS_Adjuster_csv_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_Adjuster_csv_S3::'548ba836-330e-44be-be5d-4977ebefe311'(RECORD_TYPE VARCHAR(25) , CLAIM_ID VARCHAR(25) , ADJ_DATE VARCHAR(8) , ADJ_TIME VARCHAR(6) , FIRST_NAME VARCHAR(255) , LAST_NAME VARCHAR(255) , TEXT VARCHAR(32000) , ADJUSTER_TYPE VARCHAR(25) , NAME_TYPE VARCHAR(25) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '25', "column_width2" = '25', "column_width3" = '8', "column_width4" = '6', "column_width5" = '255', "column_width6" = '255', "column_width7" = '32000', "column_width8" = '25', "column_width9" = '25', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'job_server', "file_name" = '$gAdjusters_ImportFile_Name', "file_type" = 'delimited_file', "fl_file_name" = '$gAdjusters_ImportFile_Name', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RDate_created', "ActaName_2" = 'RDate_modified', "ActaName_3" = 'RSavedAfterCheckOut', "ActaName_4" = 'RDescription', "ActaValue_1" = 'Fri Apr 17 07:18:11 2020', "ActaValue_2" = 'Mon Sep 18 12:32:41 2017', "ActaValue_3" = 'YES', "ActaValue_4" = 'DDS_CLAIM_UPTO707 This is the import file format for Claims.csv. The name can be misleading as it says upto 707. This file format for Claims.csv is compatible with RMA 16.1 and contains 176 fields. upto POLICY_LOB.

Please add more description if you add some new fields. Its convenient for everyone.', "InputSchema_WidthProp" = '36', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '61', "ui_display_name" = 'DDS_CLAIM_UPTO707', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_CLAIM_UPTO707::'775dee31-e83f-4e5d-b562-ad6fed79e403'(RECORD_TYPE VARCHAR(1) , CLAIM_NUMBER VARCHAR(25) , CLAIM_SUFFIX VARCHAR(4) , CLAIM_TYPE VARCHAR(25) , DIVISION VARCHAR(25) , LOCATION VARCHAR(25) , DEPARTMENT VARCHAR(25) , COMPANY VARCHAR(25) , COUNTRY VARCHAR(20)  SET( "Content_Type" = 'COUNTRY') , DIVISION_DESC VARCHAR(255) , LOCATION_DESC VARCHAR(255) , DEPARTMENT_DESC VARCHAR(255) , COMPANY_DESC VARCHAR(255) , TIME_OF_CLAIM VARCHAR(6) , DATE_OF_LOSS VARCHAR(8) , DATE_REPORTED VARCHAR(8) , DATE_OF_CLAIM VARCHAR(8) , DATE_CLOSED VARCHAR(14) , DATE_REOPENED VARCHAR(8) , CLAIM_STATUS VARCHAR(25) , RESERVE_A_OPENING VARCHAR(20) , RESERVE_A_CURRENT DECIMAL(20, 2) , RESERVE_A_DATE VARCHAR(8) , PAID_A_TOTAL VARCHAR(20) , COLLECTION_A_TOTAL VARCHAR(20) , RESERVE_B_OPENING VARCHAR(20) , RESERVE_B_CURRENT DECIMAL(20, 2) , RESERVE_B_DATE VARCHAR(8) , PAID_B_TOTAL VARCHAR(20) , COLLECTION_B_TOTAL VARCHAR(20) , RESERVE_C_OPENING VARCHAR(20) , RESERVE_C_CURRENT DECIMAL(20, 2) , RESERVE_C_DATE VARCHAR(8) , PAID_C_TOTAL VARCHAR(20) , COLLECTION_C_TOTAL VARCHAR(20) , RESERVE_D_OPENING VARCHAR(20) , RESERVE_D_CURRENT DECIMAL(20, 2) , RESERVE_D_DATE VARCHAR(8) , PAID_D_TOTAL VARCHAR(20) , COLLECTION_D_TOTAL VARCHAR(20) , CAUSE_CODE VARCHAR(25) , CLAIMANT_LASTNAME VARCHAR(255) , CLAIMANT_FIRSTNAME VARCHAR(255) , CLAIMANT_SSN VARCHAR(20) , CLAIMANT_ADDRESS VARCHAR(201) , CLAIMANT_CITY VARCHAR(50) , CLAIMANT_STATE VARCHAR(25) , CLAIMANT_ZIP VARCHAR(10) , CLAIMANT_SEX VARCHAR(25) , CLAIMANT_BIRTH_DT VARCHAR(8) , CLAIMANT_PHONE VARCHAR(30) , CLAIMANT_COMMENT VARCHAR(32000) , DEF_LASTNAME VARCHAR(255) , DEF_FIRSTNAME VARCHAR(255) , DEF_ADDRESS VARCHAR(100) , DEF_CITY VARCHAR(50) , DEF_STATE VARCHAR(25) , DEF_ZIP VARCHAR(10) , DEF_PHONE VARCHAR(30) , DEF_COMMENT VARCHAR(32000) , CLOSURE_METHOD VARCHAR(25) , DESCRIPTION VARCHAR(32000) , SERVICE VARCHAR(25) , ICD10 VARCHAR(129) , DIAGNOSIS VARCHAR(129) , POLICY_NUMBER VARCHAR(40) , POLICY_EFFECT_DATE VARCHAR(8) , POLICY_EXPIRE_DATE VARCHAR(8) , SUIT_DATE VARCHAR(8) , CASE_NUMBER VARCHAR(22) , EVENT_NUMBER VARCHAR(25) , COMMENTS VARCHAR(32000) , ILLNESS_CODE VARCHAR(25) , INJURY_CODE VARCHAR(129) , BODY_PART VARCHAR(129) , EMP_DEPARTMENT VARCHAR(25) , OCCUPATION VARCHAR(25) , DATE_OF_BIRTH VARCHAR(8) , DATE_OF_HIRE VARCHAR(8) , DATE_OF_DEATH VARCHAR(8) , OSHA_RECORDABLE VARCHAR(1) , EMPLOYEE_SEX VARCHAR(25) , WEEKLY_WAGE_RATE DECIMAL(20, 2) , HOURLY_WAGE_RATE DECIMAL(20, 2) , WEEKLY_HOURS VARCHAR(11) , NCCI_CLASS_CODE VARCHAR(25) , ACCIDENT_STATE VARCHAR(25) , MARITAL_STATUS VARCHAR(25) , DEPENDENT_LNAME VARCHAR(255) , DEPENDENT_FNAME VARCHAR(255) , DEPENDENT_BIRTH_DT VARCHAR(8) , LICENSE_NUMBER VARCHAR(20) , LICENSE_EXPIR_DATE VARCHAR(8) , LICENSE_TYPE VARCHAR(25) , LICENSE_RESTRICT VARCHAR(25) , RETURN_WORK_DATE VARCHAR(8) , ACTIVE_FLAG VARCHAR(1) , EMPLOYER_SIC_CODE VARCHAR(25) , EMPLOYER_PAYROLL_CLASS_CODE VARCHAR(25) , VEHICLE_ID VARCHAR(20) , VEHICLE_YEAR VARCHAR(4) , VEHICLE_MAKE VARCHAR(20) , EMPLOYEE_ID VARCHAR(20) , VEHICLE_MODEL VARCHAR(50) , FILE_NUMBER VARCHAR(32) , DATE_LAST_WORKED VARCHAR(8) , CLAIMANT_MIDDLENAME VARCHAR(255) , ACCIDENT_DESC VARCHAR(25) , ACCIDENT_PREVENTABLE VARCHAR(1) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) , USER_FIELD_Z VARCHAR(255) , PLAN_NAME VARCHAR(20) , CLASS_NAME VARCHAR(20) , DISABIL_FROM_DATE VARCHAR(8) , DISABIL_TO_DATE VARCHAR(8) , BENEFITS_START VARCHAR(8) , BENEFITS_THROUGH VARCHAR(8) , DIS_TYPE VARCHAR(25) , BEN_CALC_PAY_START VARCHAR(8) , BEN_CALC_PAY_TO VARCHAR(8) , FEDERAL_TAX_FLAG VARCHAR(1) , SOCIAL_SEC_TAX_FLAG VARCHAR(1) , MEDICARE_TAX_FLAG VARCHAR(1) , STATE_TAX_FLAG VARCHAR(1) , STD_DISABIL_TYPE VARCHAR(25) , MONTHLY_RATE DECIMAL(20, 2) , ELIG_DIS_BEN_FLAG VARCHAR(1) , DIS_OPTION_CODE VARCHAR(25) , PENSION_AMT DECIMAL(20, 2) , SS_AMT DECIMAL(20, 2) , OTHER_AMT DECIMAL(20, 2) , RESERVE_E_OPENING VARCHAR(20) , RESERVE_E_CURRENT DECIMAL(20, 2) , RESERVE_E_DATE VARCHAR(8) , PAID_E_TOTAL VARCHAR(20) , COLLECTION_E_TOTAL VARCHAR(20) , CLAIMANT_TYPE VARCHAR(25) , OSHA_ACC_DESC VARCHAR(16) , DATE_WORKED_LAST VARCHAR(8) , DATE_RETURNED VARCHAR(8) , STATE_DURATION VARCHAR(4) , DATE_FIRST_RESTRICT VARCHAR(8) , DATE_LAST_RESTRICT VARCHAR(8) , PERCENT_DISABLED VARCHAR(4) , SETTLEMENT_METHOD VARCHAR(25) , MGND_CARE_ORG_TYPE VARCHAR(25) , DISPUTED_CASE_FLAG VARCHAR(1) , NCCI_LOSS_TYPE_LOSS_CODE VARCHAR(25) , NCCI_LOSS_TYPE_RECOV_CODE VARCHAR(25) , TREATMENT_CODE VARCHAR(25) , CLAIMANT_STATUS VARCHAR(25) , NAME_TYPE VARCHAR(25) , BENEFICIARY_CODE VARCHAR(25) , INFO_REQ_DATE VARCHAR(8) , PROOF_OF_LOSS_DATE VARCHAR(8) , CLAIM_CAUSE_CODE VARCHAR(25) , DEF_BIRTH_DT VARCHAR(8) , POLICY_LOB VARCHAR(25) , CURR_CODE VARCHAR(25) , CLAIM_TYPE_DATE_CHANGED VARCHAR(8) , REVIEW_STATUS_CODE VARCHAR(25) , REVIEW_STATUS_DATE_CHANGED VARCHAR(8) , REVIEW_REASON VARCHAR(2000) , CLAIM_TYPE_REASON VARCHAR(2000) )
 SET ("abap_file_format" = 'no', "adaptable" = 'yes', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '1', "column_width10" = '255', "column_width100" = '20', "column_width101" = '4', "column_width102" = '20', "column_width103" = '20', "column_width104" = '50', "column_width105" = '32', "column_width106" = '8', "column_width107" = '255', "column_width108" = '25', "column_width109" = '1', "column_width11" = '255', "column_width110" = '32000', "column_width111" = '255', "column_width112" = '255', "column_width113" = '255', "column_width114" = '255', "column_width115" = '255', "column_width116" = '255', "column_width117" = '255', "column_width118" = '255', "column_width119" = '255', "column_width12" = '255', "column_width120" = '255', "column_width121" = '255', "column_width122" = '255', "column_width123" = '255', "column_width124" = '255', "column_width125" = '255', "column_width126" = '255', "column_width127" = '255', "column_width128" = '255', "column_width129" = '255', "column_width13" = '255', "column_width130" = '255', "column_width131" = '255', "column_width132" = '255', "column_width133" = '255', "column_width134" = '255', "column_width135" = '255', "column_width136" = '20', "column_width137" = '20', "column_width138" = '8', "column_width139" = '8', "column_width14" = '6', "column_width140" = '8', "column_width141" = '8', "column_width142" = '25', "column_width143" = '8', "column_width144" = '8', "column_width145" = '1', "column_width146" = '1', "column_width147" = '1', "column_width148" = '1', "column_width149" = '25', "column_width15" = '8', "column_width150" = '11', "column_width151" = '1', "column_width152" = '25', "column_width153" = '11', "column_width154" = '11', "column_width155" = '11', "column_width156" = '20', "column_width157" = '20', "column_width158" = '8', "column_width159" = '20', "column_width16" = '8', "column_width160" = '20', "column_width161" = '25', "column_width162" = '16', "column_width163" = '8', "column_width164" = '8', "column_width165" = '4', "column_width166" = '8', "column_width167" = '8', "column_width168" = '4', "column_width169" = '25', "column_width17" = '8', "column_width170" = '25', "column_width171" = '1', "column_width172" = '25', "column_width173" = '25', "column_width174" = '25', "column_width175" = '25', "column_width176" = '25', "column_width177" = '25', "column_width178" = '8', "column_width179" = '8', "column_width18" = '14', "column_width180" = '25', "column_width181" = '8', "column_width182" = '25', "column_width183" = '25', "column_width184" = '8', "column_width185" = '25', "column_width186" = '8', "column_width187" = '2000', "column_width188" = '2000', "column_width19" = '8', "column_width2" = '25', "column_width20" = '25', "column_width21" = '20', "column_width22" = '20', "column_width23" = '8', "column_width24" = '20', "column_width25" = '20', "column_width26" = '20', "column_width27" = '20', "column_width28" = '8', "column_width29" = '20', "column_width3" = '4', "column_width30" = '20', "column_width31" = '20', "column_width32" = '20', "column_width33" = '8', "column_width34" = '20', "column_width35" = '20', "column_width36" = '20', "column_width37" = '20', "column_width38" = '8', "column_width39" = '20', "column_width4" = '25', "column_width40" = '20', "column_width41" = '25', "column_width42" = '255', "column_width43" = '255', "column_width44" = '20', "column_width45" = '201', "column_width46" = '50', "column_width47" = '25', "column_width48" = '10', "column_width49" = '25', "column_width5" = '25', "column_width50" = '8', "column_width51" = '30', "column_width52" = '32000', "column_width53" = '255', "column_width54" = '255', "column_width55" = '100', "column_width56" = '50', "column_width57" = '25', "column_width58" = '10', "column_width59" = '30', "column_width6" = '25', "column_width60" = '32000', "column_width61" = '25', "column_width62" = '32000', "column_width63" = '25', "column_width64" = '129', "column_width65" = '129', "column_width66" = '40', "column_width67" = '8', "column_width68" = '8', "column_width69" = '8', "column_width7" = '25', "column_width70" = '22', "column_width71" = '25', "column_width72" = '32000', "column_width73" = '25', "column_width74" = '129', "column_width75" = '129', "column_width76" = '25', "column_width77" = '25', "column_width78" = '8', "column_width79" = '8', "column_width8" = '25', "column_width80" = '8', "column_width81" = '1', "column_width82" = '25', "column_width83" = '11', "column_width84" = '11', "column_width85" = '11', "column_width86" = '25', "column_width87" = '25', "column_width88" = '25', "column_width89" = '255', "column_width9" = '20', "column_width90" = '255', "column_width91" = '8', "column_width92" = '20', "column_width93" = '8', "column_width94" = '25', "column_width95" = '25', "column_width96" = '8', "column_width97" = '1', "column_width98" = '25', "column_width99" = '25', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gClaims_ImportFile_Name', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'DDS_CLAIM_UPTO707', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'no', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "table_weight" = '0', "text_delimiter" = '"', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Apr 17 07:18:11 2020', "ActaValue_3" = 'Mon Sep 18 13:10:50 2017', "InputSchema_WidthProp" = '36', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '61', "ui_display_name" = 'DDS_CLAIM_UPTO707_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_CLAIM_UPTO707_S3::'fbab65b6-a969-4b50-9b62-6f7f060080dd'(RECORD_TYPE VARCHAR(1) , CLAIM_NUMBER VARCHAR(25) , CLAIM_SUFFIX VARCHAR(4) , CLAIM_TYPE VARCHAR(25) , DIVISION VARCHAR(25) , LOCATION VARCHAR(25) , DEPARTMENT VARCHAR(25) , COMPANY VARCHAR(25) , COUNTRY VARCHAR(20)  SET( "Content_Type" = 'COUNTRY') , DIVISION_DESC VARCHAR(255) , LOCATION_DESC VARCHAR(255) , DEPARTMENT_DESC VARCHAR(255) , COMPANY_DESC VARCHAR(255) , TIME_OF_CLAIM VARCHAR(6) , DATE_OF_LOSS VARCHAR(8) , DATE_REPORTED VARCHAR(8) , DATE_OF_CLAIM VARCHAR(8) , DATE_CLOSED VARCHAR(14) , DATE_REOPENED VARCHAR(8) , CLAIM_STATUS VARCHAR(25) , RESERVE_A_OPENING VARCHAR(20) , RESERVE_A_CURRENT DECIMAL(20, 2) , RESERVE_A_DATE VARCHAR(8) , PAID_A_TOTAL VARCHAR(20) , COLLECTION_A_TOTAL VARCHAR(20) , RESERVE_B_OPENING VARCHAR(20) , RESERVE_B_CURRENT DECIMAL(20, 2) , RESERVE_B_DATE VARCHAR(8) , PAID_B_TOTAL VARCHAR(20) , COLLECTION_B_TOTAL VARCHAR(20) , RESERVE_C_OPENING VARCHAR(20) , RESERVE_C_CURRENT DECIMAL(20, 2) , RESERVE_C_DATE VARCHAR(8) , PAID_C_TOTAL VARCHAR(20) , COLLECTION_C_TOTAL VARCHAR(20) , RESERVE_D_OPENING VARCHAR(20) , RESERVE_D_CURRENT DECIMAL(20, 2) , RESERVE_D_DATE VARCHAR(8) , PAID_D_TOTAL VARCHAR(20) , COLLECTION_D_TOTAL VARCHAR(20) , CAUSE_CODE VARCHAR(25) , CLAIMANT_LASTNAME VARCHAR(255) , CLAIMANT_FIRSTNAME VARCHAR(255) , CLAIMANT_SSN VARCHAR(20) , CLAIMANT_ADDRESS VARCHAR(201) , CLAIMANT_CITY VARCHAR(50) , CLAIMANT_STATE VARCHAR(25) , CLAIMANT_ZIP VARCHAR(10) , CLAIMANT_SEX VARCHAR(25) , CLAIMANT_BIRTH_DT VARCHAR(8) , CLAIMANT_PHONE VARCHAR(30) , CLAIMANT_COMMENT VARCHAR(32000) , DEF_LASTNAME VARCHAR(255) , DEF_FIRSTNAME VARCHAR(255) , DEF_ADDRESS VARCHAR(100) , DEF_CITY VARCHAR(50) , DEF_STATE VARCHAR(25) , DEF_ZIP VARCHAR(10) , DEF_PHONE VARCHAR(30) , DEF_COMMENT VARCHAR(32000) , CLOSURE_METHOD VARCHAR(25) , DESCRIPTION VARCHAR(32000) , SERVICE VARCHAR(25) , ICD10 VARCHAR(129) , DIAGNOSIS VARCHAR(129) , POLICY_NUMBER VARCHAR(40) , POLICY_EFFECT_DATE VARCHAR(8) , POLICY_EXPIRE_DATE VARCHAR(8) , SUIT_DATE VARCHAR(8) , CASE_NUMBER VARCHAR(22) , EVENT_NUMBER VARCHAR(25) , COMMENTS VARCHAR(32000) , ILLNESS_CODE VARCHAR(25) , INJURY_CODE VARCHAR(129) , BODY_PART VARCHAR(129) , EMP_DEPARTMENT VARCHAR(25) , OCCUPATION VARCHAR(25) , DATE_OF_BIRTH VARCHAR(8) , DATE_OF_HIRE VARCHAR(8) , DATE_OF_DEATH VARCHAR(8) , OSHA_RECORDABLE VARCHAR(1) , EMPLOYEE_SEX VARCHAR(25) , WEEKLY_WAGE_RATE DECIMAL(20, 2) , HOURLY_WAGE_RATE DECIMAL(20, 2) , WEEKLY_HOURS VARCHAR(11) , NCCI_CLASS_CODE VARCHAR(25) , ACCIDENT_STATE VARCHAR(25) , MARITAL_STATUS VARCHAR(25) , DEPENDENT_LNAME VARCHAR(255) , DEPENDENT_FNAME VARCHAR(255) , DEPENDENT_BIRTH_DT VARCHAR(8) , LICENSE_NUMBER VARCHAR(20) , LICENSE_EXPIR_DATE VARCHAR(8) , LICENSE_TYPE VARCHAR(25) , LICENSE_RESTRICT VARCHAR(25) , RETURN_WORK_DATE VARCHAR(8) , ACTIVE_FLAG VARCHAR(1) , EMPLOYER_SIC_CODE VARCHAR(25) , EMPLOYER_PAYROLL_CLASS_CODE VARCHAR(25) , VEHICLE_ID VARCHAR(20) , VEHICLE_YEAR VARCHAR(4) , VEHICLE_MAKE VARCHAR(20) , EMPLOYEE_ID VARCHAR(20) , VEHICLE_MODEL VARCHAR(50) , FILE_NUMBER VARCHAR(32) , DATE_LAST_WORKED VARCHAR(8) , CLAIMANT_MIDDLENAME VARCHAR(255) , ACCIDENT_DESC VARCHAR(25) , ACCIDENT_PREVENTABLE VARCHAR(1) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) , USER_FIELD_Z VARCHAR(255) , PLAN_NAME VARCHAR(20) , CLASS_NAME VARCHAR(20) , DISABIL_FROM_DATE VARCHAR(8) , DISABIL_TO_DATE VARCHAR(8) , BENEFITS_START VARCHAR(8) , BENEFITS_THROUGH VARCHAR(8) , DIS_TYPE VARCHAR(25) , BEN_CALC_PAY_START VARCHAR(8) , BEN_CALC_PAY_TO VARCHAR(8) , FEDERAL_TAX_FLAG VARCHAR(1) , SOCIAL_SEC_TAX_FLAG VARCHAR(1) , MEDICARE_TAX_FLAG VARCHAR(1) , STATE_TAX_FLAG VARCHAR(1) , STD_DISABIL_TYPE VARCHAR(25) , MONTHLY_RATE DECIMAL(20, 2) , ELIG_DIS_BEN_FLAG VARCHAR(1) , DIS_OPTION_CODE VARCHAR(25) , PENSION_AMT DECIMAL(20, 2) , SS_AMT DECIMAL(20, 2) , OTHER_AMT DECIMAL(20, 2) , RESERVE_E_OPENING VARCHAR(20) , RESERVE_E_CURRENT DECIMAL(20, 2) , RESERVE_E_DATE VARCHAR(8) , PAID_E_TOTAL VARCHAR(20) , COLLECTION_E_TOTAL VARCHAR(20) , CLAIMANT_TYPE VARCHAR(25) , OSHA_ACC_DESC VARCHAR(16) , DATE_WORKED_LAST VARCHAR(8) , DATE_RETURNED VARCHAR(8) , STATE_DURATION VARCHAR(4) , DATE_FIRST_RESTRICT VARCHAR(8) , DATE_LAST_RESTRICT VARCHAR(8) , PERCENT_DISABLED VARCHAR(4) , SETTLEMENT_METHOD VARCHAR(25) , MGND_CARE_ORG_TYPE VARCHAR(25) , DISPUTED_CASE_FLAG VARCHAR(1) , NCCI_LOSS_TYPE_LOSS_CODE VARCHAR(25) , NCCI_LOSS_TYPE_RECOV_CODE VARCHAR(25) , TREATMENT_CODE VARCHAR(25) , CLAIMANT_STATUS VARCHAR(25) , NAME_TYPE VARCHAR(25) , BENEFICIARY_CODE VARCHAR(25) , INFO_REQ_DATE VARCHAR(8) , PROOF_OF_LOSS_DATE VARCHAR(8) , CLAIM_CAUSE_CODE VARCHAR(25) , DEF_BIRTH_DT VARCHAR(8) , POLICY_LOB VARCHAR(25) , CURR_CODE VARCHAR(25) , CLAIM_TYPE_DATE_CHANGED VARCHAR(8) , REVIEW_STATUS_CODE VARCHAR(25) , REVIEW_STATUS_DATE_CHANGED VARCHAR(8) , REVIEW_REASON VARCHAR(2000) , CLAIM_TYPE_REASON VARCHAR(2000) )
 SET ("abap_file_format" = 'no', "adaptable" = 'yes', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '1', "column_width10" = '255', "column_width100" = '20', "column_width101" = '4', "column_width102" = '20', "column_width103" = '20', "column_width104" = '50', "column_width105" = '32', "column_width106" = '8', "column_width107" = '255', "column_width108" = '25', "column_width109" = '1', "column_width11" = '255', "column_width110" = '32000', "column_width111" = '255', "column_width112" = '255', "column_width113" = '255', "column_width114" = '255', "column_width115" = '255', "column_width116" = '255', "column_width117" = '255', "column_width118" = '255', "column_width119" = '255', "column_width12" = '255', "column_width120" = '255', "column_width121" = '255', "column_width122" = '255', "column_width123" = '255', "column_width124" = '255', "column_width125" = '255', "column_width126" = '255', "column_width127" = '255', "column_width128" = '255', "column_width129" = '255', "column_width13" = '255', "column_width130" = '255', "column_width131" = '255', "column_width132" = '255', "column_width133" = '255', "column_width134" = '255', "column_width135" = '255', "column_width136" = '20', "column_width137" = '20', "column_width138" = '8', "column_width139" = '8', "column_width14" = '6', "column_width140" = '8', "column_width141" = '8', "column_width142" = '25', "column_width143" = '8', "column_width144" = '8', "column_width145" = '1', "column_width146" = '1', "column_width147" = '1', "column_width148" = '1', "column_width149" = '25', "column_width15" = '8', "column_width150" = '11', "column_width151" = '1', "column_width152" = '25', "column_width153" = '11', "column_width154" = '11', "column_width155" = '11', "column_width156" = '20', "column_width157" = '20', "column_width158" = '8', "column_width159" = '20', "column_width16" = '8', "column_width160" = '20', "column_width161" = '25', "column_width162" = '16', "column_width163" = '8', "column_width164" = '8', "column_width165" = '4', "column_width166" = '8', "column_width167" = '8', "column_width168" = '4', "column_width169" = '25', "column_width17" = '8', "column_width170" = '25', "column_width171" = '1', "column_width172" = '25', "column_width173" = '25', "column_width174" = '25', "column_width175" = '25', "column_width176" = '25', "column_width177" = '25', "column_width178" = '8', "column_width179" = '8', "column_width18" = '14', "column_width180" = '25', "column_width181" = '8', "column_width182" = '25', "column_width183" = '25', "column_width184" = '8', "column_width185" = '25', "column_width186" = '8', "column_width187" = '2000', "column_width188" = '2000', "column_width19" = '8', "column_width2" = '25', "column_width20" = '25', "column_width21" = '20', "column_width22" = '20', "column_width23" = '8', "column_width24" = '20', "column_width25" = '20', "column_width26" = '20', "column_width27" = '20', "column_width28" = '8', "column_width29" = '20', "column_width3" = '4', "column_width30" = '20', "column_width31" = '20', "column_width32" = '20', "column_width33" = '8', "column_width34" = '20', "column_width35" = '20', "column_width36" = '20', "column_width37" = '20', "column_width38" = '8', "column_width39" = '20', "column_width4" = '25', "column_width40" = '20', "column_width41" = '25', "column_width42" = '255', "column_width43" = '255', "column_width44" = '20', "column_width45" = '201', "column_width46" = '50', "column_width47" = '25', "column_width48" = '10', "column_width49" = '25', "column_width5" = '25', "column_width50" = '8', "column_width51" = '30', "column_width52" = '32000', "column_width53" = '255', "column_width54" = '255', "column_width55" = '100', "column_width56" = '50', "column_width57" = '25', "column_width58" = '10', "column_width59" = '30', "column_width6" = '25', "column_width60" = '32000', "column_width61" = '25', "column_width62" = '32000', "column_width63" = '25', "column_width64" = '129', "column_width65" = '129', "column_width66" = '40', "column_width67" = '8', "column_width68" = '8', "column_width69" = '8', "column_width7" = '25', "column_width70" = '22', "column_width71" = '25', "column_width72" = '32000', "column_width73" = '25', "column_width74" = '129', "column_width75" = '129', "column_width76" = '25', "column_width77" = '25', "column_width78" = '8', "column_width79" = '8', "column_width8" = '25', "column_width80" = '8', "column_width81" = '1', "column_width82" = '25', "column_width83" = '11', "column_width84" = '11', "column_width85" = '11', "column_width86" = '25', "column_width87" = '25', "column_width88" = '25', "column_width89" = '255', "column_width9" = '20', "column_width90" = '255', "column_width91" = '8', "column_width92" = '20', "column_width93" = '8', "column_width94" = '25', "column_width95" = '25', "column_width96" = '8', "column_width97" = '1', "column_width98" = '25', "column_width99" = '25', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gClaims_ImportFile_Name', "file_type" = 'delimited_file', "fl_file_name" = '$gClaims_ImportFile_Name', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'DDS_CLAIM_UPTO707', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'no', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "text_delimiter" = '"', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Apr 26 11:44:21 2016', "InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '78', "ui_display_name" = 'DDS_ENH_NOTES_csv', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_ENH_NOTES_csv::'26c5a346-2617-451c-ac6e-adabf0730448'(ID VARCHAR(25) , CLAIM_OR_EVENT VARCHAR(1) , NOTE_TYPE VARCHAR(25) , USER_TYPE VARCHAR(25) , NOTE_MEMO VARCHAR(32000) , ENTERED_BY VARCHAR(50) , DATE_ENTERED VARCHAR(12) , DATE_CREATED VARCHAR(12) , TIME_CREATED VARCHAR(12) , ENTERED_BY_NAME VARCHAR(50) , CLAIMANT_LASTNAME VARCHAR(255) , CLAIMANT_FIRSTNAME VARCHAR(255) , CLAIMANT_SSN VARCHAR(20) , ABBREVIATION VARCHAR(25) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '25', "column_width10" = '50', "column_width11" = '255', "column_width12" = '255', "column_width13" = '20', "column_width14" = '25', "column_width2" = '1', "column_width3" = '25', "column_width4" = '25', "column_width5" = '32000', "column_width6" = '50', "column_width7" = '12', "column_width8" = '12', "column_width9" = '12', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gEnhNotes_ImportFile_Name', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "table_weight" = '0', "text_delimiter" = '"', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '18', "ui_display_name" = 'DDS_ENH_NOTES_csv_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_ENH_NOTES_csv_S3::'b9ed5978-469f-417f-9ca6-f0acf9f3688c'(ID VARCHAR(25) , CLAIM_OR_EVENT VARCHAR(1) , NOTE_TYPE VARCHAR(25) , USER_TYPE VARCHAR(25) , NOTE_MEMO VARCHAR(32000) , ENTERED_BY VARCHAR(50) , DATE_ENTERED VARCHAR(12) , DATE_CREATED VARCHAR(12) , TIME_CREATED VARCHAR(12) , ENTERED_BY_NAME VARCHAR(50) , CLAIMANT_LASTNAME VARCHAR(255) , CLAIMANT_FIRSTNAME VARCHAR(255) , CLAIMANT_SSN VARCHAR(20) , ABBREVIATION VARCHAR(25) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '25', "column_width10" = '50', "column_width11" = '255', "column_width12" = '255', "column_width13" = '20', "column_width14" = '25', "column_width2" = '1', "column_width3" = '25', "column_width4" = '25', "column_width5" = '32000', "column_width6" = '50', "column_width7" = '12', "column_width8" = '12', "column_width9" = '12', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gEnhNotes_ImportFile_Name', "file_type" = 'delimited_file', "fl_file_name" = '$gEnhNotes_ImportFile_Name', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "text_delimiter" = '"', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 19:06:25 2017', "InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '48', "ui_display_name" = 'DDS_ErrorLog_Entry', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_ErrorLog_Entry::'4d7ad0ed-c370-4a3d-8e23-3d6472c440d7'(ERROR_KEY_COLUMN VARCHAR(50) , ERROR_DESC VARCHAR(32000) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = '\\t', "column_width" = '1', "column_width1" = '50', "column_width2" = '32000', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no', "write_row_header" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 19:10:26 2017', "InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '48', "ui_display_name" = 'DDS_ErrorLog_Entry_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_ErrorLog_Entry_S3::'b6f86714-acd8-4486-8579-36853e0e552b'(ERROR_KEY_COLUMN VARCHAR(50) , ERROR_DESC VARCHAR(32000) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = '\\t', "column_width" = '1', "column_width1" = '50', "column_width2" = '32000', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_type" = 'delimited_file', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no', "write_row_header" = 'no');
 AlGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '32', "ui_display_name" = 'Copy_1_DA2_ErrorLog_Info', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_ErrorLog_Info::'739c0591-2e7c-4c18-8e6b-a28a81926de1'(Message VARCHAR(1000) )
 SET ("abap_file_format" = 'no', "adaptable" = 'yes', "application_type" = '', "cache" = 'yes', "column_delimiter" = ' ', "column_width" = '1', "column_width1" = '1000', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 18:37:29 2017', "InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '32', "ui_display_name" = 'DDS_ErrorLog_Info_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_ErrorLog_Info_S3::'412111bd-856f-4d23-88ea-1e9708231d64'(Message VARCHAR(1000) )
 SET ("abap_file_format" = 'no', "adaptable" = 'yes', "application_type" = '', "cache" = 'yes', "column_delimiter" = ' ', "column_width" = '1', "column_width1" = '1000', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_type" = 'delimited_file', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '86', "ui_display_name" = 'Copy_1_Events_csv', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_Events_csv::'7490f724-159a-4a83-95f7-383db5a3368a'(EVENT_NUMBER VARCHAR(25) , EVENT_TYPE_CODE VARCHAR(25) , EVENT_STATUS_CODE VARCHAR(25) , EVENT_IND_CODE VARCHAR(25) , EVENT_DESCRIPTION VARCHAR(32000) , BRIEF_DESCRIPTION VARCHAR(250) , DEPARTMENT VARCHAR(25) , DEPT_INVOLVED VARCHAR(25) , ADDR1 VARCHAR(100) , ADDR2 VARCHAR(100) , CITY VARCHAR(50) , STATE VARCHAR(4) , ZIP_CODE VARCHAR(10) , COUNTRY VARCHAR(20)  SET( "Content_Type" = 'COUNTRY') , COUNTY_OF_INJURY VARCHAR(50) , LOCATION_AREA_DESC VARCHAR(32000) , PRIMARY_LOC_CODE VARCHAR(25) , LOCATION_TYPE_CODE VARCHAR(25) , ON_PREMISE_FLAG VARCHAR(1) , NO_OF_INJURIES INT , NO_OF_FATALITIES INT , CAUSE_CODE VARCHAR(25) , DATE_OF_EVENT VARCHAR(8) , TIME_OF_EVENT VARCHAR(6) , DATE_REPORTED VARCHAR(8) , TIME_REPORTED VARCHAR(6) , REPORTED_TAX_ID VARCHAR(30) , REPORTED_LAST_NAME VARCHAR(255) , REPORTED_FIRST_NAME VARCHAR(255) , REPORTED_ADDR1 VARCHAR(100) , REPORTED_ADDR2 VARCHAR(100) , REPORTED_CITY VARCHAR(50) , REPORTED_STATE VARCHAR(4) , REPORTED_ZIP_CODE VARCHAR(10) , REPORTED_PHONE VARCHAR(30) , COMMENTS VARCHAR(32000) , ACTIVITY_WHEN_INJ VARCHAR(255) , HOW_ACC_OCCURRED VARCHAR(255) , OBJ_SUBST_THAT_INJ VARCHAR(255) , RECORDABLE_FLAG VARCHAR(1) , SAFEG_NOTUSED_FLAG VARCHAR(1) , SAFEGUARD_FLAG VARCHAR(1) , NO_RULES_FLAG VARCHAR(1) , DATE_PHYS_ADVISED VARCHAR(8) , TIME_PHYS_ADVISED VARCHAR(6) , ACTION VARCHAR(129) , OUTCOME VARCHAR(129) , DATE_TO_FOLLOW_UP VARCHAR(8) , TREATMENT_GIVEN VARCHAR(1) , RELEASE_SIGNED VARCHAR(1) , DEPT_HEAD_ADVISED VARCHAR(1) , PHYS_NOTES VARCHAR(32000) , DATE_CARRIER_NOTIF VARCHAR(8) , PI_SUFFIX VARCHAR(4) , PI_TAX_ID VARCHAR(30) , PI_LAST_NAME VARCHAR(255) , PI_FIRST_NAME VARCHAR(255) , PI_ADDR1 VARCHAR(100) , PI_ADDR2 VARCHAR(100) , PI_CITY VARCHAR(50) , PI_STATE VARCHAR(4) , PI_ZIP_CODE VARCHAR(10) , PI_PHONE VARCHAR(30) , PI_TYPE_CODE VARCHAR(50) , MARITAL_STAT_CODE VARCHAR(1) , SEX_CODE VARCHAR(8) , BIRTH_DATE VARCHAR(8) , DATE_OF_DEATH VARCHAR(8) , ILLNESS_CODE VARCHAR(25) , INJURY_CODE VARCHAR(25) , BODY_PART VARCHAR(125) , DIAGNOSIS VARCHAR(125) , TREATMENT VARCHAR(125) , PHYSICIAN_LAST_NAME VARCHAR(255) , PHYSICIAN_FIRST_NAME VARCHAR(255) , PHYSICIAN_PHONE1 VARCHAR(90) , HOSPITAL_NAME VARCHAR(150) , HOSPITAL_PHONE VARCHAR(90) , DRIVERS_LIC_NO VARCHAR(20) , DRIVERSLICTYPECODE VARCHAR(25) , DATE_DRIVERSLICEXP VARCHAR(8) , DRIVLIC_RSTRCT_CODE VARCHAR(25) , DRIVLIC_STATE VARCHAR(4) , COUNTY_OF_RESIDNC VARCHAR(50) , NCCI_CLASS_CODE VARCHAR(25) , EST_LEN_DISABILITY INT , INSURABLE_FLAG VARCHAR(1) , LAST_VERIFIED_DATE VARCHAR(8) , PATIENT_ACCT_NO VARCHAR(20) , MEDICAL_RCD_NO VARCHAR(12) , INS_PLAN_GROUP_NO VARCHAR(16) , DATE_OF_ADMISSION VARCHAR(8) , DATE_OF_DISCHARGE VARCHAR(8) , ADM_TYPE_CODE VARCHAR(25) , ADM_SOURCE_CODE VARCHAR(25) , ADMISSION_REASON VARCHAR(32000) , ACUITY_LEVEL_CODE VARCHAR(25) , PATIENT_STAT_CODE VARCHAR(25) , PATIENT_COND_CODE VARCHAR(25) , DISCHARGE_DSP_CODE VARCHAR(25) , EXP_LENGTH_OF_STAY INT , EXPECTED_COST DECIMAL(20, 2) , QI_SIGNIF_CODE VARCHAR(25) , EPISODE_OF_CARE_ID VARCHAR(8) , PATIENT_TYPE_CODE VARCHAR(25) , WEIGHT INT , EMERGENCY_CONTACT VARCHAR(20) , EMERGENCY_CONT_NO VARCHAR(20) , PATIENT_ROOM_NO VARCHAR(14) , FACILITY_UNIT_CODE VARCHAR(25) , FACILITY_DEPT VARCHAR(25) , HCO_ID_NO VARCHAR(20) , HCO_SITE_ID_NO VARCHAR(20) , WHY_AT_FACILITY VARCHAR(32000) , DISABILITY_CODE VARCHAR(25) , EMPLOYEE_NUMBER VARCHAR(20) , POSITION_CODE VARCHAR(25) , DEPT_ASSIGNED VARCHAR(25) , SUPER_TAX_ID VARCHAR(30) , SUPER_LAST_NAME VARCHAR(255) , SUPER_FIRST_NAME VARCHAR(255) , SUPER_ADDR1 VARCHAR(100) , SUPER_ADDR2 VARCHAR(100) , SUPER_CITY VARCHAR(50) , SUPER_STATE VARCHAR(4) , SUPER_ZIP_CODE VARCHAR(10) , SUPER_PHONE1 VARCHAR(30) , FULL_TIME_FLAG VARCHAR(1) , PAY_TYPE_CODE VARCHAR(25) , HOURLY_RATE DECIMAL(20, 2) , WEEKLY_HOURS DECIMAL(20, 2) , WEEKLY_RATE DECIMAL(20, 2) , PAY_AMOUNT DECIMAL(20, 2) , ACTIVE_FLAG VARCHAR(1) , DATE_HIRED VARCHAR(8) , DATE_LAST_WORKED VARCHAR(134) , DATE_RETURNED VARCHAR(134) , LOST_WORK_FLAG VARCHAR(1) , LEN_OF_SVC_DAYS INT , EXEMPT_STATUS_FLAG VARCHAR(1) , NO_OF_EXEMPTIONS INT , WORK_SUN_FLAG VARCHAR(1) , WORK_MON_FLAG VARCHAR(1) , WORK_TUE_FLAG VARCHAR(1) , WORK_WED_FLAG VARCHAR(1) , WORK_THU_FLAG VARCHAR(1) , WORK_FRI_FLAG VARCHAR(1) , WORK_SAT_FLAG VARCHAR(1) , WORKDAY_START_TIME VARCHAR(6) , WORK_PERMIT_DATE VARCHAR(8) , WORK_PERMIT_NUMBER VARCHAR(50) , REGULAR_JOB_FLAG VARCHAR(1) , HIRED_IN_STATE_FLAG VARCHAR(1) , NUM_OF_VIOLATION INT , DESC_BY_WITNESS VARCHAR(32000) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) , COND_PRIOR_CODE VARCHAR(25) , RAIL_POSITION_CODE VARCHAR(25) , RESTRAINT_CODE VARCHAR(25) , BED_POSITION_CODE VARCHAR(25) , CALL_LIGHT_CODE VARCHAR(25) , REPORTED_COUNTRY VARCHAR(24) , REPORTED_PHONE2 VARCHAR(30) , REPORTED_FAX VARCHAR(30) , PI_MIDDLE_NAME VARCHAR(255) , PRIVACY_CASE_FLAG VARCHAR(1) , SHARPS_OBJECT VARCHAR(25) , SHARPS_BRAND_MAKE VARCHAR(1) , SAFEG_PROVIDED VARCHAR(1) , RULES_NOT_FOLLOWED VARCHAR(1) , OSHA_ESTAB_EID VARCHAR(25) , NAME_TYPE VARCHAR(25) , BENEFICIARY_CODE VARCHAR(25) , REPORTED_BIRTH_DT VARCHAR(8) )
 SET ("abap_file_format" = 'no', "adaptable" = 'yes', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '25', "column_width10" = '100', "column_width100" = '25', "column_width101" = '4', "column_width102" = '11', "column_width103" = '25', "column_width104" = '8', "column_width105" = '25', "column_width106" = '4', "column_width107" = '20', "column_width108" = '20', "column_width109" = '14', "column_width11" = '50', "column_width110" = '25', "column_width111" = '25', "column_width112" = '20', "column_width113" = '20', "column_width114" = '32000', "column_width115" = '25', "column_width116" = '20', "column_width117" = '25', "column_width118" = '25', "column_width119" = '30', "column_width12" = '4', "column_width120" = '255', "column_width121" = '255', "column_width122" = '100', "column_width123" = '100', "column_width124" = '50', "column_width125" = '4', "column_width126" = '10', "column_width127" = '30', "column_width128" = '1', "column_width129" = '25', "column_width13" = '10', "column_width130" = '11', "column_width131" = '4', "column_width132" = '11', "column_width133" = '11', "column_width134" = '1', "column_width135" = '8', "column_width136" = '134', "column_width137" = '134', "column_width138" = '1', "column_width139" = '8', "column_width14" = '20', "column_width140" = '1', "column_width141" = '4', "column_width142" = '1', "column_width143" = '1', "column_width144" = '1', "column_width145" = '1', "column_width146" = '1', "column_width147" = '1', "column_width148" = '1', "column_width149" = '6', "column_width15" = '50', "column_width150" = '8', "column_width151" = '50', "column_width152" = '1', "column_width153" = '1', "column_width154" = '4', "column_width155" = '32000', "column_width156" = '32000', "column_width157" = '255', "column_width158" = '255', "column_width159" = '255', "column_width16" = '32000', "column_width160" = '255', "column_width161" = '255', "column_width162" = '255', "column_width163" = '255', "column_width164" = '255', "column_width165" = '255', "column_width166" = '255', "column_width167" = '255', "column_width168" = '255', "column_width169" = '255', "column_width17" = '25', "column_width170" = '255', "column_width171" = '255', "column_width172" = '255', "column_width173" = '255', "column_width174" = '255', "column_width175" = '255', "column_width176" = '255', "column_width177" = '255', "column_width178" = '255', "column_width179" = '255', "column_width18" = '25', "column_width180" = '255', "column_width181" = '25', "column_width182" = '25', "column_width183" = '25', "column_width184" = '25', "column_width185" = '25', "column_width186" = '24', "column_width187" = '30', "column_width188" = '30', "column_width189" = '255', "column_width19" = '1', "column_width190" = '1', "column_width191" = '25', "column_width192" = '1', "column_width193" = '1', "column_width194" = '1', "column_width195" = '25', "column_width196" = '25', "column_width197" = '25', "column_width198" = '8', "column_width2" = '25', "column_width20" = '8', "column_width21" = '8', "column_width22" = '25', "column_width23" = '8', "column_width24" = '6', "column_width25" = '8', "column_width26" = '6', "column_width27" = '30', "column_width28" = '255', "column_width29" = '255', "column_width3" = '25', "column_width30" = '100', "column_width31" = '100', "column_width32" = '50', "column_width33" = '4', "column_width34" = '10', "column_width35" = '30', "column_width36" = '32000', "column_width37" = '255', "column_width38" = '255', "column_width39" = '255', "column_width4" = '25', "column_width40" = '1', "column_width41" = '1', "column_width42" = '1', "column_width43" = '1', "column_width44" = '8', "column_width45" = '6', "column_width46" = '129', "column_width47" = '129', "column_width48" = '8', "column_width49" = '1', "column_width5" = '32000', "column_width50" = '1', "column_width51" = '1', "column_width52" = '32000', "column_width53" = '8', "column_width54" = '4', "column_width55" = '30', "column_width56" = '255', "column_width57" = '255', "column_width58" = '100', "column_width59" = '100', "column_width6" = '250', "column_width60" = '50', "column_width61" = '4', "column_width62" = '10', "column_width63" = '30', "column_width64" = '50', "column_width65" = '1', "column_width66" = '8', "column_width67" = '8', "column_width68" = '8', "column_width69" = '25', "column_width7" = '25', "column_width70" = '25', "column_width71" = '125', "column_width72" = '125', "column_width73" = '125', "column_width74" = '255', "column_width75" = '255', "column_width76" = '90', "column_width77" = '150', "column_width78" = '90', "column_width79" = '20', "column_width8" = '25', "column_width80" = '25', "column_width81" = '8', "column_width82" = '25', "column_width83" = '4', "column_width84" = '50', "column_width85" = '25', "column_width86" = '4', "column_width87" = '1', "column_width88" = '8', "column_width89" = '20', "column_width9" = '100', "column_width90" = '12', "column_width91" = '16', "column_width92" = '8', "column_width93" = '8', "column_width94" = '25', "column_width95" = '25', "column_width96" = '32000', "column_width97" = '25', "column_width98" = '25', "column_width99" = '25', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gEvents_ImportFile_Name', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'Events_csv', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "skip_row_header" = 'no', "table_weight" = '0', "text_delimiter" = '"', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 18:59:49 2017', "InputSchema_WidthProp" = '22', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '64', "ui_display_name" = 'DDS_Events_csv_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_Events_csv_S3::'7a27d45c-4989-4eb9-a65e-ddf0fde756d8'(EVENT_NUMBER VARCHAR(25) , EVENT_TYPE_CODE VARCHAR(25) , EVENT_STATUS_CODE VARCHAR(25) , EVENT_IND_CODE VARCHAR(25) , EVENT_DESCRIPTION VARCHAR(32000) , BRIEF_DESCRIPTION VARCHAR(250) , DEPARTMENT VARCHAR(25) , DEPT_INVOLVED VARCHAR(25) , ADDR1 VARCHAR(100) , ADDR2 VARCHAR(100) , CITY VARCHAR(50) , STATE VARCHAR(4) , ZIP_CODE VARCHAR(10) , COUNTRY VARCHAR(20)  SET( "Content_Type" = 'COUNTRY') , COUNTY_OF_INJURY VARCHAR(50) , LOCATION_AREA_DESC VARCHAR(32000) , PRIMARY_LOC_CODE VARCHAR(25) , LOCATION_TYPE_CODE VARCHAR(25) , ON_PREMISE_FLAG VARCHAR(1) , NO_OF_INJURIES INT , NO_OF_FATALITIES INT , CAUSE_CODE VARCHAR(25) , DATE_OF_EVENT VARCHAR(8) , TIME_OF_EVENT VARCHAR(6) , DATE_REPORTED VARCHAR(8) , TIME_REPORTED VARCHAR(6) , REPORTED_TAX_ID VARCHAR(30) , REPORTED_LAST_NAME VARCHAR(255) , REPORTED_FIRST_NAME VARCHAR(255) , REPORTED_ADDR1 VARCHAR(100) , REPORTED_ADDR2 VARCHAR(100) , REPORTED_CITY VARCHAR(50) , REPORTED_STATE VARCHAR(4) , REPORTED_ZIP_CODE VARCHAR(10) , REPORTED_PHONE VARCHAR(30) , COMMENTS VARCHAR(32000) , ACTIVITY_WHEN_INJ VARCHAR(255) , HOW_ACC_OCCURRED VARCHAR(255) , OBJ_SUBST_THAT_INJ VARCHAR(255) , RECORDABLE_FLAG VARCHAR(1) , SAFEG_NOTUSED_FLAG VARCHAR(1) , SAFEGUARD_FLAG VARCHAR(1) , NO_RULES_FLAG VARCHAR(1) , DATE_PHYS_ADVISED VARCHAR(8) , TIME_PHYS_ADVISED VARCHAR(6) , ACTION VARCHAR(129) , OUTCOME VARCHAR(129) , DATE_TO_FOLLOW_UP VARCHAR(8) , TREATMENT_GIVEN VARCHAR(1) , RELEASE_SIGNED VARCHAR(1) , DEPT_HEAD_ADVISED VARCHAR(1) , PHYS_NOTES VARCHAR(32000) , DATE_CARRIER_NOTIF VARCHAR(8) , PI_SUFFIX VARCHAR(4) , PI_TAX_ID VARCHAR(30) , PI_LAST_NAME VARCHAR(255) , PI_FIRST_NAME VARCHAR(255) , PI_ADDR1 VARCHAR(100) , PI_ADDR2 VARCHAR(100) , PI_CITY VARCHAR(50) , PI_STATE VARCHAR(4) , PI_ZIP_CODE VARCHAR(10) , PI_PHONE VARCHAR(30) , PI_TYPE_CODE VARCHAR(50) , MARITAL_STAT_CODE VARCHAR(1) , SEX_CODE VARCHAR(8) , BIRTH_DATE VARCHAR(8) , DATE_OF_DEATH VARCHAR(8) , ILLNESS_CODE VARCHAR(25) , INJURY_CODE VARCHAR(25) , BODY_PART VARCHAR(125) , DIAGNOSIS VARCHAR(125) , TREATMENT VARCHAR(125) , PHYSICIAN_LAST_NAME VARCHAR(255) , PHYSICIAN_FIRST_NAME VARCHAR(255) , PHYSICIAN_PHONE1 VARCHAR(90) , HOSPITAL_NAME VARCHAR(150) , HOSPITAL_PHONE VARCHAR(90) , DRIVERS_LIC_NO VARCHAR(20) , DRIVERSLICTYPECODE VARCHAR(25) , DATE_DRIVERSLICEXP VARCHAR(8) , DRIVLIC_RSTRCT_CODE VARCHAR(25) , DRIVLIC_STATE VARCHAR(4) , COUNTY_OF_RESIDNC VARCHAR(50) , NCCI_CLASS_CODE VARCHAR(25) , EST_LEN_DISABILITY INT , INSURABLE_FLAG VARCHAR(1) , LAST_VERIFIED_DATE VARCHAR(8) , PATIENT_ACCT_NO VARCHAR(20) , MEDICAL_RCD_NO VARCHAR(12) , INS_PLAN_GROUP_NO VARCHAR(16) , DATE_OF_ADMISSION VARCHAR(8) , DATE_OF_DISCHARGE VARCHAR(8) , ADM_TYPE_CODE VARCHAR(25) , ADM_SOURCE_CODE VARCHAR(25) , ADMISSION_REASON VARCHAR(32000) , ACUITY_LEVEL_CODE VARCHAR(25) , PATIENT_STAT_CODE VARCHAR(25) , PATIENT_COND_CODE VARCHAR(25) , DISCHARGE_DSP_CODE VARCHAR(25) , EXP_LENGTH_OF_STAY INT , EXPECTED_COST DECIMAL(20, 2) , QI_SIGNIF_CODE VARCHAR(25) , EPISODE_OF_CARE_ID VARCHAR(8) , PATIENT_TYPE_CODE VARCHAR(25) , WEIGHT INT , EMERGENCY_CONTACT VARCHAR(20) , EMERGENCY_CONT_NO VARCHAR(20) , PATIENT_ROOM_NO VARCHAR(14) , FACILITY_UNIT_CODE VARCHAR(25) , FACILITY_DEPT VARCHAR(25) , HCO_ID_NO VARCHAR(20) , HCO_SITE_ID_NO VARCHAR(20) , WHY_AT_FACILITY VARCHAR(32000) , DISABILITY_CODE VARCHAR(25) , EMPLOYEE_NUMBER VARCHAR(20) , POSITION_CODE VARCHAR(25) , DEPT_ASSIGNED VARCHAR(25) , SUPER_TAX_ID VARCHAR(30) , SUPER_LAST_NAME VARCHAR(255) , SUPER_FIRST_NAME VARCHAR(255) , SUPER_ADDR1 VARCHAR(100) , SUPER_ADDR2 VARCHAR(100) , SUPER_CITY VARCHAR(50) , SUPER_STATE VARCHAR(4) , SUPER_ZIP_CODE VARCHAR(10) , SUPER_PHONE1 VARCHAR(30) , FULL_TIME_FLAG VARCHAR(1) , PAY_TYPE_CODE VARCHAR(25) , HOURLY_RATE DECIMAL(20, 2) , WEEKLY_HOURS DECIMAL(20, 2) , WEEKLY_RATE DECIMAL(20, 2) , PAY_AMOUNT DECIMAL(20, 2) , ACTIVE_FLAG VARCHAR(1) , DATE_HIRED VARCHAR(8) , DATE_LAST_WORKED VARCHAR(134) , DATE_RETURNED VARCHAR(134) , LOST_WORK_FLAG VARCHAR(1) , LEN_OF_SVC_DAYS INT , EXEMPT_STATUS_FLAG VARCHAR(1) , NO_OF_EXEMPTIONS INT , WORK_SUN_FLAG VARCHAR(1) , WORK_MON_FLAG VARCHAR(1) , WORK_TUE_FLAG VARCHAR(1) , WORK_WED_FLAG VARCHAR(1) , WORK_THU_FLAG VARCHAR(1) , WORK_FRI_FLAG VARCHAR(1) , WORK_SAT_FLAG VARCHAR(1) , WORKDAY_START_TIME VARCHAR(6) , WORK_PERMIT_DATE VARCHAR(8) , WORK_PERMIT_NUMBER VARCHAR(50) , REGULAR_JOB_FLAG VARCHAR(1) , HIRED_IN_STATE_FLAG VARCHAR(1) , NUM_OF_VIOLATION INT , DESC_BY_WITNESS VARCHAR(32000) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) , COND_PRIOR_CODE VARCHAR(25) , RAIL_POSITION_CODE VARCHAR(25) , RESTRAINT_CODE VARCHAR(25) , BED_POSITION_CODE VARCHAR(25) , CALL_LIGHT_CODE VARCHAR(25) , REPORTED_COUNTRY VARCHAR(24) , REPORTED_PHONE2 VARCHAR(30) , REPORTED_FAX VARCHAR(30) , PI_MIDDLE_NAME VARCHAR(255) , PRIVACY_CASE_FLAG VARCHAR(1) , SHARPS_OBJECT VARCHAR(25) , SHARPS_BRAND_MAKE VARCHAR(1) , SAFEG_PROVIDED VARCHAR(1) , RULES_NOT_FOLLOWED VARCHAR(1) , OSHA_ESTAB_EID VARCHAR(25) , NAME_TYPE VARCHAR(25) , BENEFICIARY_CODE VARCHAR(25) , REPORTED_BIRTH_DT VARCHAR(8) )
 SET ("abap_file_format" = 'no', "adaptable" = 'yes', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '25', "column_width10" = '100', "column_width100" = '25', "column_width101" = '4', "column_width102" = '11', "column_width103" = '25', "column_width104" = '8', "column_width105" = '25', "column_width106" = '4', "column_width107" = '20', "column_width108" = '20', "column_width109" = '14', "column_width11" = '50', "column_width110" = '25', "column_width111" = '25', "column_width112" = '20', "column_width113" = '20', "column_width114" = '32000', "column_width115" = '25', "column_width116" = '20', "column_width117" = '25', "column_width118" = '25', "column_width119" = '30', "column_width12" = '4', "column_width120" = '255', "column_width121" = '255', "column_width122" = '100', "column_width123" = '100', "column_width124" = '50', "column_width125" = '4', "column_width126" = '10', "column_width127" = '30', "column_width128" = '1', "column_width129" = '25', "column_width13" = '10', "column_width130" = '11', "column_width131" = '4', "column_width132" = '11', "column_width133" = '11', "column_width134" = '1', "column_width135" = '8', "column_width136" = '134', "column_width137" = '134', "column_width138" = '1', "column_width139" = '8', "column_width14" = '20', "column_width140" = '1', "column_width141" = '4', "column_width142" = '1', "column_width143" = '1', "column_width144" = '1', "column_width145" = '1', "column_width146" = '1', "column_width147" = '1', "column_width148" = '1', "column_width149" = '6', "column_width15" = '50', "column_width150" = '8', "column_width151" = '50', "column_width152" = '1', "column_width153" = '1', "column_width154" = '4', "column_width155" = '32000', "column_width156" = '32000', "column_width157" = '255', "column_width158" = '255', "column_width159" = '255', "column_width16" = '32000', "column_width160" = '255', "column_width161" = '255', "column_width162" = '255', "column_width163" = '255', "column_width164" = '255', "column_width165" = '255', "column_width166" = '255', "column_width167" = '255', "column_width168" = '255', "column_width169" = '255', "column_width17" = '25', "column_width170" = '255', "column_width171" = '255', "column_width172" = '255', "column_width173" = '255', "column_width174" = '255', "column_width175" = '255', "column_width176" = '255', "column_width177" = '255', "column_width178" = '255', "column_width179" = '255', "column_width18" = '25', "column_width180" = '255', "column_width181" = '25', "column_width182" = '25', "column_width183" = '25', "column_width184" = '25', "column_width185" = '25', "column_width186" = '24', "column_width187" = '30', "column_width188" = '30', "column_width189" = '255', "column_width19" = '1', "column_width190" = '1', "column_width191" = '25', "column_width192" = '1', "column_width193" = '1', "column_width194" = '1', "column_width195" = '25', "column_width196" = '25', "column_width197" = '25', "column_width198" = '8', "column_width2" = '25', "column_width20" = '8', "column_width21" = '8', "column_width22" = '25', "column_width23" = '8', "column_width24" = '6', "column_width25" = '8', "column_width26" = '6', "column_width27" = '30', "column_width28" = '255', "column_width29" = '255', "column_width3" = '25', "column_width30" = '100', "column_width31" = '100', "column_width32" = '50', "column_width33" = '4', "column_width34" = '10', "column_width35" = '30', "column_width36" = '32000', "column_width37" = '255', "column_width38" = '255', "column_width39" = '255', "column_width4" = '25', "column_width40" = '1', "column_width41" = '1', "column_width42" = '1', "column_width43" = '1', "column_width44" = '8', "column_width45" = '6', "column_width46" = '129', "column_width47" = '129', "column_width48" = '8', "column_width49" = '1', "column_width5" = '32000', "column_width50" = '1', "column_width51" = '1', "column_width52" = '32000', "column_width53" = '8', "column_width54" = '4', "column_width55" = '30', "column_width56" = '255', "column_width57" = '255', "column_width58" = '100', "column_width59" = '100', "column_width6" = '250', "column_width60" = '50', "column_width61" = '4', "column_width62" = '10', "column_width63" = '30', "column_width64" = '50', "column_width65" = '1', "column_width66" = '8', "column_width67" = '8', "column_width68" = '8', "column_width69" = '25', "column_width7" = '25', "column_width70" = '25', "column_width71" = '125', "column_width72" = '125', "column_width73" = '125', "column_width74" = '255', "column_width75" = '255', "column_width76" = '90', "column_width77" = '150', "column_width78" = '90', "column_width79" = '20', "column_width8" = '25', "column_width80" = '25', "column_width81" = '8', "column_width82" = '25', "column_width83" = '4', "column_width84" = '50', "column_width85" = '25', "column_width86" = '4', "column_width87" = '1', "column_width88" = '8', "column_width89" = '20', "column_width9" = '100', "column_width90" = '12', "column_width91" = '16', "column_width92" = '8', "column_width93" = '8', "column_width94" = '25', "column_width95" = '25', "column_width96" = '32000', "column_width97" = '25', "column_width98" = '25', "column_width99" = '25', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gEvents_ImportFile_Name', "file_type" = 'delimited_file', "fl_file_name" = '$gEvents_ImportFile_Name', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'Events_csv', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "skip_row_header" = 'no', "table_weight" = '0', "text_delimiter" = '"', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Mar 22 18:53:38 2018', "InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '56', "ui_display_name" = 'DDS_MedWatch_csv', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_MedWatch_csv::'5f55d064-48f5-4afc-950d-69fcb79e2b38'(EVENT_NUMBER VARCHAR(25) , UNIT_CODE VARCHAR(25) , DATE_RPTD_FDA VARCHAR(8) , DATE_RPTD_MFG VARCHAR(8) , RPTD_BY_LAST_NAME VARCHAR(255) , RPTD_BY_FIRST_NAME VARCHAR(255) , RPTD_BY_ADDR1 VARCHAR(100) , RPTD_BY_ADDR2 VARCHAR(100) , RPTD_BY_CITY VARCHAR(50) , RPTD_BY_STATE VARCHAR(4) , RPTD_BY_ZIP_CODE VARCHAR(10) , RPTD_BY_TAX_ID VARCHAR(20) , RPTD_BY_PRO_FLAG VARCHAR(1) , RPTD_BY_POS_CODE VARCHAR(25) , RELEVANT_HISTORY VARCHAR(32000) , LAST_REPORT_DATE VARCHAR(8) , REPORT_YEAR INT , REPORT_SERIAL_NO INT , ADVERSE_EVENT_FLAG VARCHAR(1) , PRODUCT_PROB_FLAG VARCHAR(1) , LIFE_THREAT_FLAG VARCHAR(1) , HOSPITALIZ_FLAG VARCHAR(1) , DISABILITY_FLAG VARCHAR(1) , CONGENITAL_FLAG VARCHAR(1) , REQD_INTERV_FLAG VARCHAR(1) , FOLLOW_UP_COUNT INT , RPT_MANDATORY INT , MED_TYPE VARCHAR(25) , MED_NAME VARCHAR(25) , DOSE VARCHAR(25) , FREQUENCY VARCHAR(25) , ROUTE VARCHAR(25) , THERAPY_FROM_DATE VARCHAR(8) , THERAPY_TO_DATE VARCHAR(8) , DURATION INT , LOT_NUMBER VARCHAR(15) , NDC_NUMBER INT , EXPIRATION_DATE VARCHAR(8) , EVENT_ABATED VARCHAR(1) , EVENT_REAPPEARED VARCHAR(1) , DIAGNOSIS_TEST VARCHAR(25) , BRAND_NAME VARCHAR(25) , EQUIP_TYPE_CODE VARCHAR(25) , MANUF_NAME VARCHAR(255) , MANUF_ADDR1 VARCHAR(100) , MANUF_ADDR2 VARCHAR(100) , MANUF_CITY VARCHAR(50) , MANUF_STATE VARCHAR(4) , MANUF_ZIP_CODE VARCHAR(10) , MODEL_NUMBER VARCHAR(15) , CATALOG_NUMBER VARCHAR(15) , SERIAL_NUMBER VARCHAR(15) , OTHER_NUMBER VARCHAR(15) , DEVICE_OPER_CODE VARCHAR(25) , IMPLANT_DATE VARCHAR(8) , EXPLANT_DATE VARCHAR(8) , AGE_OF_DEVICE VARCHAR(12) , DEV_AVAIL_FOR_EVAL VARCHAR(1) , DEVICE_RETURN_DATE VARCHAR(8) , EQ_LOT_NUMBER VARCHAR(15) , EQ_EXPIRATION_DATE VARCHAR(8) , TEST_LAB_TEST VARCHAR(32000) , TEST_RESULT VARCHAR(32000) , TEST_DATE VARCHAR(48) , CONCOM_PRODUCT_ID VARCHAR(32000) , CONCOM_FROM_DATE VARCHAR(55) , CONCOM_TO_DATE VARCHAR(55) , CONCOM_PRODUCT VARCHAR(250) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) , NAME_TYPE VARCHAR(255) , RPTD_BY_BIRTH_DT VARCHAR(8) , MANUF_BIRTH_DT VARCHAR(8) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '25', "column_width10" = '4', "column_width11" = '10', "column_width12" = '20', "column_width13" = '1', "column_width14" = '25', "column_width15" = '32000', "column_width16" = '8', "column_width17" = '1', "column_width18" = '1', "column_width19" = '1', "column_width2" = '25', "column_width20" = '1', "column_width21" = '1', "column_width22" = '1', "column_width23" = '1', "column_width24" = '1', "column_width25" = '1', "column_width26" = '1', "column_width27" = '1', "column_width28" = '25', "column_width29" = '25', "column_width3" = '8', "column_width30" = '25', "column_width31" = '25', "column_width32" = '25', "column_width33" = '8', "column_width34" = '8', "column_width35" = '1', "column_width36" = '15', "column_width37" = '1', "column_width38" = '8', "column_width39" = '1', "column_width4" = '8', "column_width40" = '1', "column_width41" = '25', "column_width42" = '25', "column_width43" = '25', "column_width44" = '255', "column_width45" = '100', "column_width46" = '100', "column_width47" = '50', "column_width48" = '4', "column_width49" = '10', "column_width5" = '255', "column_width50" = '15', "column_width51" = '15', "column_width52" = '15', "column_width53" = '15', "column_width54" = '25', "column_width55" = '8', "column_width56" = '8', "column_width57" = '12', "column_width58" = '1', "column_width59" = '8', "column_width6" = '255', "column_width60" = '15', "column_width61" = '8', "column_width62" = '32000', "column_width63" = '32000', "column_width64" = '48', "column_width65" = '32000', "column_width66" = '55', "column_width67" = '55', "column_width68" = '250', "column_width69" = '32000', "column_width7" = '100', "column_width70" = '255', "column_width71" = '255', "column_width72" = '255', "column_width73" = '255', "column_width74" = '255', "column_width75" = '255', "column_width76" = '255', "column_width77" = '255', "column_width78" = '255', "column_width79" = '255', "column_width8" = '100', "column_width80" = '255', "column_width81" = '255', "column_width82" = '255', "column_width83" = '255', "column_width84" = '255', "column_width85" = '255', "column_width86" = '255', "column_width87" = '255', "column_width88" = '255', "column_width89" = '255', "column_width9" = '50', "column_width90" = '255', "column_width91" = '255', "column_width92" = '255', "column_width93" = '255', "column_width94" = '255', "column_width95" = '8', "column_width96" = '8', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gMedWatch_ImportFile_Name', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 19:00:51 2017', "InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '82', "ui_display_name" = 'DDS_MedWatch_csv_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_MedWatch_csv_S3::'ccc93fe1-0403-42bc-bdc0-e6dd1b5bf807'(EVENT_NUMBER VARCHAR(25) , UNIT_CODE VARCHAR(25) , DATE_RPTD_FDA VARCHAR(8) , DATE_RPTD_MFG VARCHAR(8) , RPTD_BY_LAST_NAME VARCHAR(255) , RPTD_BY_FIRST_NAME VARCHAR(255) , RPTD_BY_ADDR1 VARCHAR(100) , RPTD_BY_ADDR2 VARCHAR(100) , RPTD_BY_CITY VARCHAR(50) , RPTD_BY_STATE VARCHAR(4) , RPTD_BY_ZIP_CODE VARCHAR(10) , RPTD_BY_TAX_ID VARCHAR(20) , RPTD_BY_PRO_FLAG VARCHAR(1) , RPTD_BY_POS_CODE VARCHAR(25) , RELEVANT_HISTORY VARCHAR(32000) , LAST_REPORT_DATE VARCHAR(8) , REPORT_YEAR INT , REPORT_SERIAL_NO INT , ADVERSE_EVENT_FLAG VARCHAR(1) , PRODUCT_PROB_FLAG VARCHAR(1) , LIFE_THREAT_FLAG VARCHAR(1) , HOSPITALIZ_FLAG VARCHAR(1) , DISABILITY_FLAG VARCHAR(1) , CONGENITAL_FLAG VARCHAR(1) , REQD_INTERV_FLAG VARCHAR(1) , FOLLOW_UP_COUNT INT , RPT_MANDATORY INT , MED_TYPE VARCHAR(25) , MED_NAME VARCHAR(25) , DOSE VARCHAR(25) , FREQUENCY VARCHAR(25) , ROUTE VARCHAR(25) , THERAPY_FROM_DATE VARCHAR(8) , THERAPY_TO_DATE VARCHAR(8) , DURATION INT , LOT_NUMBER VARCHAR(15) , NDC_NUMBER INT , EXPIRATION_DATE VARCHAR(8) , EVENT_ABATED VARCHAR(1) , EVENT_REAPPEARED VARCHAR(1) , DIAGNOSIS_TEST VARCHAR(25) , BRAND_NAME VARCHAR(25) , EQUIP_TYPE_CODE VARCHAR(25) , MANUF_NAME VARCHAR(255) , MANUF_ADDR1 VARCHAR(100) , MANUF_ADDR2 VARCHAR(100) , MANUF_CITY VARCHAR(50) , MANUF_STATE VARCHAR(4) , MANUF_ZIP_CODE VARCHAR(10) , MODEL_NUMBER VARCHAR(15) , CATALOG_NUMBER VARCHAR(15) , SERIAL_NUMBER VARCHAR(15) , OTHER_NUMBER VARCHAR(15) , DEVICE_OPER_CODE VARCHAR(25) , IMPLANT_DATE VARCHAR(8) , EXPLANT_DATE VARCHAR(8) , AGE_OF_DEVICE VARCHAR(12) , DEV_AVAIL_FOR_EVAL VARCHAR(1) , DEVICE_RETURN_DATE VARCHAR(8) , EQ_LOT_NUMBER VARCHAR(15) , EQ_EXPIRATION_DATE VARCHAR(8) , TEST_LAB_TEST VARCHAR(32000) , TEST_RESULT VARCHAR(32000) , TEST_DATE VARCHAR(48) , CONCOM_PRODUCT_ID VARCHAR(32000) , CONCOM_FROM_DATE VARCHAR(55) , CONCOM_TO_DATE VARCHAR(55) , CONCOM_PRODUCT VARCHAR(250) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) , NAME_TYPE VARCHAR(255) , RPTD_BY_BIRTH_DT VARCHAR(8) , MANUF_BIRTH_DT VARCHAR(8) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '25', "column_width10" = '4', "column_width11" = '10', "column_width12" = '20', "column_width13" = '1', "column_width14" = '25', "column_width15" = '32000', "column_width16" = '8', "column_width17" = '1', "column_width18" = '1', "column_width19" = '1', "column_width2" = '25', "column_width20" = '1', "column_width21" = '1', "column_width22" = '1', "column_width23" = '1', "column_width24" = '1', "column_width25" = '1', "column_width26" = '1', "column_width27" = '1', "column_width28" = '25', "column_width29" = '25', "column_width3" = '8', "column_width30" = '25', "column_width31" = '25', "column_width32" = '25', "column_width33" = '8', "column_width34" = '8', "column_width35" = '1', "column_width36" = '15', "column_width37" = '1', "column_width38" = '8', "column_width39" = '1', "column_width4" = '8', "column_width40" = '1', "column_width41" = '25', "column_width42" = '25', "column_width43" = '25', "column_width44" = '255', "column_width45" = '100', "column_width46" = '100', "column_width47" = '50', "column_width48" = '4', "column_width49" = '10', "column_width5" = '255', "column_width50" = '15', "column_width51" = '15', "column_width52" = '15', "column_width53" = '15', "column_width54" = '25', "column_width55" = '8', "column_width56" = '8', "column_width57" = '12', "column_width58" = '1', "column_width59" = '8', "column_width6" = '255', "column_width60" = '15', "column_width61" = '8', "column_width62" = '32000', "column_width63" = '32000', "column_width64" = '48', "column_width65" = '32000', "column_width66" = '55', "column_width67" = '55', "column_width68" = '250', "column_width69" = '32000', "column_width7" = '100', "column_width70" = '255', "column_width71" = '255', "column_width72" = '255', "column_width73" = '255', "column_width74" = '255', "column_width75" = '255', "column_width76" = '255', "column_width77" = '255', "column_width78" = '255', "column_width79" = '255', "column_width8" = '100', "column_width80" = '255', "column_width81" = '255', "column_width82" = '255', "column_width83" = '255', "column_width84" = '255', "column_width85" = '255', "column_width86" = '255', "column_width87" = '255', "column_width88" = '255', "column_width89" = '255', "column_width9" = '50', "column_width90" = '255', "column_width91" = '255', "column_width92" = '255', "column_width93" = '255', "column_width94" = '255', "column_width95" = '8', "column_width96" = '8', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gMedWatch_ImportFile_Name', "file_type" = 'delimited_file', "fl_file_name" = '$gMedWatch_ImportFile_Name', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Nov 21 18:04:28 2016', "ActaValue_3" = 'Tue Apr 26 11:38:16 2016', "InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '83', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_PAYMENTS_csv::'966acbed-e6a9-43ea-a872-1d49bd57cdc4'(RECORD_TYPE VARCHAR(1) , TRANSACTION_TYPE VARCHAR(1) , CLAIM_ID VARCHAR(25) , ACTIVITY_DATE VARCHAR(8) , TYPE_FLAG VARCHAR(1) , AMOUNT NUMERIC(16, 2) , MEMO VARCHAR(255) , CARRIER VARCHAR(16) , ADJUSTER VARCHAR(16) , CHECK_NO VARCHAR(25) , CHECK_SUFFIX NUMERIC(10, 0) , CHECK_STATUS VARCHAR(1) , TYPE_CODE VARCHAR(25) , PAYEE_TYPE VARCHAR(25) , PAYEE_TAX_ID_NO VARCHAR(20) , PAYEE_LASTNAME VARCHAR(255) , PAYEE_FIRSTNAME VARCHAR(255) , PAYEE_ADDRESS VARCHAR(100) , PAYEE_CITY VARCHAR(50) , PAYEE_STATE VARCHAR(4) , PAYEE_ZIP VARCHAR(10) , TRANSACTION_DATE VARCHAR(8) , REPORT_1099_FLAG VARCHAR(1) , SERVICE_FROM_DATE VARCHAR(8) , SERVICE_TO_DATE VARCHAR(8) , CLEARED_FLAG VARCHAR(1) , DATE_CLEARED VARCHAR(8) , BANK_ACCOUNT_NUM VARCHAR(20) , BANK_SUB_ACCNT_NUM VARCHAR(20) , PAYEE_ADDRESS2 VARCHAR(100) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) , USER_FIELD_Z VARCHAR(255) , INVOICE_NUMBER VARCHAR(25) , CLAIMANT_SUFFIX NUMERIC(4, 0) , RES_STATUS_CODE VARCHAR(25) , UNIT_TYPE VARCHAR(10) , POLICY_NAME VARCHAR(20) , UNIT_NUMBER VARCHAR(10) , COVERAGE_CODE VARCHAR(25) , LOSS_CODE VARCHAR(25) , RESERVE_SUB_TYPE VARCHAR(25) , DISABILITY_CATEGORY VARCHAR(25) , VOID_CODE_REASON VARCHAR(255) , MODULE_NO VARCHAR(10) , PREFIX VARCHAR(25) , SUFFIX_COMMON VARCHAR(25) , SUFFIX_LEGAL VARCHAR(50) , MEMO_PHRASE VARCHAR(50) , CLASS_CODE VARCHAR(25) , CVG_SEQUENCE_NO VARCHAR(8) , TRANS_SEQ_NO VARCHAR(8) , CVG_DESC VARCHAR(100) , SUBLINE_DESC VARCHAR(100) , CLASS_DESC VARCHAR(100) , STAT_UNIT_NUMBER VARCHAR(10) , POLICY_CVG_SEQNO VARCHAR(10) , RESERVE_TYPE VARCHAR(25) , NAME_TYPE VARCHAR(25) , POLICY_NUMBER VARCHAR(40) , POLICY_SYMBOL VARCHAR(20) , MASTER_COMPANY VARCHAR(10) , LOCATION_COMPANY VARCHAR(10) , DSTRBN_TYPE_CODE VARCHAR(25) , PAYEE_DOB VARCHAR(8) , REGION VARCHAR(4) , BEN_REVIEW_DATE VARCHAR(8) , EOB_REMARKS_CODE VARCHAR(25) , EOB_PRINTED_DATE VARCHAR(8) , EOB_PRINTED_BY_USER VARCHAR(50) , UNIT_FIRST_NAME VARCHAR(255) , UNIT_LAST_NAME VARCHAR(255) , UNIT_TAX_ID VARCHAR(20) , UNIT_DOB VARCHAR(8) , CLMNT_LAST_NAME VARCHAR(255) , CLMNT_FIRST_NAME VARCHAR(255) , CLMNT_TAX_ID VARCHAR(20) , EMP_NUM VARCHAR(20) , UNIT_ID VARCHAR(20) , PMT_CURR_CODE VARCHAR(25) , PMT_TO_BASE_CURR_RATE NUMERIC(16, 2) , PMT_TO_POL_CURR_RATE NUMERIC(16, 2) , PMT_TO_CLM_CURR_RATE NUMERIC(16, 2) , CLM_TO_BASE_CURR_RATE NUMERIC(16, 2) , CLM_TO_POL_CURR_RATE NUMERIC(16, 2) )
 SET ("abap_file_format" = 'no', "adaptable" = 'yes', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '1', "column_width10" = '25', "column_width100" = '20', "column_width101" = '20', "column_width102" = '20', "column_width103" = '25', "column_width104" = '1', "column_width105" = '1', "column_width106" = '1', "column_width107" = '1', "column_width108" = '1', "column_width11" = '1', "column_width12" = '1', "column_width13" = '25', "column_width14" = '25', "column_width15" = '20', "column_width16" = '255', "column_width17" = '255', "column_width18" = '100', "column_width19" = '50', "column_width2" = '1', "column_width20" = '4', "column_width21" = '10', "column_width22" = '8', "column_width23" = '1', "column_width24" = '8', "column_width25" = '8', "column_width26" = '1', "column_width27" = '8', "column_width28" = '20', "column_width29" = '20', "column_width3" = '25', "column_width30" = '100', "column_width31" = '32000', "column_width32" = '255', "column_width33" = '255', "column_width34" = '255', "column_width35" = '255', "column_width36" = '255', "column_width37" = '255', "column_width38" = '255', "column_width39" = '255', "column_width4" = '8', "column_width40" = '255', "column_width41" = '255', "column_width42" = '255', "column_width43" = '255', "column_width44" = '255', "column_width45" = '255', "column_width46" = '255', "column_width47" = '255', "column_width48" = '255', "column_width49" = '255', "column_width5" = '1', "column_width50" = '255', "column_width51" = '255', "column_width52" = '255', "column_width53" = '255', "column_width54" = '255', "column_width55" = '255', "column_width56" = '255', "column_width57" = '25', "column_width58" = '0', "column_width59" = '25', "column_width6" = '1', "column_width60" = '10', "column_width61" = '20', "column_width62" = '10', "column_width63" = '25', "column_width64" = '25', "column_width65" = '25', "column_width66" = '25', "column_width67" = '255', "column_width68" = '10', "column_width69" = '25', "column_width7" = '255', "column_width70" = '25', "column_width71" = '50', "column_width72" = '50', "column_width73" = '25', "column_width74" = '8', "column_width75" = '8', "column_width76" = '100', "column_width77" = '100', "column_width78" = '100', "column_width79" = '10', "column_width8" = '16', "column_width80" = '10', "column_width81" = '25', "column_width82" = '25', "column_width83" = '40', "column_width84" = '20', "column_width85" = '10', "column_width86" = '10', "column_width87" = '25', "column_width88" = '8', "column_width89" = '4', "column_width9" = '16', "column_width90" = '8', "column_width91" = '25', "column_width92" = '8', "column_width93" = '50', "column_width94" = '255', "column_width95" = '255', "column_width96" = '20', "column_width97" = '8', "column_width98" = '255', "column_width99" = '255', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gPayments_ImportFile_Name', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'no', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "table_weight" = '0', "text_delimiter" = '"', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:54 2017', "InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '69', "ui_display_name" = 'DDS_PAYMENTS_csv_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_PAYMENTS_csv_S3::'7619e5f0-6e71-4fec-a5a6-984c2f2092ed'(RECORD_TYPE VARCHAR(1) , TRANSACTION_TYPE VARCHAR(1) , CLAIM_ID VARCHAR(25) , ACTIVITY_DATE VARCHAR(8) , TYPE_FLAG VARCHAR(1) , AMOUNT NUMERIC(16, 2) , MEMO VARCHAR(255) , CARRIER VARCHAR(16) , ADJUSTER VARCHAR(16) , CHECK_NO VARCHAR(25) , CHECK_SUFFIX NUMERIC(10, 0) , CHECK_STATUS VARCHAR(1) , TYPE_CODE VARCHAR(25) , PAYEE_TYPE VARCHAR(25) , PAYEE_TAX_ID_NO VARCHAR(20) , PAYEE_LASTNAME VARCHAR(255) , PAYEE_FIRSTNAME VARCHAR(255) , PAYEE_ADDRESS VARCHAR(100) , PAYEE_CITY VARCHAR(50) , PAYEE_STATE VARCHAR(4) , PAYEE_ZIP VARCHAR(10) , TRANSACTION_DATE VARCHAR(8) , REPORT_1099_FLAG VARCHAR(1) , SERVICE_FROM_DATE VARCHAR(8) , SERVICE_TO_DATE VARCHAR(8) , CLEARED_FLAG VARCHAR(1) , DATE_CLEARED VARCHAR(8) , BANK_ACCOUNT_NUM VARCHAR(20) , BANK_SUB_ACCNT_NUM VARCHAR(20) , PAYEE_ADDRESS2 VARCHAR(100) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) , USER_FIELD_Z VARCHAR(255) , INVOICE_NUMBER VARCHAR(25) , CLAIMANT_SUFFIX NUMERIC(4, 0) , RES_STATUS_CODE VARCHAR(25) , UNIT_TYPE VARCHAR(10) , POLICY_NAME VARCHAR(20) , UNIT_NUMBER VARCHAR(10) , COVERAGE_CODE VARCHAR(25) , LOSS_CODE VARCHAR(25) , RESERVE_SUB_TYPE VARCHAR(25) , DISABILITY_CATEGORY VARCHAR(25) , VOID_CODE_REASON VARCHAR(255) , MODULE_NO VARCHAR(10) , PREFIX VARCHAR(25) , SUFFIX_COMMON VARCHAR(25) , SUFFIX_LEGAL VARCHAR(50) , MEMO_PHRASE VARCHAR(50) , CLASS_CODE VARCHAR(25) , CVG_SEQUENCE_NO VARCHAR(8) , TRANS_SEQ_NO VARCHAR(8) , CVG_DESC VARCHAR(100) , SUBLINE_DESC VARCHAR(100) , CLASS_DESC VARCHAR(100) , STAT_UNIT_NUMBER VARCHAR(10) , POLICY_CVG_SEQNO VARCHAR(10) , RESERVE_TYPE VARCHAR(25) , NAME_TYPE VARCHAR(25) , POLICY_NUMBER VARCHAR(40) , POLICY_SYMBOL VARCHAR(20) , MASTER_COMPANY VARCHAR(10) , LOCATION_COMPANY VARCHAR(10) , DSTRBN_TYPE_CODE VARCHAR(25) , PAYEE_DOB VARCHAR(8) , REGION VARCHAR(4) , BEN_REVIEW_DATE VARCHAR(8) , EOB_REMARKS_CODE VARCHAR(25) , EOB_PRINTED_DATE VARCHAR(8) , EOB_PRINTED_BY_USER VARCHAR(50) , UNIT_FIRST_NAME VARCHAR(255) , UNIT_LAST_NAME VARCHAR(255) , UNIT_TAX_ID VARCHAR(20) , UNIT_DOB VARCHAR(8) , CLMNT_LAST_NAME VARCHAR(255) , CLMNT_FIRST_NAME VARCHAR(255) , CLMNT_TAX_ID VARCHAR(20) , EMP_NUM VARCHAR(20) , UNIT_ID VARCHAR(20) , PMT_CURR_CODE VARCHAR(25) , PMT_TO_BASE_CURR_RATE NUMERIC(16, 2) , PMT_TO_POL_CURR_RATE NUMERIC(16, 2) , PMT_TO_CLM_CURR_RATE NUMERIC(16, 2) , CLM_TO_BASE_CURR_RATE NUMERIC(16, 2) , CLM_TO_POL_CURR_RATE NUMERIC(16, 2) )
 SET ("abap_file_format" = 'no', "adaptable" = 'yes', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '1', "column_width10" = '25', "column_width100" = '20', "column_width101" = '20', "column_width102" = '20', "column_width103" = '25', "column_width104" = '1', "column_width105" = '1', "column_width106" = '1', "column_width107" = '1', "column_width108" = '1', "column_width11" = '1', "column_width12" = '1', "column_width13" = '25', "column_width14" = '25', "column_width15" = '20', "column_width16" = '255', "column_width17" = '255', "column_width18" = '100', "column_width19" = '50', "column_width2" = '1', "column_width20" = '4', "column_width21" = '10', "column_width22" = '8', "column_width23" = '1', "column_width24" = '8', "column_width25" = '8', "column_width26" = '1', "column_width27" = '8', "column_width28" = '20', "column_width29" = '20', "column_width3" = '25', "column_width30" = '100', "column_width31" = '32000', "column_width32" = '255', "column_width33" = '255', "column_width34" = '255', "column_width35" = '255', "column_width36" = '255', "column_width37" = '255', "column_width38" = '255', "column_width39" = '255', "column_width4" = '8', "column_width40" = '255', "column_width41" = '255', "column_width42" = '255', "column_width43" = '255', "column_width44" = '255', "column_width45" = '255', "column_width46" = '255', "column_width47" = '255', "column_width48" = '255', "column_width49" = '255', "column_width5" = '1', "column_width50" = '255', "column_width51" = '255', "column_width52" = '255', "column_width53" = '255', "column_width54" = '255', "column_width55" = '255', "column_width56" = '255', "column_width57" = '25', "column_width58" = '0', "column_width59" = '25', "column_width6" = '1', "column_width60" = '10', "column_width61" = '20', "column_width62" = '10', "column_width63" = '25', "column_width64" = '25', "column_width65" = '25', "column_width66" = '25', "column_width67" = '255', "column_width68" = '10', "column_width69" = '25', "column_width7" = '255', "column_width70" = '25', "column_width71" = '50', "column_width72" = '50', "column_width73" = '25', "column_width74" = '8', "column_width75" = '8', "column_width76" = '100', "column_width77" = '100', "column_width78" = '100', "column_width79" = '10', "column_width8" = '16', "column_width80" = '10', "column_width81" = '25', "column_width82" = '25', "column_width83" = '40', "column_width84" = '20', "column_width85" = '10', "column_width86" = '10', "column_width87" = '25', "column_width88" = '8', "column_width89" = '4', "column_width9" = '16', "column_width90" = '8', "column_width91" = '25', "column_width92" = '8', "column_width93" = '50', "column_width94" = '255', "column_width95" = '255', "column_width96" = '20', "column_width97" = '8', "column_width98" = '255', "column_width99" = '255', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gPayments_ImportFile_Name', "file_type" = 'delimited_file', "fl_file_name" = '$gPayments_ImportFile_Name', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'no', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "text_delimiter" = '"', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '58', "ui_display_name" = 'Copy_1_PROCESS_LOG', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_PROCESS_LOG::'5aae597b-ec82-412f-8076-8da04fb35c5d'(PROCESS_DESC VARCHAR(500) )
 SET ("abap_file_format" = 'no', "application_type" = '', "blank_pad" = 'trailing', "blank_trim" = 'trailing', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '500', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gFileName', "file_type" = 'positional_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no', "write_row_header" = 'yes');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 19:05:54 2017', "InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '48', "ui_display_name" = 'DDS_PROCESS_LOG_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_PROCESS_LOG_S3::'3ad3aebe-56bd-4a86-9e39-ae91f0e9af08'(PROCESS_DESC VARCHAR(500) )
 SET ("abap_file_format" = 'no', "application_type" = '', "blank_pad" = 'trailing', "blank_trim" = 'trailing', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '500', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gFileName', "file_type" = 'positional_file', "fl_file_name" = '$gFileName', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no', "write_row_header" = 'yes');
 AlGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '34', "ui_display_name" = 'Copy_1_Short_Term_Disability_Class', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_Short_Term_Disability_Class::'e03f396d-8ec0-4f18-a820-0c0fc4c4214a'(CLASS_NAME VARCHAR(20) , CLASS_DESC VARCHAR(50) , PLAN_NUMBER VARCHAR(20) , ELIG_BENE_PRD INT , BENE_PRD_TYPE VARCHAR(25) , BENE_FROM_DT_TYPE VARCHAR(25) , DIS_WAIT_PRD INT , DIS_CLNDR_WRK_TYPE VARCHAR(25) , DIS_PRD_TYPE VARCHAR(25) , DIS_MAX_PRD INT , DIS_MAX_PRD_TYPE VARCHAR(25) , FROM_DIS_PRD_TYPE VARCHAR(25) , ALLOW_EXT VARCHAR(1) , EXTEND_PRD INT , EXTEND_PRD_TYPE VARCHAR(25) , MAX_TOT_DIS_PRD INT , MAX_TOT_PRD_TYPE VARCHAR(25) , ACTUAL_WORK_WEEK_FLAG VARCHAR(1) , DAY7_WORK_WEEK_FLAG VARCHAR(1) , DAY5_WORK_WEEK_FLAG VARCHAR(1) , OTHER_WORK_WEEK_FLAG VARCHAR(1) , OTHER_DAYS INT , BENE_PRCTG_FLAG VARCHAR(1) , BENE_PER_AMT DOUBLE , BENE_FLAT_AMT_FLAG VARCHAR(1) , BENE_FLAT_AMT DOUBLE , BENE_TD_FLAG VARCHAR(1) , BENE_BASED_TYPE VARCHAR(25) , WITHHOLD_FED_ITAX_FLAG VARCHAR(1) , WITHHOLD_FICA_FLAG VARCHAR(1) , WEEKLY_BENE_CAP DOUBLE , MAX_BEN_PER_CLAIM DOUBLE , MAX_BEN_PER_CAL_YR DOUBLE , WAGE_FOR_DIS_PRD DOUBLE , WAGE_FOR_CAL_YR DOUBLE , TAXABLE_PERCENT DOUBLE , WITHHOLD_MEDICARE_FLAG VARCHAR(1) , WITHHOLD_STATE_FLAG VARCHAR(1) , USE_VOUCHERS_FLAG VARCHAR(1) , ALT_WAIT_DIS_TYPE VARCHAR(207) , ALT_WAIT_DIS_PRD VARCHAR(39) , ALT_WAIT_DIS_CLNDR_WRK_TYPE VARCHAR(207) , ALT_WAIT_DIS_PRD_TYPE VARCHAR(207) , WAGES_FROM VARCHAR(175) , WAGES_TO VARCHAR(175) , WEEKLY_BENEFIT VARCHAR(175) , DAY30_WORK_MONTH_FLAG VARCHAR(1) , ACTUAL_MONTH_FLAG VARCHAR(1) , UPPER_AGE_LIMIT INT , LOWER_AGE_LIMIT INT , SUPP_PERCENT DOUBLE , SUPP_FLAT_AMT DOUBLE , SUPP_BANK_ACC_NAME VARCHAR(50) , SUPP_SUB_ACC_NAME VARCHAR(50) , SUPP_TR_TYPE_CODE VARCHAR(25) , SUPP_SEP_PAY_FLAG VARCHAR(1) , PENSION_AMT DOUBLE , SS_AMT DOUBLE , OTHER_AMT DOUBLE , PRORATE_OFF_FLAG VARCHAR(1) , FULLPAY_ONLY_FLAG VARCHAR(1) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '20', "column_width10" = '4', "column_width11" = '25', "column_width12" = '25', "column_width13" = '1', "column_width14" = '4', "column_width15" = '25', "column_width16" = '4', "column_width17" = '25', "column_width18" = '1', "column_width19" = '1', "column_width2" = '50', "column_width20" = '1', "column_width21" = '1', "column_width22" = '4', "column_width23" = '1', "column_width24" = '8', "column_width25" = '1', "column_width26" = '8', "column_width27" = '1', "column_width28" = '25', "column_width29" = '1', "column_width3" = '20', "column_width30" = '1', "column_width31" = '8', "column_width32" = '8', "column_width33" = '8', "column_width34" = '8', "column_width35" = '8', "column_width36" = '8', "column_width37" = '1', "column_width38" = '1', "column_width39" = '1', "column_width4" = '4', "column_width40" = '207', "column_width41" = '39', "column_width42" = '207', "column_width43" = '207', "column_width44" = '175', "column_width45" = '175', "column_width46" = '175', "column_width47" = '1', "column_width48" = '1', "column_width49" = '4', "column_width5" = '25', "column_width50" = '4', "column_width51" = '8', "column_width52" = '8', "column_width53" = '50', "column_width54" = '50', "column_width55" = '25', "column_width56" = '1', "column_width57" = '8', "column_width58" = '8', "column_width59" = '8', "column_width6" = '25', "column_width60" = '1', "column_width61" = '1', "column_width7" = '4', "column_width8" = '25', "column_width9" = '25', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gSTD_Class_ImportFile_Name', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '48', "ui_display_name" = 'DDS_Short_Term_Disability_Class_S3N', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_Short_Term_Disability_Class_S3N::'2d2301e1-049d-407b-83a2-c069b1dfd5fd'(CLASS_NAME VARCHAR(20) , CLASS_DESC VARCHAR(50) , PLAN_NUMBER VARCHAR(20) , ELIG_BENE_PRD INT , BENE_PRD_TYPE VARCHAR(25) , BENE_FROM_DT_TYPE VARCHAR(25) , DIS_WAIT_PRD INT , DIS_CLNDR_WRK_TYPE VARCHAR(25) , DIS_PRD_TYPE VARCHAR(25) , DIS_MAX_PRD INT , DIS_MAX_PRD_TYPE VARCHAR(25) , FROM_DIS_PRD_TYPE VARCHAR(25) , ALLOW_EXT VARCHAR(1) , EXTEND_PRD INT , EXTEND_PRD_TYPE VARCHAR(25) , MAX_TOT_DIS_PRD INT , MAX_TOT_PRD_TYPE VARCHAR(25) , ACTUAL_WORK_WEEK_FLAG VARCHAR(1) , DAY7_WORK_WEEK_FLAG VARCHAR(1) , DAY5_WORK_WEEK_FLAG VARCHAR(1) , OTHER_WORK_WEEK_FLAG VARCHAR(1) , OTHER_DAYS INT , BENE_PRCTG_FLAG VARCHAR(1) , BENE_PER_AMT DOUBLE , BENE_FLAT_AMT_FLAG VARCHAR(1) , BENE_FLAT_AMT DOUBLE , BENE_TD_FLAG VARCHAR(1) , BENE_BASED_TYPE VARCHAR(25) , WITHHOLD_FED_ITAX_FLAG VARCHAR(1) , WITHHOLD_FICA_FLAG VARCHAR(1) , WEEKLY_BENE_CAP DOUBLE , MAX_BEN_PER_CLAIM DOUBLE , MAX_BEN_PER_CAL_YR DOUBLE , WAGE_FOR_DIS_PRD DOUBLE , WAGE_FOR_CAL_YR DOUBLE , TAXABLE_PERCENT DOUBLE , WITHHOLD_MEDICARE_FLAG VARCHAR(1) , WITHHOLD_STATE_FLAG VARCHAR(1) , USE_VOUCHERS_FLAG VARCHAR(1) , ALT_WAIT_DIS_TYPE VARCHAR(207) , ALT_WAIT_DIS_PRD VARCHAR(39) , ALT_WAIT_DIS_CLNDR_WRK_TYPE VARCHAR(207) , ALT_WAIT_DIS_PRD_TYPE VARCHAR(207) , WAGES_FROM VARCHAR(175) , WAGES_TO VARCHAR(175) , WEEKLY_BENEFIT VARCHAR(175) , DAY30_WORK_MONTH_FLAG VARCHAR(1) , ACTUAL_MONTH_FLAG VARCHAR(1) , UPPER_AGE_LIMIT INT , LOWER_AGE_LIMIT INT , SUPP_PERCENT DOUBLE , SUPP_FLAT_AMT DOUBLE , SUPP_BANK_ACC_NAME VARCHAR(50) , SUPP_SUB_ACC_NAME VARCHAR(50) , SUPP_TR_TYPE_CODE VARCHAR(25) , SUPP_SEP_PAY_FLAG VARCHAR(1) , PENSION_AMT DOUBLE , SS_AMT DOUBLE , OTHER_AMT DOUBLE , PRORATE_OFF_FLAG VARCHAR(1) , FULLPAY_ONLY_FLAG VARCHAR(1) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '20', "column_width10" = '4', "column_width11" = '25', "column_width12" = '25', "column_width13" = '1', "column_width14" = '4', "column_width15" = '25', "column_width16" = '4', "column_width17" = '25', "column_width18" = '1', "column_width19" = '1', "column_width2" = '50', "column_width20" = '1', "column_width21" = '1', "column_width22" = '4', "column_width23" = '1', "column_width24" = '8', "column_width25" = '1', "column_width26" = '8', "column_width27" = '1', "column_width28" = '25', "column_width29" = '1', "column_width3" = '20', "column_width30" = '1', "column_width31" = '8', "column_width32" = '8', "column_width33" = '8', "column_width34" = '8', "column_width35" = '8', "column_width36" = '8', "column_width37" = '1', "column_width38" = '1', "column_width39" = '1', "column_width4" = '4', "column_width40" = '207', "column_width41" = '39', "column_width42" = '207', "column_width43" = '207', "column_width44" = '175', "column_width45" = '175', "column_width46" = '175', "column_width47" = '1', "column_width48" = '1', "column_width49" = '4', "column_width5" = '25', "column_width50" = '4', "column_width51" = '8', "column_width52" = '8', "column_width53" = '50', "column_width54" = '50', "column_width55" = '25', "column_width56" = '1', "column_width57" = '8', "column_width58" = '8', "column_width59" = '8', "column_width6" = '25', "column_width60" = '1', "column_width61" = '1', "column_width7" = '4', "column_width8" = '25', "column_width9" = '25', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gSTD_Class_ImportFile_Name', "file_type" = 'delimited_file', "fl_file_name" = '$gSTD_Class_ImportFile_Name', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '48', "ui_display_name" = 'Copy_1_Short_Term_Disability_plan', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_Short_Term_Disability_plan::'1105552a-6c43-490d-8fb2-1d5255b3e47f'(PLAN_NUMBER VARCHAR(20) , PLAN_NAME VARCHAR(20) , PLAN_DESCRIPTION VARCHAR(50) , PLAN_STATUS VARCHAR(25) , PREMIUM DOUBLE , BANK_ACCOUNT_NUM VARCHAR(20) , EFFECTIVE_DATE VARCHAR(8) , EXPIRATION_DATE VARCHAR(8) , ISSUE_DATE VARCHAR(8) , REVIEW_DATE VARCHAR(8) , RENEWAL_DATE VARCHAR(8) , CANCEL_DATE VARCHAR(8) , PREF_DAY_PAY_TYPE VARCHAR(25) , PREF_PAY_SCHEDULE_TYPE VARCHAR(25) , COMMENTS VARCHAR(255) , START_PAY_PERIOD VARCHAR(8) , PRINT_BEFORE_END_FLAG VARCHAR(1) , BANK_SUB_ACCNT_NUM VARCHAR(20) , INSURED_EID VARCHAR(207) , INSURED_HIER_LEVEL VARCHAR(15) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '20', "column_width10" = '8', "column_width11" = '8', "column_width12" = '8', "column_width13" = '25', "column_width14" = '25', "column_width15" = '255', "column_width16" = '8', "column_width17" = '1', "column_width18" = '20', "column_width19" = '207', "column_width2" = '20', "column_width20" = '15', "column_width21" = '32000', "column_width22" = '255', "column_width23" = '255', "column_width24" = '255', "column_width25" = '255', "column_width26" = '255', "column_width27" = '255', "column_width28" = '255', "column_width29" = '255', "column_width3" = '50', "column_width30" = '255', "column_width31" = '255', "column_width32" = '255', "column_width33" = '255', "column_width34" = '255', "column_width35" = '255', "column_width36" = '255', "column_width37" = '255', "column_width38" = '255', "column_width39" = '255', "column_width4" = '25', "column_width40" = '255', "column_width41" = '255', "column_width42" = '255', "column_width43" = '255', "column_width44" = '255', "column_width45" = '255', "column_width5" = '8', "column_width6" = '20', "column_width7" = '8', "column_width8" = '8', "column_width9" = '8', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gSTD_Plan_ImportFile_Name', "file_type" = 'delimited_file', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 18:49:49 2017', "InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '32', "ui_display_name" = 'DDS_Short_Term_Disability_plan_S3', "x" = '-1', "y" = '-1')
CREATE FILE DATASTORE DDS_Short_Term_Disability_plan_S3::'a79a4793-31b2-42cb-8ea4-88f63afdebb5'(PLAN_NUMBER VARCHAR(20) , PLAN_NAME VARCHAR(20) , PLAN_DESCRIPTION VARCHAR(50) , PLAN_STATUS VARCHAR(25) , PREMIUM DOUBLE , BANK_ACCOUNT_NUM VARCHAR(20) , EFFECTIVE_DATE VARCHAR(8) , EXPIRATION_DATE VARCHAR(8) , ISSUE_DATE VARCHAR(8) , REVIEW_DATE VARCHAR(8) , RENEWAL_DATE VARCHAR(8) , CANCEL_DATE VARCHAR(8) , PREF_DAY_PAY_TYPE VARCHAR(25) , PREF_PAY_SCHEDULE_TYPE VARCHAR(25) , COMMENTS VARCHAR(255) , START_PAY_PERIOD VARCHAR(8) , PRINT_BEFORE_END_FLAG VARCHAR(1) , BANK_SUB_ACCNT_NUM VARCHAR(20) , INSURED_EID VARCHAR(207) , INSURED_HIER_LEVEL VARCHAR(15) , USER_FIELD_A VARCHAR(32000) , USER_FIELD_B VARCHAR(255) , USER_FIELD_C VARCHAR(255) , USER_FIELD_D VARCHAR(255) , USER_FIELD_E VARCHAR(255) , USER_FIELD_F VARCHAR(255) , USER_FIELD_G VARCHAR(255) , USER_FIELD_H VARCHAR(255) , USER_FIELD_I VARCHAR(255) , USER_FIELD_J VARCHAR(255) , USER_FIELD_K VARCHAR(255) , USER_FIELD_L VARCHAR(255) , USER_FIELD_M VARCHAR(255) , USER_FIELD_N VARCHAR(255) , USER_FIELD_O VARCHAR(255) , USER_FIELD_P VARCHAR(255) , USER_FIELD_Q VARCHAR(255) , USER_FIELD_R VARCHAR(255) , USER_FIELD_S VARCHAR(255) , USER_FIELD_T VARCHAR(255) , USER_FIELD_U VARCHAR(255) , USER_FIELD_V VARCHAR(255) , USER_FIELD_W VARCHAR(255) , USER_FIELD_X VARCHAR(255) , USER_FIELD_Y VARCHAR(255) )
 SET ("abap_file_format" = 'no', "application_type" = '', "cache" = 'yes', "column_delimiter" = ',', "column_width" = '1', "column_width1" = '20', "column_width10" = '8', "column_width11" = '8', "column_width12" = '8', "column_width13" = '25', "column_width14" = '25', "column_width15" = '255', "column_width16" = '8', "column_width17" = '1', "column_width18" = '20', "column_width19" = '207', "column_width2" = '20', "column_width20" = '15', "column_width21" = '32000', "column_width22" = '255', "column_width23" = '255', "column_width24" = '255', "column_width25" = '255', "column_width26" = '255', "column_width27" = '255', "column_width28" = '255', "column_width29" = '255', "column_width3" = '50', "column_width30" = '255', "column_width31" = '255', "column_width32" = '255', "column_width33" = '255', "column_width34" = '255', "column_width35" = '255', "column_width36" = '255', "column_width37" = '255', "column_width38" = '255', "column_width39" = '255', "column_width4" = '25', "column_width40" = '255', "column_width41" = '255', "column_width42" = '255', "column_width43" = '255', "column_width44" = '255', "column_width45" = '255', "column_width5" = '8', "column_width6" = '20', "column_width7" = '8', "column_width8" = '8', "column_width9" = '8', "date_format" = 'yyyy.mm.dd', "datetime_format" = 'yyyy.mm.dd hh24:mi:ss', "ds_configuration_enabled" = 'no', "file_format" = 'ascii', "file_location" = 'local', "file_name" = '$gSTD_Plan_ImportFile_Name', "file_type" = 'delimited_file', "fl_file_name" = '$gSTD_Plan_ImportFile_Name', "fl_object_name" = 'AmazonS3', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_capture_string_truncation_errors" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "row_delimiter" = '\\n', "table_weight" = '0', "time_format" = 'hh24:mi:ss', "transfer_custom" = 'no', "use_root_dir" = 'no', "write_bom" = 'no');
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:54 2017', "ActaValue_3" = 'Mon Sep 25 19:07:03 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_ADJUSTER_WRITE_ERROR_LOG::'e4f5dc38-e351-4bbe-aa22-a43a993ec5d7'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '31', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '68', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_pay', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId AND DDS_ERROR_LOG.MODULE_NAME=\'DDS_ADJUSTER\'

', "x" = '773', "y" = '-647')
GUID::'46efa35c-081e-49c0-880d-3dbc9925e01d' CREATE VIEW Q_Format_Error_Log_pay( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = 'long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_DESC')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'DDS_ADJUSTER')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '231', "y" = '-584')
GUID::'2cd2d9de-623b-4e83-9f6c-15dcc1cbb3d9' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameAdjuster"(DDS_ErrorLog_Entry)', "x" = '1463', "y" = '-675')
GUID::'5a262b30-d8da-4970-a814-3488b1373adc' LOAD FILE DDS_ErrorLog_Entry."$gErrorLogFileNameAdjuster" INPUT(Q_Format_Error_Log_pay)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:54 2017', "ActaValue_3" = 'Mon Sep 25 19:13:22 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_ADJUSTER_WRITE_ERROR_LOG_S3::'4496cb78-7157-4e9e-9e16-66be1762775e'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '0', "y" = '0')
GUID::'d9a37316-aade-4c3c-8d31-5a73d264ac19' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '31', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '68', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_pay', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId AND DDS_ERROR_LOG.MODULE_NAME=\'DDS_ADJUSTER\'


', "x" = '542', "y" = '-63')
GUID::'1d461bff-aed4-4361-bba1-349073093b64' CREATE VIEW Q_Format_Error_Log_pay( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = 'long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)', "ui_pasting" = 'long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'DDS_ADJUSTER')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameAdjuster"(DDS_ErrorLog_Entry_S3)', "x" = '371', "y" = '-391')
GUID::'5579dad6-b45b-474c-b769-f72ad1347291' LOAD FILE DDS_ErrorLog_Entry_S3."$gErrorLogFileNameAdjuster" INPUT(Q_Format_Error_Log_pay)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameAdjuster', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:54 2017', "ActaValue_3" = 'Mon Sep 25 17:55:08 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_CLAIM_WRITE_ERROR_LOG::'6d4bf0d9-f4ae-418f-98ea-7be7ed255b09'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '32', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '52', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_claim', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId and DDS_ERROR_LOG.MODULE_NAME=\'CLAIM\'

', "x" = '763', "y" = '-819')
GUID::'aabb7958-bb48-45f8-b316-15a5958091d7' CREATE VIEW Q_Format_Error_Log_claim( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_DESC')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'CLAIM')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '303', "y" = '-647')
GUID::'9f8b019c-cd57-40fc-8351-55a40d027901' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameClaim"(DDS_ErrorLog_Entry)', "x" = '1125', "y" = '-1016')
GUID::'9c2f12ed-bb70-46f2-84f5-47117eaaa94a' LOAD FILE DDS_ErrorLog_Entry."$gErrorLogFileNameClaim" INPUT(Q_Format_Error_Log_claim)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:54 2017', "ActaValue_3" = 'Mon Sep 25 17:55:08 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_CLAIM_WRITE_ERROR_LOG_HEADER::'048d37ab-c00a-4287-b395-a1fcac9f8d4a'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '153', "y" = '-175')
GUID::'9ba4860a-3b73-4884-850a-3b2c252ca7de' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '412', "y" = '-222')
GUID::'41cde02d-8021-4536-ad67-7147cc8acd93' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '413', "y" = '-406')
GUID::'10c11b8d-cb87-4390-8f28-8d473a6b2a41' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '889', "y" = '-318')
GUID::'283269f8-60e9-475e-87b6-e95079e820e3' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1177', "y" = '-369')
GUID::'26b61da2-c617-43f1-ad28-28f8271a83a7' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gErrorLogFileNameClaim"(DDS_ErrorLog_Info)', "x" = '1259', "y" = '-866')
GUID::'a928da80-fc05-4ca5-b655-8394f8105db5' LOAD FILE DDS_ErrorLog_Info."$gErrorLogFileNameClaim" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "root_dir" = '$gFileDirectory', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:54 2017', "ActaValue_3" = 'Mon Sep 25 18:41:17 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_CLAIM_WRITE_ERROR_LOG_HEADER_S3::'28126bfa-8914-4275-b71d-4f9af49e88c7'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1024', "y" = '-194')
GUID::'0e9b9085-0ae8-469b-8854-e62f8b00e1f6' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE', "ui_pasting" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '736', "y" = '-143')
GUID::'950349d6-9bc2-4a16-8bcf-dd59afc409c4' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '260', "y" = '-231')
GUID::'796465f8-e15f-4ff1-979b-172cb93a118f' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'', "ui_pasting" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '259', "y" = '-47')
GUID::'ddfea915-5d06-44e0-84b8-a9baa84d486f' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'', "ui_pasting" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '0', "y" = '0')
GUID::'4f628b41-fd2e-4712-adcf-afb158fa4872' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameClaim"(DDS_ErrorLog_Info_S3)', "x" = '428', "y" = '-972')
GUID::'59cd4ea4-8135-4062-8928-145f5f003392' LOAD FILE DDS_ErrorLog_Info_S3."$gErrorLogFileNameClaim" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameClaim', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:55 2017', "ActaValue_3" = 'Mon Sep 25 19:13:22 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_CLAIM_WRITE_ERROR_LOG_S3::'cda7a21c-c0df-4738-8f1d-bd5d2125b68e'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '413', "y" = '-347')
GUID::'2570cc2f-133f-4102-ae42-b38d20706379' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '32', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '52', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_claim', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId and DDS_ERROR_LOG.MODULE_NAME=\'CLAIM\'



', "x" = '873', "y" = '-519')
GUID::'d4499b09-81bd-442f-9e32-b50808ba9950' CREATE VIEW Q_Format_Error_Log_claim( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'CLAIM')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameClaim"(DDS_ErrorLog_Entry_S3)', "x" = '1478', "y" = '-628')
GUID::'3961007f-a9ab-4635-9ed8-201787286ffe' LOAD FILE DDS_ErrorLog_Entry_S3."$gErrorLogFileNameClaim" INPUT(Q_Format_Error_Log_claim)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameClaim', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:55 2017', "ActaValue_3" = 'Mon Sep 25 17:55:08 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_CLASS_WRITE_ERROR_LOG::'99d01465-01be-4644-a107-34e7fede94bd'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '32', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '52', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_claim', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId and DDS_ERROR_LOG.MODULE_NAME=\'STD_CLASS\'

', "x" = '788', "y" = '-647')
GUID::'2f4d06ab-2995-4cd6-be65-28e146a14a7d' CREATE VIEW Q_Format_Error_Log_claim( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_DESC')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'STD_CLASS')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '303', "y" = '-647')
GUID::'77b5a5db-71b3-4601-9aa9-33dfb12f9ef6' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameSTDClass"(DDS_ErrorLog_Entry)', "x" = '1484', "y" = '-553')
GUID::'b5a2ec6d-fa5b-4d8b-8263-d35ed76f702c' LOAD FILE DDS_ErrorLog_Entry."$gErrorLogFileNameSTDClass" INPUT(Q_Format_Error_Log_claim)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:55 2017', "ActaValue_3" = 'Tue Oct 03 14:59:32 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_CLASS_WRITE_ERROR_LOG_S3::'d755d13a-4c75-4e4a-b4f4-7515344cb759'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '394', "y" = '-496')
GUID::'9fdb98ab-c36b-4df4-a603-17659a534e24' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '32', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '52', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_claim', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId and DDS_ERROR_LOG.MODULE_NAME=\'STD_CLASS\'



', "x" = '879', "y" = '-496')
GUID::'158dedbb-cc45-4266-b2d0-e80d02d51afd' CREATE VIEW Q_Format_Error_Log_claim( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'STD_CLASS')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameSTDClass"(DDS_ErrorLog_Entry_S3)', "x" = '1278', "y" = '-628')
GUID::'b5eb433f-81e7-46cf-9558-91cd2436cbc5' LOAD FILE DDS_ErrorLog_Entry_S3."$gErrorLogFileNameSTDClass" INPUT(Q_Format_Error_Log_claim)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameSTDClass', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:56 2017', "ActaValue_3" = 'Mon Sep 25 17:55:08 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_ENHNOTES_WRITE_ERROR_LOG::'ab4b2e8d-f8f0-4327-96f0-fe5958e7862a'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '31', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_EnhNotes', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId AND DDS_ERROR_LOG.MODULE_NAME=\'ENHANCEDNOTES\'


', "x" = '773', "y" = '-647')
GUID::'9219c056-9e84-41c2-b6f1-c2e0fd3e0143' CREATE VIEW Q_Format_Error_Log_EnhNotes( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_DESC')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'ENHANCEDNOTES')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '231', "y" = '-584')
GUID::'8b56ec9e-fd50-449d-a81c-bd03bfef6bed' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameEnhNotes"(DDS_ErrorLog_Entry)', "x" = '1556', "y" = '-550')
GUID::'855ee6ca-ac8f-44f2-9753-bf327197a016' LOAD FILE DDS_ErrorLog_Entry."$gErrorLogFileNameEnhNotes" INPUT(Q_Format_Error_Log_EnhNotes)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:56 2017', "ActaValue_3" = 'Mon Sep 25 17:55:08 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_ENHNOTES_WRITE_ERROR_LOG_HEADER::'1d614f87-d88c-412e-9595-9cb21e9d2385'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '40', "y" = '-47')
GUID::'65805abf-e2fc-4e46-b69d-9d6413ce7dcc' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '284', "y" = '-97')
GUID::'0ce45af5-2d2e-4ec4-9790-f4300b1b0542' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '285', "y" = '-281')
GUID::'ab8480de-5d3f-4c3e-9282-87442d3e9c0c' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '761', "y" = '-193')
GUID::'6cf6c399-aa98-4460-ad18-fdb67f2995f0' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1049', "y" = '-244')
GUID::'bef772f9-6342-4782-a9e6-18197e49654e' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gErrorLogFileNameEnhNotes"(DDS_ErrorLog_Info)', "x" = '916', "y" = '-891')
GUID::'2054fb73-c931-4e75-b664-eefdd2fd41aa' LOAD FILE DDS_ErrorLog_Info."$gErrorLogFileNameEnhNotes" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "root_dir" = '$gFileDirectory', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_modified', "ActaName_3" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 19:03:45 2017', "ActaValue_3" = 'Mon Sep 25 16:25:56 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_ENHNOTES_WRITE_ERROR_LOG_HEADER_S3::'a5d29d5c-5bab-4a18-b783-ebd3a61e1f17'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1009', "y" = '-197')
GUID::'dcb02f74-68f2-4193-8635-12d10e500109' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE', "ui_pasting" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '721', "y" = '-146')
GUID::'7a549ef3-5763-4f04-abd4-96b139e583a1' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '245', "y" = '-234')
GUID::'3dccc8d3-4494-4bc6-9019-730ad1a9cceb' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'', "ui_pasting" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '244', "y" = '-50')
GUID::'2fda7b5a-e0d5-47ed-9be9-eb0155a9ef4b' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'', "ui_pasting" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '0', "y" = '0')
GUID::'e99f927a-1b7a-4446-b2fd-ba29387eb8e3' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameEnhNotes"(DDS_ErrorLog_Info_S3)', "x" = '734', "y" = '-1141')
GUID::'3c5cfd02-a676-4908-bd73-282b3ee898e7' LOAD FILE DDS_ErrorLog_Info_S3."$gErrorLogFileNameEnhNotes" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameEnhNotes', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:56 2017', "ActaValue_3" = 'Mon Sep 25 17:55:09 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_ENHNOTES_WRITE_ERROR_LOG_S3::'398253d9-9ad1-4b51-b744-4f8eb5120eff'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '59', "y" = '-215')
GUID::'87e9f27f-78d0-43e0-8901-f544c955b2dc' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '31', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_EnhNotes', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId AND DDS_ERROR_LOG.MODULE_NAME=\'ENHANCEDNOTES\'




', "x" = '601', "y" = '-278')
GUID::'c08e2215-f2cd-4f02-aa17-c6966c05b6ad' CREATE VIEW Q_Format_Error_Log_EnhNotes( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'ENHANCEDNOTES')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameEnhNotes"(DDS_ErrorLog_Entry_S3)', "x" = '1394', "y" = '-516')
GUID::'2e69621b-43f1-4901-a44c-5fafc5d37fed' LOAD FILE DDS_ErrorLog_Entry_S3."$gErrorLogFileNameEnhNotes" INPUT(Q_Format_Error_Log_EnhNotes)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameEnhNotes', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Mar 22 18:53:39 2018', "ActaValue_3" = 'Mon Sep 25 17:55:09 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_EVENT_WRITE_ERROR_LOG::'1fd229df-ff7e-47bd-a0ab-de96eaea2b98'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '297', "y" = '-541')
GUID::'f446a4e4-8ff1-4c06-ac77-8c5ef3568588' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '252', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '57', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_event', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId and DDS_ERROR_LOG.MODULE_NAME=\'EVENT\'


', "x" = '851', "y" = '-706')
GUID::'c0863cdc-12b3-4790-821e-2b7a3df73d26' CREATE VIEW Q_Format_Error_Log_event( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = 'long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'EVENT')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameEvent"(DDS_ErrorLog_Entry)', "x" = '1484', "y" = '-566')
GUID::'dea9a9d5-3dea-48a4-96b3-28a7e7ec1e50' LOAD FILE DDS_ErrorLog_Entry."$gErrorLogFileNameEvent" INPUT(Q_Format_Error_Log_event)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Mar 22 18:53:39 2018', "ActaValue_3" = 'Mon Sep 25 17:55:09 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_EVENT_WRITE_ERROR_LOG_HEADER::'0cacbc90-2651-43d2-aa90-3c4a79b9c58f'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '40', "y" = '-47')
GUID::'dddf5b0a-fb78-4ce3-92fb-68aac84bf51e' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '284', "y" = '-97')
GUID::'e0b450d5-ed06-48e6-8711-94bf6eddf6fb' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '285', "y" = '-281')
GUID::'228df8ad-a7d6-4cd0-9499-26594c166e24' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '761', "y" = '-193')
GUID::'979a1912-6263-45e1-b1b1-d4c69681833b' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1049', "y" = '-244')
GUID::'56d8dba5-cfad-411d-a712-877e01c7bfd5' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gErrorLogFileNameEvent"(DDS_ErrorLog_Info)', "x" = '1013', "y" = '-938')
GUID::'44cc2ae6-3142-4f19-b452-f7c151c93e68' LOAD FILE DDS_ErrorLog_Info."$gErrorLogFileNameEvent" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "root_dir" = '$gFileDirectory', "transfer_custom" = 'no', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 18:43:50 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_EVENT_WRITE_ERROR_LOG_HEADER_S3::'9856aecd-1367-414b-b1c1-f57d3435d498'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1149', "y" = '-391')
GUID::'80082027-6ac4-4fcc-87e4-e4b7df71461c' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE', "ui_pasting" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '861', "y" = '-340')
GUID::'9140c157-f4e5-4dfe-be60-f1b271b7666b' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '385', "y" = '-428')
GUID::'b9352cc4-0016-41f2-bed7-b3fa155692d0' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'', "ui_pasting" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '384', "y" = '-244')
GUID::'3266fe3f-78bd-4ffa-970d-a1a0678fffbc' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'', "ui_pasting" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '140', "y" = '-194')
GUID::'5ad8a25c-b355-44a4-879c-3c79a0820831' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameEvent"(DDS_ErrorLog_Info_S3)', "x" = '822', "y" = '-1016')
GUID::'596f95f6-3169-4247-b430-895aa4831ffe' LOAD FILE DDS_ErrorLog_Info_S3."$gErrorLogFileNameEvent" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameEvent', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_modified', "ActaName_3" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 17:55:09 2017', "ActaValue_3" = 'Mon Sep 25 16:25:57 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_EVENT_WRITE_ERROR_LOG_S3::'e424654b-4ebe-4f79-9ac7-c71d5a6c0a15'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '252', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '57', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_event', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId and DDS_ERROR_LOG.MODULE_NAME=\'EVENT\'




', "x" = '554', "y" = '-165')
GUID::'d53c99bc-d67e-4010-9c18-4a19758b824d' CREATE VIEW Q_Format_Error_Log_event( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'EVENT')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '0', "y" = '0')
GUID::'30ef1ec9-3d9c-4812-9f7e-7084b65db35c' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameEvent"(DDS_ErrorLog_Entry_S3)', "x" = '1100', "y" = '-556')
GUID::'c5cfdeb7-c13a-4887-90a4-ab099c0f2975' LOAD FILE DDS_ErrorLog_Entry_S3."$gErrorLogFileNameEvent" INPUT(Q_Format_Error_Log_event)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameEvent', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Sep 14 11:39:57 2017', "ActaValue_3" = 'Mon Sep 18 12:32:41 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_GET_OPTIONSET::'9b1b9886-9e90-4dd9-b11e-eba07f305303'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>384</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '72', "x" = '212', "y" = '-662')
GUID::'93a607d6-508e-452a-8cb4-f276de36978f' READ TABLE DS_RMDB.DBO.DATA_INTEGRATOR OUTPUT(DATA_INTEGRATOR)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMDB', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>363</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '59', "ui_acta_from_schema_0" = 'DATA_INTEGRATOR', "ui_display_name" = 'Q_CHECK_VERSION', "ui_where_text" = 'DATA_INTEGRATOR.OPTIONSET_ID = $gOptionSet_Id', "x" = '710', "y" = '-662')
GUID::'f3598305-02c1-4f3d-a414-4ba57cce2dcc' CREATE VIEW Q_CHECK_VERSION( JOBID INT  SET( "ui_mapping_text" = '$gJobId') ,
 OPTIONSET_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'DATA_INTEGRATOR.OPTIONSET_NAME') ,
 XML_STRING_POSITION VARCHAR(8)  SET( "Native Type" = 'text', "ui_mapping_text" = 'index(long_to_varchar( XML_STRING,32000,1),\'/gCLAIMS_AVAILABLE\', 1)') ,
 XML_STRING LONG  SET( "Long Type" = 'CLOB', "Native Type" = 'text', "ui_mapping_text" = 'DATA_INTEGRATOR.XML_STRING')  )
 AS
SELECT $gJobId, DATA_INTEGRATOR.OPTIONSET_NAME, index(long_to_varchar(XML_STRING, 32000, 1), '/gCLAIMS_AVAILABLE', 1), DATA_INTEGRATOR.XML_STRING FROM DATA_INTEGRATOR  WHERE (DATA_INTEGRATOR.OPTIONSET_ID = $gOptionSet_Id)
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>441</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'Q_CHECK_VERSION', "ui_display_name" = 'Q_DDS_EXTRACT_XML_161', "ui_where_text" = 'Q_CHECK_VERSION.XML_STRING_POSITION = 113

', "x" = '1257', "y" = '-505')
GUID::'7bdd9957-9401-4cc0-8550-3371b9352935' CREATE VIEW Q_DDS_EXTRACT_XML_161( JOBID INT  SET( "ui_mapping_text" = 'Q_CHECK_VERSION.JOBID') ,
 OPTIONSET_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'Q_CHECK_VERSION.OPTIONSET_NAME') ,
 extract_from_xml AL_RFC_SCHEMA_GROUP (gEVENTS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gMED_WATCH_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCLAIMS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gSTD_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gADJUSTER_NOTES_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPAYMENTS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPAYMENT_SUB_ACCOUNT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPAYMENT_BANK_ACCOUNT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gENHANCED_NOTES_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPERFORM_VERIFICATION INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCHK_DUPLICATE_ENTITY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gALLOW_NEW_CODES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gALLOW_NEW_EMPLOYEES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gALLOW_NEW_DEPARTMENT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCHK_CREATE_NEWENTITY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEMPLOYEE_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEMPLOYEE_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEMPLOYEE_MATCH_BY_EMP_NUM INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gNON_EMP_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gNON_EMP_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCREATE_PI_ENT_IF_TAXID_EMPTY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gALLOW_NEW_CLAIMS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gID_CLAIMANT_BY_NAME_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gID_CLAIMANT_BY_SUFFIX_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gUPDATE_CLAIMANT_NAME_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCRT_ENT_IF_TAXID_EMPTY_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gUPDATE_CLAIMANT_NAME_WC INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gATTACH_TRANS_ID_TO_CHECK_NO INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gRECALCULATE_RESERVES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gDONT_CHECK_DUPLICATE_PAYMENTS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCHECK_DUPLICATE_RESERVE_TRANS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gID_CLAIMANT_BY_Suffix INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gID_CLAIMANT_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gVALIDATE_SUPPLEMENTALS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gSET_ADJUSTER_AS_CURRENT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEN_ENT_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEN_ENT_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEN_ENT_MATCH_BY_ABBRV INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCONFIG_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEVENT_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCLAIM_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPAYMENT_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gORGSEC_FLAG INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gDIARY_TO_USERS VARCHAR(1024) ,
 gUSE_TRANSACTIONS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gVALID_START_DATE VARCHAR(1024) ,
 gVALID_END_DATE VARCHAR(1024) ,
 gEVENT_IMPORTFILE_NAME VARCHAR(1024) ,
 gMEDWATCH_IMPORTFILE_NAME VARCHAR(1024) ,
 gCLAIM_IMPORTFILE_NAME VARCHAR(1024) ,
 gSTD_PLAN_IMPORTFILE_NAME VARCHAR(1024) ,
 gSTD_CLASS_IMPORTFILE_NAME VARCHAR(1024) ,
 gADJUSTER_IMPORTFILE_NAME VARCHAR(1024) ,
 gPAYMENT_IMPORTFILE_NAME VARCHAR(1024) ,
 gEN_IMPORTFILE_NAME VARCHAR(1024) )  )
 AS
SELECT Q_CHECK_VERSION.JOBID, Q_CHECK_VERSION.OPTIONSET_NAME, __AL_EXTRACT_FROM_XML extract_from_xml[gEVENTS_AVAILABLE,gMED_WATCH_AVAILABLE,gCLAIMS_AVAILABLE,gSTD_AVAILABLE,gADJUSTER_NOTES_AVAILABLE,gPAYMENTS_AVAILABLE,gPAYMENT_SUB_ACCOUNT,gPAYMENT_BANK_ACCOUNT,gENHANCED_NOTES_AVAILABLE,gPERFORM_VERIFICATION,gCHK_DUPLICATE_ENTITY,gALLOW_NEW_CODES,gALLOW_NEW_EMPLOYEES,gALLOW_NEW_DEPARTMENT,gCHK_CREATE_NEWENTITY,gEMPLOYEE_MATCH_BY_NAME,gEMPLOYEE_MATCH_BY_TAX_ID,gEMPLOYEE_MATCH_BY_EMP_NUM,gNON_EMP_MATCH_BY_NAME,gNON_EMP_MATCH_BY_TAX_ID,gCREATE_PI_ENT_IF_TAXID_EMPTY,gALLOW_NEW_CLAIMS,gID_CLAIMANT_BY_NAME_GCVA,gID_CLAIMANT_BY_SUFFIX_GCVA,gUPDATE_CLAIMANT_NAME_GCVA,gCRT_ENT_IF_TAXID_EMPTY_GCVA,gUPDATE_CLAIMANT_NAME_WC,gATTACH_TRANS_ID_TO_CHECK_NO,gRECALCULATE_RESERVES,gDONT_CHECK_DUPLICATE_PAYMENTS,gCHECK_DUPLICATE_RESERVE_TRANS,gID_CLAIMANT_BY_Suffix,gID_CLAIMANT_BY_NAME,gVALIDATE_SUPPLEMENTALS,gSET_ADJUSTER_AS_CURRENT,gEN_ENT_MATCH_BY_NAME,gEN_ENT_MATCH_BY_TAX_ID,gEN_ENT_MATCH_BY_ABBRV,gCONFIG_ID,gEVENT_SUPP,gCLAIM_SUPP,gPAYMENT_SUPP,gORGSEC_FLAG,gDIARY_TO_USERS,gUSE_TRANSACTIONS,gVALID_START_DATE,gVALID_END_DATE,gEVENT_IMPORTFILE_NAME,gMEDWATCH_IMPORTFILE_NAME,gCLAIM_IMPORTFILE_NAME,gSTD_PLAN_IMPORTFILE_NAME,gSTD_CLASS_IMPORTFILE_NAME,gADJUSTER_IMPORTFILE_NAME,gPAYMENT_IMPORTFILE_NAME,gEN_IMPORTFILE_NAME](long_to_varchar(Q_CHECK_VERSION.XML_STRING, 32000, 1), 'DDS_161', 0)["XML field name","DTD or Schema name","Enable validation"] FROM Q_CHECK_VERSION  WHERE (Q_CHECK_VERSION.XML_STRING_POSITION = 113)
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>441</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'Q_CHECK_VERSION', "ui_display_name" = 'Q_DDS_EXTRACT_XML_161_ABOVE', "ui_where_text" = '(Q_CHECK_VERSION.XML_STRING_POSITION = 67)

', "x" = '1229', "y" = '-856')
GUID::'e9025690-46ec-4c6d-baad-2dfa91a32db7' CREATE VIEW Q_DDS_EXTRACT_XML_161_ABOVE( JOBID INT  SET( "ui_mapping_text" = 'Q_CHECK_VERSION.JOBID', "ui_pasting" = 'Q_CHECK_VERSION.JOBID') ,
 OPTIONSET_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'Q_CHECK_VERSION.OPTIONSET_NAME', "ui_pasting" = 'Q_CHECK_VERSION.OPTIONSET_NAME') ,
 extract_from_xml AL_RFC_SCHEMA_GROUP (gEVENTS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCLAIMS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPAYMENTS_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPAYMENT_SUB_ACCOUNT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPAYMENT_BANK_ACCOUNT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gMED_WATCH_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gADJUSTER_NOTES_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gENHANCED_NOTES_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gSTD_AVAILABLE INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPERFORM_VERIFICATION INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCHK_DUPLICATE_ENTITY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gALLOW_NEW_CODES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gALLOW_NEW_EMPLOYEES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gALLOW_NEW_DEPARTMENT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCHK_CREATE_NEWENTITY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEMPLOYEE_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEMPLOYEE_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEMPLOYEE_MATCH_BY_DOB INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEMPLOYEE_MATCH_BY_EMP_NUM INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gNON_EMP_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gNON_EMP_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gNON_EMP_MATCH_BY_DOB INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCREATE_PI_ENT_IF_TAXID_EMPTY INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gALLOW_NEW_CLAIMS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gID_CLAIMANT_BY_NAME_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gID_CLAIMANT_BY_SUFFIX_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gUPDATE_CLAIMANT_NAME_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCRT_ENT_IF_TAXID_EMPTY_GCVA INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gUPDATE_CLAIMANT_NAME_WC INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gATTACH_TRANS_ID_TO_CHECK_NO INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gRECALCULATE_RESERVES INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gDONT_CHECK_DUPLICATE_PAYMENTS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCHECK_DUPLICATE_RESERVE_TRANS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gID_CLAIMANT_BY_Suffix INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gID_CLAIMANT_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gVALIDATE_SUPPLEMENTALS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEN_ENT_MATCH_BY_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEN_ENT_MATCH_BY_TAX_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEN_ENT_MATCH_BY_ABBRV INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gSET_ADJUSTER_AS_CURRENT INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gENHNOTES_CLMNT_NAME INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gENHNOTES_CLMNT_TAX INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gENHNOTES_CLMNT_ABBREVIATION INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCONFIG_ID INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gEVENT_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gCLAIM_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gPAYMENT_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gMEDWATCH_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gSTDPLAN_SUPP INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gORGSEC_FLAG INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gDIARY_TO_USERS VARCHAR(1024) ,
 gUSE_TRANSACTIONS INT  SET( "Max Value Inclusive Of" = '255', "Min Value Inclusive Of" = '0', "Native Type" = 'unsignedByte', "XML Type" = 'ELEMENT') ,
 gVALID_START_DATE VARCHAR(1024) ,
 gVALID_END_DATE VARCHAR(1024) ,
 gEVENT_IMPORTFILE_NAME VARCHAR(1024) ,
 gMEDWATCH_IMPORTFILE_NAME VARCHAR(1024) ,
 gCLAIM_IMPORTFILE_NAME VARCHAR(1024) ,
 gSTD_PLAN_IMPORTFILE_NAME VARCHAR(1024) ,
 gSTD_CLASS_IMPORTFILE_NAME VARCHAR(1024) ,
 gADJUSTER_IMPORTFILE_NAME VARCHAR(1024) ,
 gPAYMENT_IMPORTFILE_NAME VARCHAR(1024) ,
 gEN_IMPORTFILE_NAME VARCHAR(1024) )  )
 AS
SELECT Q_CHECK_VERSION.JOBID, Q_CHECK_VERSION.OPTIONSET_NAME, __AL_EXTRACT_FROM_XML extract_from_xml[gEVENTS_AVAILABLE,gCLAIMS_AVAILABLE,gPAYMENTS_AVAILABLE,gPAYMENT_SUB_ACCOUNT,gPAYMENT_BANK_ACCOUNT,gMED_WATCH_AVAILABLE,gADJUSTER_NOTES_AVAILABLE,gENHANCED_NOTES_AVAILABLE,gSTD_AVAILABLE,gPERFORM_VERIFICATION,gCHK_DUPLICATE_ENTITY,gALLOW_NEW_CODES,gALLOW_NEW_EMPLOYEES,gALLOW_NEW_DEPARTMENT,gCHK_CREATE_NEWENTITY,gEMPLOYEE_MATCH_BY_NAME,gEMPLOYEE_MATCH_BY_TAX_ID,gEMPLOYEE_MATCH_BY_DOB,gEMPLOYEE_MATCH_BY_EMP_NUM,gNON_EMP_MATCH_BY_NAME,gNON_EMP_MATCH_BY_TAX_ID,gNON_EMP_MATCH_BY_DOB,gCREATE_PI_ENT_IF_TAXID_EMPTY,gALLOW_NEW_CLAIMS,gID_CLAIMANT_BY_NAME_GCVA,gID_CLAIMANT_BY_SUFFIX_GCVA,gUPDATE_CLAIMANT_NAME_GCVA,gCRT_ENT_IF_TAXID_EMPTY_GCVA,gUPDATE_CLAIMANT_NAME_WC,gATTACH_TRANS_ID_TO_CHECK_NO,gRECALCULATE_RESERVES,gDONT_CHECK_DUPLICATE_PAYMENTS,gCHECK_DUPLICATE_RESERVE_TRANS,gID_CLAIMANT_BY_Suffix,gID_CLAIMANT_BY_NAME,gVALIDATE_SUPPLEMENTALS,gEN_ENT_MATCH_BY_NAME,gEN_ENT_MATCH_BY_TAX_ID,gEN_ENT_MATCH_BY_ABBRV,gSET_ADJUSTER_AS_CURRENT,gENHNOTES_CLMNT_NAME,gENHNOTES_CLMNT_TAX,gENHNOTES_CLMNT_ABBREVIATION,gCONFIG_ID,gEVENT_SUPP,gCLAIM_SUPP,gPAYMENT_SUPP,gMEDWATCH_SUPP,gSTDPLAN_SUPP,gORGSEC_FLAG,gDIARY_TO_USERS,gUSE_TRANSACTIONS,gVALID_START_DATE,gVALID_END_DATE,gEVENT_IMPORTFILE_NAME,gMEDWATCH_IMPORTFILE_NAME,gCLAIM_IMPORTFILE_NAME,gSTD_PLAN_IMPORTFILE_NAME,gSTD_CLASS_IMPORTFILE_NAME,gADJUSTER_IMPORTFILE_NAME,gPAYMENT_IMPORTFILE_NAME,gEN_IMPORTFILE_NAME](long_to_varchar(Q_CHECK_VERSION.XML_STRING, 32000, 1), 'DDS', 0)["XML field name","DTD or Schema name","Enable validation"] FROM Q_CHECK_VERSION  WHERE (Q_CHECK_VERSION.XML_STRING_POSITION = 67)
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '329', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '426', "Output_Width_Name" = '281', "Output_Width_Type" = '126', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'Q_DDS_EXTRACT_XML_161_ABOVE', "ui_display_name" = 'Q_DDS_FORMAT_OPTIONSET_1', "x" = '1765', "y" = '-855')
GUID::'661edbc8-5b80-4e39-8e6f-72d28fc98604' CREATE VIEW Q_DDS_FORMAT_OPTIONSET_1( JOBID INT  KEY  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.JOBID', "ui_pasting" = 'Q_DDS_EXTRACT_XML.JOBID') ,
 PERFORM_VERIFICATION INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPERFORM_VERIFICATION', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gPERFORM_VERIFICATION') ,
 EVENTS_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEVENTS_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gEVENTS_AVAILABLE') ,
 MED_WATCH_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gMED_WATCH_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gMED_WATCH_AVAILABLE') ,
 CLAIMS_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCLAIMS_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gCLAIMS_AVAILABLE') ,
 STD_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gSTD_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gSTD_AVAILABLE') ,
 ADJUSTER_NOTES_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gADJUSTER_NOTES_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gADJUSTER_NOTES_AVAILABLE') ,
 PAYMENTS_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENTS_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gPAYMENTS_AVAILABLE') ,
 PAYMENT_SUB_ACCOUNT INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_SUB_ACCOUNT', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gPAYMENT_SUB_ACCOUNT') ,
 PAYMENT_BANK_ACCOUNT INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_BANK_ACCOUNT', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gPAYMENT_BANK_ACCOUNT') ,
 ENHANCED_NOTES_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gENHANCED_NOTES_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gENHANCED_NOTES_AVAILABLE') ,
 ALLOW_NEW_CODES INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_CODES', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gALLOW_NEW_CODES') ,
 ALLOW_NEW_DEPARTMENT INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_DEPARTMENT', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gALLOW_NEW_DEPARTMENT') ,
 EMPLOYEE_MATCH_BY_NAME INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gEMPLOYEE_MATCH_BY_NAME') ,
 CHK_DUPLICATE_ENTITY INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCHK_DUPLICATE_ENTITY', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gCHK_DUPLICATE_ENTITY') ,
 CHK_CREATE_NEWENTITY INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCHK_CREATE_NEWENTITY', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gCHK_CREATE_NEWENTITY') ,
 EMPLOYEE_MATCH_BY_TAX_ID INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_TAX_ID', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gEMPLOYEE_MATCH_BY_TAX_ID') ,
 EMPLOYEE_MATCH_BY_DOB INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_DOB', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gEMPLOYEE_MATCH_BY_DOB') ,
 EMPLOYEE_MATCH_BY_EMP_NUM INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_EMP_NUM', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gEMPLOYEE_MATCH_BY_EMP_NUM') ,
 NON_EMP_MATCH_BY_NAME INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gNON_EMP_MATCH_BY_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gNON_EMP_MATCH_BY_NAME') ,
 NON_EMP_MATCH_BY_TAX_ID INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gNON_EMP_MATCH_BY_TAX_ID', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gNON_EMP_MATCH_BY_TAX_ID') ,
 NON_EMP_MATCH_BY_DOB INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gNON_EMP_MATCH_BY_DOB', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gNON_EMP_MATCH_BY_DOB') ,
 CREATE_PI_ENT_IF_TAXID_EMPTY INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCREATE_PI_ENT_IF_TAXID_EMPTY', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gCREATE_PI_ENT_IF_TAXID_EMPTY') ,
 ALLOW_NEW_EMPLOYEES INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_EMPLOYEES', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gALLOW_NEW_EMPLOYEES') ,
 ALLOW_NEW_CLAIMS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_CLAIMS', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gALLOW_NEW_CLAIMS') ,
 ID_CLAIMANT_BY_NAME_GCVA INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_NAME_GCVA', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gID_CLAIMANT_BY_NAME_GCVA') ,
 ID_CLAIMANT_BY_SUFFIX_GCVA INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_SUFFIX_GCVA', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gID_CLAIMANT_BY_SUFFIX_GCVA') ,
 UPDATE_CLAIMANT_NAME_GCVA INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gUPDATE_CLAIMANT_NAME_GCVA', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gUPDATE_CLAIMANT_NAME_GCVA') ,
 CRT_ENT_IF_TAXID_EMPTY_GCVA INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCRT_ENT_IF_TAXID_EMPTY_GCVA', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gCRT_ENT_IF_TAXID_EMPTY_GCVA') ,
 UPDATE_CLAIMANT_NAME_WC INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gUPDATE_CLAIMANT_NAME_WC', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gUPDATE_CLAIMANT_NAME_WC') ,
 ATTACH_TRANS_ID_TO_CHECK_NO INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gATTACH_TRANS_ID_TO_CHECK_NO', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gATTACH_TRANS_ID_TO_CHECK_NO') ,
 RECALCULATE_RESERVES INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gRECALCULATE_RESERVES', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gRECALCULATE_RESERVES') ,
 DONT_CHECK_DUPLICATE_PAYMENTS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gDONT_CHECK_DUPLICATE_PAYMENTS', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gDONT_CHECK_DUPLICATE_PAYMENTS') ,
 CHECK_DUPLICATE_RESERVE_TRANS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCHECK_DUPLICATE_RESERVE_TRANS', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gCHECK_DUPLICATE_RESERVE_TRANS') ,
 ID_CLAIMANT_BY_NAME INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gID_CLAIMANT_BY_NAME') ,
 ID_CLAIMANT_BY_SUFFIX INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_Suffix', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gID_CLAIMANT_BY_Suffix') ,
 VALIDATE_SUPPLEMENTALS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gVALIDATE_SUPPLEMENTALS', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gVALIDATE_SUPPLEMENTALS') ,
 SET_ADJUSTER_AS_CURRENT INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gSET_ADJUSTER_AS_CURRENT', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gSET_ADJUSTER_AS_CURRENT') ,
 EN_ENT_MATCH_BY_NAME INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEN_ENT_MATCH_BY_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gEN_ENT_MATCH_BY_NAME') ,
 EN_ENT_MATCH_BY_TAX_ID INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEN_ENT_MATCH_BY_TAX_ID', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gEN_ENT_MATCH_BY_TAX_ID') ,
 EN_ENT_MATCH_BY_ABBRV INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEN_ENT_MATCH_BY_ABBRV', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gEN_ENT_MATCH_BY_ABBRV') ,
 EVENT_SUPP INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEVENT_SUPP', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gEVENT_SUPP') ,
 CLAIM_SUPP INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCLAIM_SUPP', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gCLAIM_SUPP') ,
 PAYMENT_SUPP INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_SUPP', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gPAYMENT_SUPP') ,
 CONFIG_ID INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCONFIG_ID', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gCONFIG_ID') ,
 ORGSEC_FLAG INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gORGSEC_FLAG', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gORGSEC_FLAG') ,
 DIARY_TO_USERS VARCHAR(1024)  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gDIARY_TO_USERS', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gDIARY_TO_USERS') ,
 USE_TRANSACTIONS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gUSE_TRANSACTIONS', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gUSE_TRANSACTIONS') ,
 VALID_START_DATE VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gVALID_START_DATE,\'varchar(8)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gVALID_START_DATE,\'varchar(8)\')') ,
 VALID_END_DATE VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gVALID_END_DATE,\'varchar(8)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gVALID_END_DATE,\'varchar(8)\')') ,
 EVENT_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gEVENT_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gEVENT_IMPORTFILE_NAME,\'varchar(255)\')') ,
 MEDWATCH_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gMEDWATCH_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gMEDWATCH_IMPORTFILE_NAME,\'varchar(255)\')') ,
 CLAIM_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gCLAIM_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gCLAIM_IMPORTFILE_NAME,\'varchar(255)\')') ,
 STD_PLAN_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gSTD_PLAN_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gSTD_PLAN_IMPORTFILE_NAME,\'varchar(255)\')') ,
 STD_CLASS_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gSTD_CLASS_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gSTD_CLASS_IMPORTFILE_NAME,\'varchar(255)\')') ,
 ADJUSTER_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gADJUSTER_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gADJUSTER_IMPORTFILE_NAME,\'varchar(255)\')') ,
 PAYMENT_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gPAYMENT_IMPORTFILE_NAME,\'varchar(255)\')') ,
 EN_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gEN_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML.gEN_IMPORTFILE_NAME,\'varchar(255)\')') ,
 OPTIONSET_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.OPTIONSET_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML.OPTIONSET_NAME') ,
 ENHNOTES_CLMNT_NAME INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gENHNOTES_CLMNT_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gENHNOTES_CLMNT_NAME') ,
 ENHNOTES_CLMNT_TAX INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gENHNOTES_CLMNT_TAX', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gENHNOTES_CLMNT_TAX') ,
 ENHNOTES_CLMNT_ABBREVIATION INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gENHNOTES_CLMNT_ABBREVIATION', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gENHNOTES_CLMNT_ABBREVIATION') ,
 MEDWATCH_SUPP INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gMEDWATCH_SUPP', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gMEDWATCH_SUPP') ,
 STDPLAN_SUPP INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gSTDPLAN_SUPP', "ui_pasting" = 'Q_DDS_EXTRACT_XML.gSTDPLAN_SUPP')  )
 AS
SELECT Q_DDS_EXTRACT_XML_161_ABOVE.JOBID, Q_DDS_EXTRACT_XML_161_ABOVE.gPERFORM_VERIFICATION, Q_DDS_EXTRACT_XML_161_ABOVE.gEVENTS_AVAILABLE, Q_DDS_EXTRACT_XML_161_ABOVE.gMED_WATCH_AVAILABLE, Q_DDS_EXTRACT_XML_161_ABOVE.gCLAIMS_AVAILABLE, Q_DDS_EXTRACT_XML_161_ABOVE.gSTD_AVAILABLE, Q_DDS_EXTRACT_XML_161_ABOVE.gADJUSTER_NOTES_AVAILABLE, Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENTS_AVAILABLE, Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_SUB_ACCOUNT, Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_BANK_ACCOUNT, Q_DDS_EXTRACT_XML_161_ABOVE.gENHANCED_NOTES_AVAILABLE, Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_CODES, Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_DEPARTMENT, Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_NAME, Q_DDS_EXTRACT_XML_161_ABOVE.gCHK_DUPLICATE_ENTITY, Q_DDS_EXTRACT_XML_161_ABOVE.gCHK_CREATE_NEWENTITY, Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_TAX_ID, Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_DOB, Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_EMP_NUM, Q_DDS_EXTRACT_XML_161_ABOVE.gNON_EMP_MATCH_BY_NAME, Q_DDS_EXTRACT_XML_161_ABOVE.gNON_EMP_MATCH_BY_TAX_ID, Q_DDS_EXTRACT_XML_161_ABOVE.gNON_EMP_MATCH_BY_DOB, Q_DDS_EXTRACT_XML_161_ABOVE.gCREATE_PI_ENT_IF_TAXID_EMPTY, Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_EMPLOYEES, Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_CLAIMS, Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_NAME_GCVA, Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_SUFFIX_GCVA, Q_DDS_EXTRACT_XML_161_ABOVE.gUPDATE_CLAIMANT_NAME_GCVA, Q_DDS_EXTRACT_XML_161_ABOVE.gCRT_ENT_IF_TAXID_EMPTY_GCVA, Q_DDS_EXTRACT_XML_161_ABOVE.gUPDATE_CLAIMANT_NAME_WC, Q_DDS_EXTRACT_XML_161_ABOVE.gATTACH_TRANS_ID_TO_CHECK_NO, Q_DDS_EXTRACT_XML_161_ABOVE.gRECALCULATE_RESERVES, Q_DDS_EXTRACT_XML_161_ABOVE.gDONT_CHECK_DUPLICATE_PAYMENTS, Q_DDS_EXTRACT_XML_161_ABOVE.gCHECK_DUPLICATE_RESERVE_TRANS, Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_NAME, Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_Suffix, Q_DDS_EXTRACT_XML_161_ABOVE.gVALIDATE_SUPPLEMENTALS, Q_DDS_EXTRACT_XML_161_ABOVE.gSET_ADJUSTER_AS_CURRENT, Q_DDS_EXTRACT_XML_161_ABOVE.gEN_ENT_MATCH_BY_NAME, Q_DDS_EXTRACT_XML_161_ABOVE.gEN_ENT_MATCH_BY_TAX_ID, Q_DDS_EXTRACT_XML_161_ABOVE.gEN_ENT_MATCH_BY_ABBRV, Q_DDS_EXTRACT_XML_161_ABOVE.gEVENT_SUPP, Q_DDS_EXTRACT_XML_161_ABOVE.gCLAIM_SUPP, Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_SUPP, Q_DDS_EXTRACT_XML_161_ABOVE.gCONFIG_ID, Q_DDS_EXTRACT_XML_161_ABOVE.gORGSEC_FLAG, Q_DDS_EXTRACT_XML_161_ABOVE.gDIARY_TO_USERS, Q_DDS_EXTRACT_XML_161_ABOVE.gUSE_TRANSACTIONS, cast(Q_DDS_EXTRACT_XML_161_ABOVE.gVALID_START_DATE, 'varchar(8)'), cast(Q_DDS_EXTRACT_XML_161_ABOVE.gVALID_END_DATE, 'varchar(8)'), cast(Q_DDS_EXTRACT_XML_161_ABOVE.gEVENT_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161_ABOVE.gMEDWATCH_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161_ABOVE.gCLAIM_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161_ABOVE.gSTD_PLAN_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161_ABOVE.gSTD_CLASS_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161_ABOVE.gADJUSTER_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161_ABOVE.gEN_IMPORTFILE_NAME, 'varchar(255)'), Q_DDS_EXTRACT_XML_161_ABOVE.OPTIONSET_NAME, Q_DDS_EXTRACT_XML_161_ABOVE.gENHNOTES_CLMNT_NAME, Q_DDS_EXTRACT_XML_161_ABOVE.gENHNOTES_CLMNT_TAX, Q_DDS_EXTRACT_XML_161_ABOVE.gENHNOTES_CLMNT_ABBREVIATION, Q_DDS_EXTRACT_XML_161_ABOVE.gMEDWATCH_SUPP, Q_DDS_EXTRACT_XML_161_ABOVE.gSTDPLAN_SUPP FROM Q_DDS_EXTRACT_XML_161_ABOVE 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '340', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '335', "Output_Width_Type" = '111', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '84', "x" = '2272', "y" = '-857')
GUID::'b573a74a-9292-4d2c-8099-8d7b5d1617a6' LOAD TABLE DS_RMX_STAGING.DBO.DDS_OPTIONSET INPUT(Q_DDS_FORMAT_OPTIONSET_1)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '340', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '335', "Output_Width_Type" = '111', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '84', "x" = '2249', "y" = '-506')
GUID::'f96110f4-c145-468b-a4c2-df9feed07d28' LOAD TABLE DS_RMX_STAGING.DBO.DDS_OPTIONSET INPUT(Q_DDS_FORMAT_OPTIONSET_1_1)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '41', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '329', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '426', "Output_Width_Name" = '281', "Output_Width_Type" = '126', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '69', "ui_acta_from_schema_0" = 'Q_DDS_EXTRACT_XML_161', "ui_display_name" = 'Q_DDS_FORMAT_OPTIONSET_1_1', "x" = '1774', "y" = '-506')
GUID::'6720eb69-03cb-461f-af04-d78ab4b6379c' CREATE VIEW Q_DDS_FORMAT_OPTIONSET_1_1( JOBID INT  KEY  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.JOBID', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.JOBID') ,
 PERFORM_VERIFICATION INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gPERFORM_VERIFICATION', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPERFORM_VERIFICATION') ,
 EVENTS_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gEVENTS_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEVENTS_AVAILABLE') ,
 MED_WATCH_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gMED_WATCH_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gMED_WATCH_AVAILABLE') ,
 CLAIMS_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gCLAIMS_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCLAIMS_AVAILABLE') ,
 STD_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gSTD_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gSTD_AVAILABLE') ,
 ADJUSTER_NOTES_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gADJUSTER_NOTES_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gADJUSTER_NOTES_AVAILABLE') ,
 PAYMENTS_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gPAYMENTS_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENTS_AVAILABLE') ,
 PAYMENT_SUB_ACCOUNT INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gPAYMENT_SUB_ACCOUNT', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_SUB_ACCOUNT') ,
 PAYMENT_BANK_ACCOUNT INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gPAYMENT_BANK_ACCOUNT', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_BANK_ACCOUNT') ,
 ENHANCED_NOTES_AVAILABLE INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gENHANCED_NOTES_AVAILABLE', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gENHANCED_NOTES_AVAILABLE') ,
 ALLOW_NEW_CODES INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gALLOW_NEW_CODES', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_CODES') ,
 ALLOW_NEW_DEPARTMENT INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gALLOW_NEW_DEPARTMENT', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_DEPARTMENT') ,
 EMPLOYEE_MATCH_BY_NAME INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gEMPLOYEE_MATCH_BY_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_NAME') ,
 CHK_DUPLICATE_ENTITY INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gCHK_DUPLICATE_ENTITY', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCHK_DUPLICATE_ENTITY') ,
 CHK_CREATE_NEWENTITY INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gCHK_CREATE_NEWENTITY', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCHK_CREATE_NEWENTITY') ,
 EMPLOYEE_MATCH_BY_TAX_ID INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gEMPLOYEE_MATCH_BY_TAX_ID', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_TAX_ID') ,
 EMPLOYEE_MATCH_BY_EMP_NUM INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gEMPLOYEE_MATCH_BY_EMP_NUM', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEMPLOYEE_MATCH_BY_EMP_NUM') ,
 NON_EMP_MATCH_BY_NAME INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gNON_EMP_MATCH_BY_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gNON_EMP_MATCH_BY_NAME') ,
 NON_EMP_MATCH_BY_TAX_ID INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gNON_EMP_MATCH_BY_TAX_ID', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gNON_EMP_MATCH_BY_TAX_ID') ,
 CREATE_PI_ENT_IF_TAXID_EMPTY INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gCREATE_PI_ENT_IF_TAXID_EMPTY', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCREATE_PI_ENT_IF_TAXID_EMPTY') ,
 ALLOW_NEW_EMPLOYEES INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gALLOW_NEW_EMPLOYEES', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_EMPLOYEES') ,
 ALLOW_NEW_CLAIMS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gALLOW_NEW_CLAIMS', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gALLOW_NEW_CLAIMS') ,
 ID_CLAIMANT_BY_NAME_GCVA INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gID_CLAIMANT_BY_NAME_GCVA', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_NAME_GCVA') ,
 ID_CLAIMANT_BY_SUFFIX_GCVA INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gID_CLAIMANT_BY_SUFFIX_GCVA', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_SUFFIX_GCVA') ,
 UPDATE_CLAIMANT_NAME_GCVA INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gUPDATE_CLAIMANT_NAME_GCVA', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gUPDATE_CLAIMANT_NAME_GCVA') ,
 CRT_ENT_IF_TAXID_EMPTY_GCVA INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gCRT_ENT_IF_TAXID_EMPTY_GCVA', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCRT_ENT_IF_TAXID_EMPTY_GCVA') ,
 UPDATE_CLAIMANT_NAME_WC INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gUPDATE_CLAIMANT_NAME_WC', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gUPDATE_CLAIMANT_NAME_WC') ,
 ATTACH_TRANS_ID_TO_CHECK_NO INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gATTACH_TRANS_ID_TO_CHECK_NO', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gATTACH_TRANS_ID_TO_CHECK_NO') ,
 RECALCULATE_RESERVES INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gRECALCULATE_RESERVES', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gRECALCULATE_RESERVES') ,
 DONT_CHECK_DUPLICATE_PAYMENTS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gDONT_CHECK_DUPLICATE_PAYMENTS', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gDONT_CHECK_DUPLICATE_PAYMENTS') ,
 CHECK_DUPLICATE_RESERVE_TRANS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gCHECK_DUPLICATE_RESERVE_TRANS', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCHECK_DUPLICATE_RESERVE_TRANS') ,
 ID_CLAIMANT_BY_NAME INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gID_CLAIMANT_BY_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_NAME') ,
 ID_CLAIMANT_BY_SUFFIX INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gID_CLAIMANT_BY_Suffix', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gID_CLAIMANT_BY_Suffix') ,
 VALIDATE_SUPPLEMENTALS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gVALIDATE_SUPPLEMENTALS', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gVALIDATE_SUPPLEMENTALS') ,
 SET_ADJUSTER_AS_CURRENT INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gSET_ADJUSTER_AS_CURRENT', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gSET_ADJUSTER_AS_CURRENT') ,
 EN_ENT_MATCH_BY_NAME INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gEN_ENT_MATCH_BY_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEN_ENT_MATCH_BY_NAME') ,
 EN_ENT_MATCH_BY_TAX_ID INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gEN_ENT_MATCH_BY_TAX_ID', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEN_ENT_MATCH_BY_TAX_ID') ,
 EN_ENT_MATCH_BY_ABBRV INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gEN_ENT_MATCH_BY_ABBRV', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEN_ENT_MATCH_BY_ABBRV') ,
 EVENT_SUPP INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gEVENT_SUPP', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gEVENT_SUPP') ,
 CLAIM_SUPP INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gCLAIM_SUPP', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCLAIM_SUPP') ,
 PAYMENT_SUPP INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gPAYMENT_SUPP', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_SUPP') ,
 CONFIG_ID INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gCONFIG_ID', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gCONFIG_ID') ,
 ORGSEC_FLAG INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gORGSEC_FLAG', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gORGSEC_FLAG') ,
 DIARY_TO_USERS VARCHAR(1024)  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gDIARY_TO_USERS', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gDIARY_TO_USERS') ,
 USE_TRANSACTIONS INT  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.gUSE_TRANSACTIONS', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.gUSE_TRANSACTIONS') ,
 VALID_START_DATE VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gVALID_START_DATE,\'varchar(8)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gVALID_START_DATE,\'varchar(8)\')') ,
 VALID_END_DATE VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gVALID_END_DATE,\'varchar(8)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gVALID_END_DATE,\'varchar(8)\')') ,
 EVENT_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gEVENT_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gEVENT_IMPORTFILE_NAME,\'varchar(255)\')') ,
 MEDWATCH_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gMEDWATCH_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gMEDWATCH_IMPORTFILE_NAME,\'varchar(255)\')') ,
 CLAIM_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gCLAIM_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gCLAIM_IMPORTFILE_NAME,\'varchar(255)\')') ,
 STD_PLAN_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gSTD_PLAN_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gSTD_PLAN_IMPORTFILE_NAME,\'varchar(255)\')') ,
 STD_CLASS_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gSTD_CLASS_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gSTD_CLASS_IMPORTFILE_NAME,\'varchar(255)\')') ,
 ADJUSTER_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gADJUSTER_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gADJUSTER_IMPORTFILE_NAME,\'varchar(255)\')') ,
 PAYMENT_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gPAYMENT_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gPAYMENT_IMPORTFILE_NAME,\'varchar(255)\')') ,
 EN_IMPORTFILE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'cast(Q_DDS_EXTRACT_XML_161.gEN_IMPORTFILE_NAME,\'varchar(255)\')', "ui_pasting" = 'cast(Q_DDS_EXTRACT_XML_161_ABOVE.gEN_IMPORTFILE_NAME,\'varchar(255)\')') ,
 OPTIONSET_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'Q_DDS_EXTRACT_XML_161.OPTIONSET_NAME', "ui_pasting" = 'Q_DDS_EXTRACT_XML_161_ABOVE.OPTIONSET_NAME')  )
 AS
SELECT Q_DDS_EXTRACT_XML_161.JOBID, Q_DDS_EXTRACT_XML_161.gPERFORM_VERIFICATION, Q_DDS_EXTRACT_XML_161.gEVENTS_AVAILABLE, Q_DDS_EXTRACT_XML_161.gMED_WATCH_AVAILABLE, Q_DDS_EXTRACT_XML_161.gCLAIMS_AVAILABLE, Q_DDS_EXTRACT_XML_161.gSTD_AVAILABLE, Q_DDS_EXTRACT_XML_161.gADJUSTER_NOTES_AVAILABLE, Q_DDS_EXTRACT_XML_161.gPAYMENTS_AVAILABLE, Q_DDS_EXTRACT_XML_161.gPAYMENT_SUB_ACCOUNT, Q_DDS_EXTRACT_XML_161.gPAYMENT_BANK_ACCOUNT, Q_DDS_EXTRACT_XML_161.gENHANCED_NOTES_AVAILABLE, Q_DDS_EXTRACT_XML_161.gALLOW_NEW_CODES, Q_DDS_EXTRACT_XML_161.gALLOW_NEW_DEPARTMENT, Q_DDS_EXTRACT_XML_161.gEMPLOYEE_MATCH_BY_NAME, Q_DDS_EXTRACT_XML_161.gCHK_DUPLICATE_ENTITY, Q_DDS_EXTRACT_XML_161.gCHK_CREATE_NEWENTITY, Q_DDS_EXTRACT_XML_161.gEMPLOYEE_MATCH_BY_TAX_ID, Q_DDS_EXTRACT_XML_161.gEMPLOYEE_MATCH_BY_EMP_NUM, Q_DDS_EXTRACT_XML_161.gNON_EMP_MATCH_BY_NAME, Q_DDS_EXTRACT_XML_161.gNON_EMP_MATCH_BY_TAX_ID, Q_DDS_EXTRACT_XML_161.gCREATE_PI_ENT_IF_TAXID_EMPTY, Q_DDS_EXTRACT_XML_161.gALLOW_NEW_EMPLOYEES, Q_DDS_EXTRACT_XML_161.gALLOW_NEW_CLAIMS, Q_DDS_EXTRACT_XML_161.gID_CLAIMANT_BY_NAME_GCVA, Q_DDS_EXTRACT_XML_161.gID_CLAIMANT_BY_SUFFIX_GCVA, Q_DDS_EXTRACT_XML_161.gUPDATE_CLAIMANT_NAME_GCVA, Q_DDS_EXTRACT_XML_161.gCRT_ENT_IF_TAXID_EMPTY_GCVA, Q_DDS_EXTRACT_XML_161.gUPDATE_CLAIMANT_NAME_WC, Q_DDS_EXTRACT_XML_161.gATTACH_TRANS_ID_TO_CHECK_NO, Q_DDS_EXTRACT_XML_161.gRECALCULATE_RESERVES, Q_DDS_EXTRACT_XML_161.gDONT_CHECK_DUPLICATE_PAYMENTS, Q_DDS_EXTRACT_XML_161.gCHECK_DUPLICATE_RESERVE_TRANS, Q_DDS_EXTRACT_XML_161.gID_CLAIMANT_BY_NAME, Q_DDS_EXTRACT_XML_161.gID_CLAIMANT_BY_Suffix, Q_DDS_EXTRACT_XML_161.gVALIDATE_SUPPLEMENTALS, Q_DDS_EXTRACT_XML_161.gSET_ADJUSTER_AS_CURRENT, Q_DDS_EXTRACT_XML_161.gEN_ENT_MATCH_BY_NAME, Q_DDS_EXTRACT_XML_161.gEN_ENT_MATCH_BY_TAX_ID, Q_DDS_EXTRACT_XML_161.gEN_ENT_MATCH_BY_ABBRV, Q_DDS_EXTRACT_XML_161.gEVENT_SUPP, Q_DDS_EXTRACT_XML_161.gCLAIM_SUPP, Q_DDS_EXTRACT_XML_161.gPAYMENT_SUPP, Q_DDS_EXTRACT_XML_161.gCONFIG_ID, Q_DDS_EXTRACT_XML_161.gORGSEC_FLAG, Q_DDS_EXTRACT_XML_161.gDIARY_TO_USERS, Q_DDS_EXTRACT_XML_161.gUSE_TRANSACTIONS, cast(Q_DDS_EXTRACT_XML_161.gVALID_START_DATE, 'varchar(8)'), cast(Q_DDS_EXTRACT_XML_161.gVALID_END_DATE, 'varchar(8)'), cast(Q_DDS_EXTRACT_XML_161.gEVENT_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161.gMEDWATCH_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161.gCLAIM_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161.gSTD_PLAN_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161.gSTD_CLASS_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161.gADJUSTER_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161.gPAYMENT_IMPORTFILE_NAME, 'varchar(255)'), cast(Q_DDS_EXTRACT_XML_161.gEN_IMPORTFILE_NAME, 'varchar(255)'), Q_DDS_EXTRACT_XML_161.OPTIONSET_NAME FROM Q_DDS_EXTRACT_XML_161 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Mar 22 18:53:40 2018', "ActaValue_3" = 'Mon Sep 25 19:09:15 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_MEDWATCH_WRITE_ERROR_LOG::'13450da1-aa10-4a53-a23b-a5633e8dfecd'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '144', "y" = '-365')
GUID::'05c0c86e-b278-48a8-9c68-f3866f0dd359' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '31', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_EnhNotes', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId AND DDS_ERROR_LOG.MODULE_NAME=\'MEDWATCH\'



', "x" = '686', "y" = '-428')
GUID::'55fd1ce0-b93a-4d4f-a57c-357fe9f0644a' CREATE VIEW Q_Format_Error_Log_EnhNotes( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'MEDWATCH')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameMedWatch"(DDS_ErrorLog_Entry)', "x" = '1178', "y" = '-494')
GUID::'3aa46988-2a3c-46ca-b94f-2a4ed482bb25' LOAD FILE DDS_ErrorLog_Entry."$gErrorLogFileNameMedWatch" INPUT(Q_Format_Error_Log_EnhNotes)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 17:55:09 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_MEDWATCH_WRITE_ERROR_LOG_s3::'b04ab968-fc10-46c9-804f-2951f2a1915d'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '31', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_EnhNotes', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId AND DDS_ERROR_LOG.MODULE_NAME=\'MEDWATCH\'



', "x" = '589', "y" = '-379')
GUID::'cc3f4328-01ca-4d06-aab2-2f0dac5718a1' CREATE VIEW Q_Format_Error_Log_EnhNotes( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'MEDWATCH')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '47', "y" = '-316')
GUID::'8547b86d-1a44-4ffb-8aea-04096721dcb5' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameMedWatch"(DDS_ErrorLog_Entry_S3)', "x" = '1156', "y" = '-613')
GUID::'2050df5d-91dd-469d-9821-90e2b4604019' LOAD FILE DDS_ErrorLog_Entry_S3."$gErrorLogFileNameMedWatch" INPUT(Q_Format_Error_Log_EnhNotes)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameMedWatch', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 18:37:06 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_MedWatch_WRITE_ERROR_LOG_HEADER::'37aa5b50-b9fb-4b3b-9188-646df3cc43a3'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1009', "y" = '-197')
GUID::'7173cd43-30d2-440b-b8f6-4eb831344a84' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE', "ui_pasting" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '721', "y" = '-146')
GUID::'10b87784-61d9-4c6f-b507-51150aec303a' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '245', "y" = '-234')
GUID::'5d684b59-1c2a-459c-acd3-31fdeaf3d2d7' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'', "ui_pasting" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '244', "y" = '-50')
GUID::'f03b29bd-c18b-4849-8d3a-47aeaac46045' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'', "ui_pasting" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '0', "y" = '0')
GUID::'b6fc3d31-4fe9-470f-9bae-9300020126f6' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gErrorLogFileNameMedWatch"(DDS_ErrorLog_Info)', "x" = '988', "y" = '-756')
GUID::'fdd9b7e6-249d-4439-a92d-5b08d939fe51' LOAD FILE DDS_ErrorLog_Info."$gErrorLogFileNameMedWatch" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "root_dir" = '$gFileDirectory', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_modified', "ActaName_3" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 18:44:45 2017', "ActaValue_3" = 'Mon Sep 25 16:25:57 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_MedWatch_WRITE_ERROR_LOG_HEADER_S3::'2695a0d3-8583-4872-b201-c9fa02ab57b3'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '513', "y" = '-297')
GUID::'8e03e81f-5604-4684-8839-b7cadbb958ec' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '269', "y" = '-247')
GUID::'f28dec2a-9c35-496c-a5c1-4a1f5dbe6142' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'', "ui_pasting" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '270', "y" = '-431')
GUID::'7704fa32-e969-4eab-a9be-b39cfad69992' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'', "ui_pasting" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '746', "y" = '-343')
GUID::'df9aa167-9172-4def-add0-a16dbc71b52a' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1034', "y" = '-394')
GUID::'6122b957-6a03-4b6e-a68c-0471c7cba979' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE', "ui_pasting" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameMedWatch"(DDS_ErrorLog_Info_S3)', "x" = '1075', "y" = '-1250')
GUID::'e2e94997-aaae-4e5e-a89f-25990d23795f' LOAD FILE DDS_ErrorLog_Info_S3."$gErrorLogFileNameMedWatch" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameMedWatch', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 17:55:09 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_PAY_WRITE_ERROR_LOG::'4730e9d3-7d58-4f8b-b2a5-3ce5aa37b978'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '31', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '68', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_pay', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId AND DDS_ERROR_LOG.MODULE_NAME=\'PAYMENT\'

', "x" = '773', "y" = '-647')
GUID::'15af1baa-232d-4499-99df-6e2e635f6b80' CREATE VIEW Q_Format_Error_Log_pay( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = 'long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_DESC')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'PAYMENT')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '231', "y" = '-584')
GUID::'7849d11d-d4c2-43d9-aa5f-8c2e8cab52af' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNamePayment"(DDS_ErrorLog_Entry)', "x" = '1553', "y" = '-744')
GUID::'43d0677b-bd36-4889-82b2-2143f02b7acf' LOAD FILE DDS_ErrorLog_Entry."$gErrorLogFileNamePayment" INPUT(Q_Format_Error_Log_pay)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 17:55:10 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_PAY_WRITE_ERROR_LOG_HEADER::'961fca75-0b69-47d5-b33a-82afc17a7f23'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '40', "y" = '-47')
GUID::'a931e0a1-8d55-4faa-b81b-bf52b03f73d9' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '284', "y" = '-97')
GUID::'f8d91cda-2cb8-4a74-93d2-7cc1978aaa78' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '285', "y" = '-281')
GUID::'dedb1443-9e20-4416-912f-701b7de18c8f' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '761', "y" = '-193')
GUID::'0cdb98f0-05ee-4dae-be9f-7f9b4db2b3f1' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1049', "y" = '-244')
GUID::'4926a59f-5838-496c-a675-08e337b7c410' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gErrorLogFileNamePayment"(DDS_ErrorLog_Info)', "x" = '969', "y" = '-1231')
GUID::'6963ba22-71be-40bf-88a3-4af755f90388' LOAD FILE DDS_ErrorLog_Info."$gErrorLogFileNamePayment" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "root_dir" = '$gFileDirectory', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 18:45:40 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_PAY_WRITE_ERROR_LOG_HEADER_S3::'dc9009bb-50c2-47d8-b1d9-0b5227768beb'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1009', "y" = '-197')
GUID::'1e5f69e0-0933-4e2d-a9e9-0900896f448b' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE', "ui_pasting" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '721', "y" = '-146')
GUID::'c88e40a3-69d8-4d07-b659-041e30b8d0e4' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '245', "y" = '-234')
GUID::'c4a2cb6c-2f06-4905-88f6-b3a98192e61f' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'', "ui_pasting" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '244', "y" = '-50')
GUID::'5dcc4784-a067-4a58-855f-5c1cdf50d15e' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'', "ui_pasting" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '0', "y" = '0')
GUID::'8112eac8-e0f8-4f44-92d3-207d2d9f9ded' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNamePayment"(DDS_ErrorLog_Info_S3)', "x" = '916', "y" = '-1144')
GUID::'23911a60-5427-44ea-876e-383b024b36a6' LOAD FILE DDS_ErrorLog_Info_S3."$gErrorLogFileNamePayment" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNamePayment', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 17:55:10 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_PAY_WRITE_ERROR_LOG_S3::'268b01b8-a3a1-41ac-9bce-637b5d54eb93'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '81', "y" = '-531')
GUID::'38baf7b2-7ffa-4cf6-952a-9e678d15cc91' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '31', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '68', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_pay', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId AND DDS_ERROR_LOG.MODULE_NAME=\'PAYMENT\'


', "x" = '623', "y" = '-594')
GUID::'00457706-dbd2-4b2c-ba64-1e1e929d135e' CREATE VIEW Q_Format_Error_Log_pay( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = 'long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)', "ui_pasting" = 'long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'PAYMENT')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNamePayment"(DDS_ErrorLog_Entry_S3)', "x" = '1163', "y" = '-747')
GUID::'b680ac63-7bf7-425e-ba6b-4fa5e54e7dbd' LOAD FILE DDS_ErrorLog_Entry_S3."$gErrorLogFileNamePayment" INPUT(Q_Format_Error_Log_pay)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNamePayment', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 17:55:10 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_PLAN_WRITE_ERROR_LOG::'feaf0dc8-ab4b-494d-8cd4-654411cd72ab'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '32', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '52', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_claim', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId and DDS_ERROR_LOG.MODULE_NAME=\'STD_PLAN\'


', "x" = '929', "y" = '-788')
GUID::'b82b8538-3063-4284-806c-75567244569a' CREATE VIEW Q_Format_Error_Log_claim( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_DESC')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'STD_PLAN')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '303', "y" = '-647')
GUID::'02e64ce2-8b54-4924-a8b1-6849ac7a92f5' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameSTDPlan"(DDS_ErrorLog_Entry)', "x" = '1331', "y" = '-828')
GUID::'ea79fc1c-23a6-42f8-8e25-25f53982adbc' LOAD FILE DDS_ErrorLog_Entry."$gErrorLogFileNameSTDPlan" INPUT(Q_Format_Error_Log_claim)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_modified', "ActaName_3" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 17:55:10 2017', "ActaValue_3" = 'Mon Sep 25 16:25:57 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_PLAN_WRITE_ERROR_LOG_S3::'25bd7c53-acab-4d74-a63e-caa7b2d41bb8'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "x" = '187', "y" = '-335')
GUID::'88393420-4244-4cf2-b3e0-c9e5c60b4007' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '32', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '169', "Output_Width_Name" = '248', "Output_Width_Type" = '144', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '52', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_Format_Error_Log_claim', "ui_where_text" = 'DDS_ERROR_LOG.JOBID = $gJobId and DDS_ERROR_LOG.MODULE_NAME=\'STD_PLAN\'




', "x" = '813', "y" = '-476')
GUID::'c7b72026-d924-4a24-bc84-4f996f4734d2' CREATE VIEW Q_Format_Error_Log_claim( ERROR_KEY_COLUMN VARCHAR(100)  SET( "ui_mapping_text" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE', "ui_pasting" = 'DDS_ERROR_LOG.ERROR_KEY_COLUMN||\':\'||DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE') ,
 ERROR_DESC VARCHAR(32000)  SET( "ui_mapping_text" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)', "ui_pasting" = '#long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
ifthenelse (DDS_ERROR_LOG.IS_VALIDATION=1,long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1),
\'LOCATION: \'||long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION,32000,1)||\'       \'||long_to_varchar(DDS_ERROR_LOG.ERROR_DESC,32000,1)
)')  )
 AS
SELECT ((DDS_ERROR_LOG.ERROR_KEY_COLUMN || ':') || DDS_ERROR_LOG.ERROR_KEY_COLUMN_VALUE), ifthenelse((DDS_ERROR_LOG.IS_VALIDATION = 1), long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1), ((('LOCATION: ' || long_to_varchar(DDS_ERROR_LOG.CURRENT_ERROR_LOCATION, 32000, 1)) || '       ') || long_to_varchar(DDS_ERROR_LOG.ERROR_DESC, 32000, 1))) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.JOBID = $gJobId) AND
   (DDS_ERROR_LOG.MODULE_NAME = 'STD_PLAN')) ORDER BY DDS_ERROR_LOG.IS_VALIDATION ASC , DDS_ERROR_LOG.ERROR_TIME ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameSTDPlan"(DDS_ErrorLog_Entry_S3)', "x" = '1291', "y" = '-638')
GUID::'d5501110-160e-4d4f-a817-3aceb1e8d303' LOAD FILE DDS_ErrorLog_Entry_S3."$gErrorLogFileNameSTDPlan" INPUT(Q_Format_Error_Log_claim)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameSTDPlan', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Apr 25 17:21:11 2016', "ActaValue_3" = 'Mon May 02 16:56:20 2016', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_POPULATE_UV::'9f843da8-2178-4a0a-9a31-fcdf5fca32aa'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '827', "Output_Width_Name" = '200', "Output_Width_Type" = '140', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>285</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '52', "ui_acta_from_schema_0" = 'CASE_DDS_IMPORT_AREA_DDS_EVENT', "ui_display_name" = 'Q_DDS_EVENT', "x" = '1310', "y" = '-52')
GUID::'b32ea224-7f93-4164-b5fb-f20081e8a5dd' CREATE VIEW Q_DDS_EVENT( JOBID INT  KEY  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_EVENT.JOBID') ,
 OPTIONSET_ID INT  SET( "ui_mapping_text" = '$gOptionSet_Id') ,
 MODULE_NAME VARCHAR(25)  SET( "ui_mapping_text" = '\'DDS\'') ,
 IMPORT_AREA VARCHAR(25)  SET( "ui_mapping_text" = '\'EVENT\'') ,
 TABLE_NAME VARCHAR(30)  SET( "ui_mapping_text" = '\'DDS_EVENT\'') ,
 VERIFICATION_FLAG INT  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_EVENT.PERFORM_VERIFICATION') ,
 STOP_VERIFICATION INT  SET( "ui_mapping_text" = '0')  )
 AS
SELECT CASE_DDS_IMPORT_AREA_DDS_EVENT.JOBID, $gOptionSet_Id, 'DDS', 'EVENT', 'DDS_EVENT', CASE_DDS_IMPORT_AREA_DDS_EVENT.PERFORM_VERIFICATION, 0 FROM CASE_DDS_IMPORT_AREA_DDS_EVENT 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '43', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '222', "Output_Width_Type" = '202', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>400</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '56', "x" = '2628', "y" = '-822')
GUID::'e0815895-5868-4d7a-83de-cd088b8f4f15' LOAD TABLE DS_RMX_STAGING.DBO.USER_VERIFICATION INPUT(MERGE_DDS_IMPORT_AREAS)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="WINDOWS-1252" ?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load>0</loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMX_STAGING_DBO_USER_VERIFICATION.txt</loader_overflow_file>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<overflow_file_format>write_data</overflow_file_format>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMX_STAGING_DBO_USER_VERIFICATION.txt</loader_overflow_file>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<overflow_file_format>write_data</overflow_file_format>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 10g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<loader_auto_correct>no</loader_auto_correct>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<overflow_file_format>write_data</overflow_file_format>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<loader_auto_correct>no</loader_auto_correct>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMX_STAGING_DBO_USER_VERIFICATION.txt</loader_overflow_file>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<overflow_file_format>write_data</overflow_file_format>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<loader_auto_correct>no</loader_auto_correct>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMX_STAGING_DBO_USER_VERIFICATION.txt</loader_overflow_file>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMX_STAGING_DBO_USER_VERIFICATION.txt</loader_overflow_file>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
</LDRConfiguration>
</LDRConfigurations>
', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '43', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '56', "x" = '47', "y" = '-614')
GUID::'1c031a90-1c96-4ee8-a445-2c3672628b65' READ TABLE DS_RMX_STAGING.DBO.DDS_OPTIONSET OUTPUT(DDS_OPTIONSET)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("CASE_DDS_IMPORT_AREA_DDS_ADJUSTER" = '$gAdjusters_Available =1', "CASE_DDS_IMPORT_AREA_DDS_CLAIM" = '$gClaims_Available = 1', "CASE_DDS_IMPORT_AREA_DDS_ENHNOTES" = '$gEnhancedNotes_Available = 1', "CASE_DDS_IMPORT_AREA_DDS_EVENT" = '$gEvents_Available = 1', "CASE_DDS_IMPORT_AREA_DDS_MEDWATCH" = '$gMedWatch_Available =1', "CASE_DDS_IMPORT_AREA_DDS_PAYMENT" = '$gPayments_Available = 1', "CASE_DDS_IMPORT_AREA_DDS_STD_CLASS" = '$gShortTermDisability_Available =1 AND $gSTD_Class_ImportFile_Name IS NOT NULL', "CASE_DDS_IMPORT_AREA_DDS_STD_PLAN" = '$gShortTermDisability_Available =1 AND $gSTD_Plan_ImportFile_Name IS NOT NULL', "InputSchema_WidthProp" = '43', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Description', "Output_2nd_Column_Name" = 'Type', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '24', "ui_acta_from_schema_0" = 'Q_DDS_UV_IMPORT_AREAS', "ui_display_name" = 'CASE_DDS_IMPORT_AREA', "x" = '777', "y" = '-614')
GUID::'df926b5f-6a8f-4037-a5a8-217630bdb337' CREATE VIEW CASE_DDS_IMPORT_AREA()
 AS
SELECT  FROM Q_DDS_UV_IMPORT_AREAS  CASE ($gEvents_Available = 1) OUTPUT CASE_DDS_IMPORT_AREA_DDS_EVENT , ($gClaims_Available = 1) OUTPUT CASE_DDS_IMPORT_AREA_DDS_CLAIM , ($gPayments_Available = 1) OUTPUT CASE_DDS_IMPORT_AREA_DDS_PAYMENT , ($gEnhancedNotes_Available = 1) OUTPUT CASE_DDS_IMPORT_AREA_DDS_ENHNOTES , ($gAdjusters_Available = 1) OUTPUT CASE_DDS_IMPORT_AREA_DDS_ADJUSTER , ($gMedWatch_Available = 1) OUTPUT CASE_DDS_IMPORT_AREA_DDS_MEDWATCH , (($gShortTermDisability_Available = 1) AND
   ($gSTD_Plan_ImportFile_Name IS NOT  NULL )) OUTPUT CASE_DDS_IMPORT_AREA_DDS_STD_PLAN , (($gShortTermDisability_Available = 1) AND
   ($gSTD_Class_ImportFile_Name IS NOT  NULL )) OUTPUT CASE_DDS_IMPORT_AREA_DDS_STD_CLASS
SET("Mutually_Exclusive" = 'no', "Preserve_Expression_Order" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '827', "Output_Width_Name" = '200', "Output_Width_Type" = '140', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>278</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '37', "ui_acta_from_schema_0" = 'CASE_DDS_IMPORT_AREA_DDS_CLAIM', "ui_display_name" = 'Q_DDS_CLAIM', "x" = '1306', "y" = '-288')
GUID::'81d37a1d-ba8d-44b8-ac38-676c061b91fe' CREATE VIEW Q_DDS_CLAIM( JOBID INT  KEY  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_CLAIM.JOBID', "ui_pasting" = 'DDS_OPTIONSET.JOBID') ,
 OPTIONSET_ID INT  SET( "ui_mapping_text" = '$gOptionSet_Id', "ui_pasting" = '$gOptionSet_Id') ,
 MODULE_NAME VARCHAR(25)  SET( "ui_mapping_text" = '\'DDS\'', "ui_pasting" = '\'DDS\'') ,
 IMPORT_AREA VARCHAR(25)  SET( "ui_mapping_text" = '\'CLAIM\'', "ui_pasting" = 'ifthenelse( $gEvents_Available = 1,\'EVENT\',ifthenelse( 
$gClaims_Available = 1,\'CLAIM\',ifthenelse( 
$gPayments_Available = 1,\'PAYMENT\', NULL )))') ,
 TABLE_NAME VARCHAR(30)  SET( "ui_mapping_text" = '\'DDS_CLAIM\'', "ui_pasting" = 'ifthenelse( $gEvents_Available = 1,\'DDS_EVENT\',ifthenelse( 
$gClaims_Available = 1,\'DDS_CLAIM\',ifthenelse( 
$gPayments_Available = 1,\'DDS_PAYMENT\', NULL )))') ,
 VERIFICATION_FLAG INT  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_CLAIM.PERFORM_VERIFICATION', "ui_pasting" = 'DDS_OPTIONSET.PERFORM_VERIFICATION') ,
 STOP_VERIFICATION INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0')  )
 AS
SELECT CASE_DDS_IMPORT_AREA_DDS_CLAIM.JOBID, $gOptionSet_Id, 'DDS', 'CLAIM', 'DDS_CLAIM', CASE_DDS_IMPORT_AREA_DDS_CLAIM.PERFORM_VERIFICATION, 0 FROM CASE_DDS_IMPORT_AREA_DDS_CLAIM 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '827', "Output_Width_Name" = '200', "Output_Width_Type" = '140', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>335</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '54', "ui_acta_from_schema_0" = 'CASE_DDS_IMPORT_AREA_DDS_PAYMENT', "ui_display_name" = 'Q_DDS_PAYMENT', "x" = '1297', "y" = '-536')
GUID::'894f36e7-58ed-4b64-9bd8-fff7cccc5a60' CREATE VIEW Q_DDS_PAYMENT( JOBID INT  KEY  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_PAYMENT.JOBID', "ui_pasting" = 'DDS_OPTIONSET.JOBID') ,
 OPTIONSET_ID INT  SET( "ui_mapping_text" = '$gOptionSet_Id', "ui_pasting" = '$gOptionSet_Id') ,
 MODULE_NAME VARCHAR(25)  SET( "ui_mapping_text" = '\'DDS\'', "ui_pasting" = '\'DDS\'') ,
 IMPORT_AREA VARCHAR(25)  SET( "ui_mapping_text" = '\'PAYMENT\'', "ui_pasting" = 'ifthenelse( $gEvents_Available = 1,\'EVENT\',ifthenelse( 
$gClaims_Available = 1,\'CLAIM\',ifthenelse( 
$gPayments_Available = 1,\'PAYMENT\', NULL )))') ,
 TABLE_NAME VARCHAR(30)  SET( "ui_mapping_text" = '\'DDS_PAYMENT\'', "ui_pasting" = 'ifthenelse( $gEvents_Available = 1,\'DDS_EVENT\',ifthenelse( 
$gClaims_Available = 1,\'DDS_CLAIM\',ifthenelse( 
$gPayments_Available = 1,\'DDS_PAYMENT\', NULL )))') ,
 VERIFICATION_FLAG INT  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_PAYMENT.PERFORM_VERIFICATION', "ui_pasting" = 'DDS_OPTIONSET.PERFORM_VERIFICATION') ,
 STOP_VERIFICATION INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0')  )
 AS
SELECT CASE_DDS_IMPORT_AREA_DDS_PAYMENT.JOBID, $gOptionSet_Id, 'DDS', 'PAYMENT', 'DDS_PAYMENT', CASE_DDS_IMPORT_AREA_DDS_PAYMENT.PERFORM_VERIFICATION, 0 FROM CASE_DDS_IMPORT_AREA_DDS_PAYMENT 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '222', "Output_Width_Type" = '189', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '37', "ui_display_name" = 'MERGE_DDS_IMPORT_AREAS', "x" = '2080', "y" = '-822')
GUID::'bf5ff728-ac52-4fb4-8ed3-09f77a397473' CALL TRANSFORM Merge() INPUT(Q_DDS_ADJUSTER, Q_DDS_CLAIM, Q_DDS_ENHNOTES, Q_DDS_EVENT, Q_DDS_MEDWATCH, Q_DDS_PAYMENT, Q_DDS_STD_CLASS, Q_DDS_STD_PLAN) OUTPUT(MERGE_DDS_IMPORT_AREAS()
);

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '241', "Output_Width_Name" = '222', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '53', "ui_acta_from_schema_0" = 'DDS_OPTIONSET', "ui_display_name" = 'Q_DDS_UV_IMPORT_AREAS', "x" = '379', "y" = '-613')
GUID::'7558650c-92f8-4112-95b0-4aad7ea21aaa' CREATE VIEW Q_DDS_UV_IMPORT_AREAS( JOBID INT  KEY  SET( "ui_mapping_text" = 'DDS_OPTIONSET.JOBID') ,
 PERFORM_VERIFICATION INT  SET( "ui_mapping_text" = 'DDS_OPTIONSET.PERFORM_VERIFICATION')  )
 AS
SELECT DDS_OPTIONSET.JOBID, DDS_OPTIONSET.PERFORM_VERIFICATION FROM DDS_OPTIONSET 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '33', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '233', "Output_Width_Name" = '233', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>350</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES', "ui_display_name" = 'Q_DDS_ENHNOTES', "x" = '1292', "y" = '-756')
GUID::'f3e68454-ecc5-4c05-9ed8-d808cd4a65f2' CREATE VIEW Q_DDS_ENHNOTES( JOBID INT  KEY  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.JOBID') ,
 OPTIONSET_ID INT  SET( "ui_mapping_text" = '$gOptionSet_Id') ,
 MODULE_NAME VARCHAR(25)  SET( "ui_mapping_text" = '\'DDS\'') ,
 IMPORT_AREA VARCHAR(25)  SET( "ui_mapping_text" = '\'ENHANCED NOTES\'') ,
 TABLE_NAME VARCHAR(30)  SET( "ui_mapping_text" = '\'DDS_ENHANCEDNOTES\'') ,
 VERIFICATION_FLAG INT  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.PERFORM_VERIFICATION') ,
 STOP_VERIFICATION INT  SET( "ui_mapping_text" = '0')  )
 AS
SELECT CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.JOBID, $gOptionSet_Id, 'DDS', 'ENHANCED NOTES', 'DDS_ENHANCEDNOTES', CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.PERFORM_VERIFICATION, 0 FROM CASE_DDS_IMPORT_AREA_DDS_ENHNOTES 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '33', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '233', "Output_Width_Name" = '233', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>347</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'CASE_DDS_IMPORT_AREA_DDS_ADJUSTER', "ui_display_name" = 'Q_DDS_ADJUSTER', "x" = '1300', "y" = '-997')
GUID::'5f542a63-25f8-422f-8e1b-404c40e3ef60' CREATE VIEW Q_DDS_ADJUSTER( JOBID INT  KEY  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_ADJUSTER.JOBID', "ui_pasting" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.JOBID') ,
 OPTIONSET_ID INT  SET( "ui_mapping_text" = '$gOptionSet_Id', "ui_pasting" = '$gOptionSet_Id') ,
 MODULE_NAME VARCHAR(25)  SET( "ui_mapping_text" = '\'DDS\'', "ui_pasting" = '\'DDS\'') ,
 IMPORT_AREA VARCHAR(25)  SET( "ui_mapping_text" = '\'ADJUSTER\'', "ui_pasting" = '\'ENHANCED NOTES\'') ,
 TABLE_NAME VARCHAR(30)  SET( "ui_mapping_text" = '\'DDS_ADJUSTER\'', "ui_pasting" = '\'DDS_ENHANCEDNOTES\'') ,
 VERIFICATION_FLAG INT  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_ADJUSTER.PERFORM_VERIFICATION', "ui_pasting" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.PERFORM_VERIFICATION') ,
 STOP_VERIFICATION INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0')  )
 AS
SELECT CASE_DDS_IMPORT_AREA_DDS_ADJUSTER.JOBID, $gOptionSet_Id, 'DDS', 'ADJUSTER', 'DDS_ADJUSTER', CASE_DDS_IMPORT_AREA_DDS_ADJUSTER.PERFORM_VERIFICATION, 0 FROM CASE_DDS_IMPORT_AREA_DDS_ADJUSTER 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '33', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '233', "Output_Width_Name" = '233', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>366</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'CASE_DDS_IMPORT_AREA_DDS_MEDWATCH', "ui_display_name" = 'Q_DDS_MEDWATCH', "x" = '1300', "y" = '-1213')
GUID::'bb30d25a-e800-4f13-b985-cd0983f762f0' CREATE VIEW Q_DDS_MEDWATCH( JOBID INT  KEY  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_MEDWATCH.JOBID', "ui_pasting" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.JOBID') ,
 OPTIONSET_ID INT  SET( "ui_mapping_text" = '$gOptionSet_Id', "ui_pasting" = '$gOptionSet_Id') ,
 MODULE_NAME VARCHAR(25)  SET( "ui_mapping_text" = '\'DDS\'', "ui_pasting" = '\'DDS\'') ,
 IMPORT_AREA VARCHAR(25)  SET( "ui_mapping_text" = '\'MEDWATCH\'', "ui_pasting" = '\'ENHANCED NOTES\'') ,
 TABLE_NAME VARCHAR(30)  SET( "ui_mapping_text" = '\'DDS_MEDWATCH\'', "ui_pasting" = '\'DDS_ENHANCEDNOTES\'') ,
 VERIFICATION_FLAG INT  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_MEDWATCH.PERFORM_VERIFICATION', "ui_pasting" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.PERFORM_VERIFICATION') ,
 STOP_VERIFICATION INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0')  )
 AS
SELECT CASE_DDS_IMPORT_AREA_DDS_MEDWATCH.JOBID, $gOptionSet_Id, 'DDS', 'MEDWATCH', 'DDS_MEDWATCH', CASE_DDS_IMPORT_AREA_DDS_MEDWATCH.PERFORM_VERIFICATION, 0 FROM CASE_DDS_IMPORT_AREA_DDS_MEDWATCH 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '33', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '233', "Output_Width_Name" = '233', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>347</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'CASE_DDS_IMPORT_AREA_DDS_STD_PLAN', "ui_display_name" = 'Q_DDS_STD_PLAN', "x" = '1313', "y" = '-1422')
GUID::'2ae59d62-b905-44ea-ba67-35584878cca4' CREATE VIEW Q_DDS_STD_PLAN( JOBID INT  KEY  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_STD_PLAN.JOBID', "ui_pasting" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.JOBID') ,
 OPTIONSET_ID INT  SET( "ui_mapping_text" = '$gOptionSet_Id', "ui_pasting" = '$gOptionSet_Id') ,
 MODULE_NAME VARCHAR(25)  SET( "ui_mapping_text" = '\'DDS\'', "ui_pasting" = '\'DDS\'') ,
 IMPORT_AREA VARCHAR(25)  SET( "ui_mapping_text" = '\'STD_PLAN\'', "ui_pasting" = '\'ENHANCED NOTES\'') ,
 TABLE_NAME VARCHAR(30)  SET( "ui_mapping_text" = '\'DDS_STD_PLAN\'', "ui_pasting" = '\'DDS_ENHANCEDNOTES\'') ,
 VERIFICATION_FLAG INT  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_STD_PLAN.PERFORM_VERIFICATION', "ui_pasting" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.PERFORM_VERIFICATION') ,
 STOP_VERIFICATION INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0')  )
 AS
SELECT CASE_DDS_IMPORT_AREA_DDS_STD_PLAN.JOBID, $gOptionSet_Id, 'DDS', 'STD_PLAN', 'DDS_STD_PLAN', CASE_DDS_IMPORT_AREA_DDS_STD_PLAN.PERFORM_VERIFICATION, 0 FROM CASE_DDS_IMPORT_AREA_DDS_STD_PLAN 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '33', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '233', "Output_Width_Name" = '233', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'CASE_DDS_IMPORT_AREA_DDS_STD_CLASS', "ui_display_name" = 'Q_DDS_STD_CLASS', "x" = '1325', "y" = '-1696')
GUID::'e495d0af-d72a-419a-a182-538089f72fb8' CREATE VIEW Q_DDS_STD_CLASS( JOBID INT  KEY  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_STD_CLASS.JOBID', "ui_pasting" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.JOBID') ,
 OPTIONSET_ID INT  SET( "ui_mapping_text" = '$gOptionSet_Id', "ui_pasting" = '$gOptionSet_Id') ,
 MODULE_NAME VARCHAR(25)  SET( "ui_mapping_text" = '\'DDS\'', "ui_pasting" = '\'DDS\'') ,
 IMPORT_AREA VARCHAR(25)  SET( "ui_mapping_text" = '\'STD_CLASS\'', "ui_pasting" = '\'ENHANCED NOTES\'') ,
 TABLE_NAME VARCHAR(30)  SET( "ui_mapping_text" = '\'DDS_STD_CLASS\'', "ui_pasting" = '\'DDS_ENHANCEDNOTES\'') ,
 VERIFICATION_FLAG INT  SET( "ui_mapping_text" = 'CASE_DDS_IMPORT_AREA_DDS_STD_CLASS.PERFORM_VERIFICATION', "ui_pasting" = 'CASE_DDS_IMPORT_AREA_DDS_ENHNOTES.PERFORM_VERIFICATION') ,
 STOP_VERIFICATION INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0')  )
 AS
SELECT CASE_DDS_IMPORT_AREA_DDS_STD_CLASS.JOBID, $gOptionSet_Id, 'DDS', 'STD_CLASS', 'DDS_STD_CLASS', CASE_DDS_IMPORT_AREA_DDS_STD_CLASS.PERFORM_VERIFICATION, 0 FROM CASE_DDS_IMPORT_AREA_DDS_STD_CLASS 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ANNOTATION_0" = 'ALGUICOMMENT( x = \'29\', y = \'-56\',ObjectDesc=\'Note: In process log we are providing successfull log information + successfull date completion information + total no of records read count either from Access or Staging DB. In it we have added seq_col column to provide the seq of the records read, date completion and successfull completion. The Seq_col value is set to \\\'-1\\\' for record reads as those records needs to be populate @ top, while it is set to total number of rows + 1 to date completion as this value needs to be populate in last and in last the successfull completion log column value passed as it is in order to seq_col as we need to ordered the value as per the display order which we have assigned to it in valdation flows and in import wf\\\'s. 
We have tried to assigned the seq_col value either 1,2 and 3 but that\\\'s not working as it is disordering the records which are populating into process_log table at the time of validation and import i.e. successfull records.\',UI_DATA_XML=\'<UIDATA><MAINICON><LOCATION><X>-29</X><Y>56</Y></LOCATION><SIZE><CX>0</CX><CY>0</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>2609</CX><CY>256</CY></SIZE><VISIBLE>1</VISIBLE></DESCRIPTION></UIDATA>\' )
', "ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:55 2017', "ActaValue_3" = 'Mon Sep 18 12:32:41 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_PROCESS_LOG::'8b4a9a7d-d43a-4876-91da-ee0228a5ed5a'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '187', "Output_Width_Name" = '273', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_PROCESS_LOG_T', "ui_display_name" = 'Q_PROCESS_LOG_1', "ui_where_text" = 'DDS_PROCESS_LOG_T.JOBID = $gJobId and DDS_PROCESS_LOG_T.DISPLAY_ORDER <> -11

', "x" = '460', "y" = '-428')
GUID::'095c1b70-4297-4530-8f51-ca404cd90832' CREATE VIEW Q_PROCESS_LOG_1( PROCESS_DESC VARCHAR(500)  SET( "ui_mapping_text" = 'DDS_PROCESS_LOG_T.PROCESS_DESC') ,
 "ORDER" INT  SET( "ui_mapping_text" = 'DDS_PROCESS_LOG_T.DISPLAY_ORDER') ,
 JOBID INT  SET( "ui_mapping_text" = 'DDS_PROCESS_LOG_T.JOBID')  )
 AS
SELECT DISTINCT DDS_PROCESS_LOG_T.PROCESS_DESC, DDS_PROCESS_LOG_T.DISPLAY_ORDER, DDS_PROCESS_LOG_T.JOBID FROM DDS_PROCESS_LOG_T  WHERE ((DDS_PROCESS_LOG_T.JOBID = $gJobId) AND
   (DDS_PROCESS_LOG_T.DISPLAY_ORDER != -11)) ORDER BY DDS_PROCESS_LOG_T.DISPLAY_ORDER ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '293', "Output_Width_Name" = '252', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '57', "ui_acta_from_schema_0" = 'Q_PROCESS_LOG_1', "ui_display_name" = 'Q_PROCESS_LOG_2', "x" = '928', "y" = '-358')
GUID::'d9fd3d9c-e989-4a34-97f3-6918b4f10968' CREATE VIEW Q_PROCESS_LOG_2( JOBID INT  SET( "ui_mapping_text" = 'Q_PROCESS_LOG_1.JOBID') ,
 PROCESS_DESC VARCHAR(500)  SET( "ui_mapping_text" = 'Q_PROCESS_LOG_1.PROCESS_DESC') ,
 SEQ_COL INT  SET( "ui_mapping_text" = '1')  )
 AS
SELECT Q_PROCESS_LOG_1.JOBID, Q_PROCESS_LOG_1.PROCESS_DESC, 1 FROM Q_PROCESS_LOG_1 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '45', "ui_acta_from_schema_0" = 'Q_PROCESS_LOG_DATE', "ui_display_name" = 'Q_PROCESS_LOG_3', "x" = '739', "y" = '-880')
GUID::'79fa1968-580f-4c3f-a7e8-11d4e9ea562f' CREATE VIEW Q_PROCESS_LOG_3( JOBID INT  SET( "ui_mapping_text" = 'Q_PROCESS_LOG_DATE.JOBID') ,
 PROCESS_DESC VARCHAR(500)  SET( "ui_mapping_text" = 'Q_PROCESS_LOG_DATE.PROCESS_DESC') ,
 SEQ_COL INT  SET( "ui_mapping_text" = '2')  )
 AS
SELECT Q_PROCESS_LOG_DATE.JOBID, Q_PROCESS_LOG_DATE.PROCESS_DESC, 2 FROM Q_PROCESS_LOG_DATE 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>447</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '45', "ui_acta_from_schema_0" = 'RG_Q_PROCESS_LOG', "ui_display_name" = 'Q_PROCESS_LOG_DATE', "x" = '385', "y" = '-728')
GUID::'c33949a6-22e9-4214-85ff-bb78db5a926a' CREATE VIEW Q_PROCESS_LOG_DATE( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform', "ui_mapping_text" = 'RG_Q_PROCESS_LOG.DI_ROW_ID') ,
 PROCESS_DESC VARCHAR(500)  SET( "ui_mapping_text" = '((\'Process Completed at \' || to_char(sysdate(),\'MM-DD-YY HH24:MI:SS\')) || \'.\')') ,
 JOBID INT  SET( "ui_mapping_text" = '$gJobId')  )
 AS
SELECT RG_Q_PROCESS_LOG.DI_ROW_ID, (('Process Completed at ' || to_char(sysdate(), 'MM-DD-YY HH24:MI:SS')) || '.'), $gJobId FROM RG_Q_PROCESS_LOG 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>356</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '45', "ui_display_name" = 'RG_Q_PROCESS_LOG', "x" = '35', "y" = '-735')
GUID::'463860ec-a1b3-49fa-8a77-16cbf9b49a50' CALL TRANSFORM Row_Generation() OUTPUT(RG_Q_PROCESS_LOG( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '45', "ui_display_name" = 'MO_PROCESS_EXPORT', "x" = '1117', "y" = '-564')
GUID::'ec9a875b-3262-481d-ad23-d901e1624c0d' CALL TRANSFORM Merge() INPUT(Q_PROCESS_LOG_2, Q_PROCESS_LOG_3) OUTPUT(MO_PROCESS_EXPORT()
);

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '45', "ui_acta_from_schema_0" = 'MO_PROCESS_EXPORT', "ui_display_name" = 'Q_EXPORT_PROCESS_LOG', "x" = '1419', "y" = '-715')
GUID::'d30667d1-a33c-4d98-9679-059ff5c6bd2b' CREATE VIEW Q_EXPORT_PROCESS_LOG( "PROCESS DESCRIPTION" VARCHAR(500)  SET( "ui_mapping_text" = 'MO_PROCESS_EXPORT.PROCESS_DESC')  )
 AS
SELECT MO_PROCESS_EXPORT.PROCESS_DESC FROM MO_PROCESS_EXPORT  ORDER BY MO_PROCESS_EXPORT.SEQ_COL ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>397</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '58', "x" = '75', "y" = '-331')
GUID::'7ed56d3f-722a-4af8-8c22-0eec2aabdf0d' READ TABLE DS_RMX_STAGING.DBO.DDS_PROCESS_LOG_T OUTPUT(DDS_PROCESS_LOG_T)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '58', "ui_display_name" = '"$gFileName"(DDS_PROCESS_LOG)', "x" = '1484', "y" = '-1097')
GUID::'996cb66b-04af-4fbb-ac6a-91c93551f443' LOAD FILE DDS_PROCESS_LOG."$gFileName" INPUT(Q_EXPORT_PROCESS_LOG)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:55 2017', "ActaValue_3" = 'Mon Sep 25 19:06:15 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_PROCESS_LOG_S3::'8beef8aa-4e8d-4fdf-8095-bf3f78930a7b'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>397</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '58', "x" = '40', "y" = '0')
GUID::'f9afb823-3169-4733-b526-5e2b4b02fba2' READ TABLE DS_RMX_STAGING.DBO.DDS_PROCESS_LOG_T OUTPUT(DDS_PROCESS_LOG_T)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '45', "ui_acta_from_schema_0" = 'MO_PROCESS_EXPORT', "ui_display_name" = 'Q_EXPORT_PROCESS_LOG', "x" = '1384', "y" = '-384')
GUID::'9552e658-f3fe-4289-b143-8c5d0d5e7552' CREATE VIEW Q_EXPORT_PROCESS_LOG( "PROCESS DESCRIPTION" VARCHAR(500)  SET( "ui_mapping_text" = 'MO_PROCESS_EXPORT.PROCESS_DESC', "ui_pasting" = 'MO_PROCESS_EXPORT.PROCESS_DESC')  )
 AS
SELECT MO_PROCESS_EXPORT.PROCESS_DESC FROM MO_PROCESS_EXPORT  ORDER BY MO_PROCESS_EXPORT.SEQ_COL ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '45', "ui_display_name" = 'MO_PROCESS_EXPORT', "x" = '1082', "y" = '-233')
GUID::'d03a615f-492e-42c4-b988-8b23210cba91' CALL TRANSFORM Merge() INPUT(Q_PROCESS_LOG_2, Q_PROCESS_LOG_3) OUTPUT(MO_PROCESS_EXPORT()
);

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>356</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '45', "ui_display_name" = 'RG_Q_PROCESS_LOG', "x" = '0', "y" = '-404')
GUID::'755a9b9b-41c4-44d2-b56f-8ed37a4ce894' CALL TRANSFORM Row_Generation() OUTPUT(RG_Q_PROCESS_LOG( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>447</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '45', "ui_acta_from_schema_0" = 'RG_Q_PROCESS_LOG', "ui_display_name" = 'Q_PROCESS_LOG_DATE', "x" = '350', "y" = '-397')
GUID::'86cd1308-859c-4021-9066-fd56179e701c' CREATE VIEW Q_PROCESS_LOG_DATE( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform', "ui_mapping_text" = 'RG_Q_PROCESS_LOG.DI_ROW_ID', "ui_pasting" = 'RG_Q_PROCESS_LOG.DI_ROW_ID') ,
 PROCESS_DESC VARCHAR(500)  SET( "ui_mapping_text" = '((\'Process Completed at \' || to_char(sysdate(),\'MM-DD-YY HH24:MI:SS\')) || \'.\')', "ui_pasting" = '((\'Process Completed at \' || to_char(sysdate(),\'MM-DD-YY HH24:MI:SS\')) || \'.\')') ,
 JOBID INT  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId')  )
 AS
SELECT RG_Q_PROCESS_LOG.DI_ROW_ID, (('Process Completed at ' || to_char(sysdate(), 'MM-DD-YY HH24:MI:SS')) || '.'), $gJobId FROM RG_Q_PROCESS_LOG 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '45', "ui_acta_from_schema_0" = 'Q_PROCESS_LOG_DATE', "ui_display_name" = 'Q_PROCESS_LOG_3', "x" = '704', "y" = '-549')
GUID::'eb52258d-9623-4751-9257-7e528f71f0a8' CREATE VIEW Q_PROCESS_LOG_3( JOBID INT  SET( "ui_mapping_text" = 'Q_PROCESS_LOG_DATE.JOBID', "ui_pasting" = 'Q_PROCESS_LOG_DATE.JOBID') ,
 PROCESS_DESC VARCHAR(500)  SET( "ui_mapping_text" = 'Q_PROCESS_LOG_DATE.PROCESS_DESC', "ui_pasting" = 'Q_PROCESS_LOG_DATE.PROCESS_DESC') ,
 SEQ_COL INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2')  )
 AS
SELECT Q_PROCESS_LOG_DATE.JOBID, Q_PROCESS_LOG_DATE.PROCESS_DESC, 2 FROM Q_PROCESS_LOG_DATE 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '293', "Output_Width_Name" = '252', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '57', "ui_acta_from_schema_0" = 'Q_PROCESS_LOG_1', "ui_display_name" = 'Q_PROCESS_LOG_2', "x" = '893', "y" = '-27')
GUID::'ab703b61-920c-42bb-9bf6-5f1d19f21def' CREATE VIEW Q_PROCESS_LOG_2( JOBID INT  SET( "ui_mapping_text" = 'Q_PROCESS_LOG_1.JOBID', "ui_pasting" = 'Q_PROCESS_LOG_1.JOBID') ,
 PROCESS_DESC VARCHAR(500)  SET( "ui_mapping_text" = 'Q_PROCESS_LOG_1.PROCESS_DESC', "ui_pasting" = 'Q_PROCESS_LOG_1.PROCESS_DESC') ,
 SEQ_COL INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1')  )
 AS
SELECT Q_PROCESS_LOG_1.JOBID, Q_PROCESS_LOG_1.PROCESS_DESC, 1 FROM Q_PROCESS_LOG_1 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '187', "Output_Width_Name" = '273', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_PROCESS_LOG_T', "ui_display_name" = 'Q_PROCESS_LOG_1', "ui_where_text" = 'DDS_PROCESS_LOG_T.JOBID = $gJobId and DDS_PROCESS_LOG_T.DISPLAY_ORDER <> -11


', "x" = '425', "y" = '-97')
GUID::'0316fa03-951f-40e8-af24-7d9cbfa87133' CREATE VIEW Q_PROCESS_LOG_1( PROCESS_DESC VARCHAR(500)  SET( "ui_mapping_text" = 'DDS_PROCESS_LOG_T.PROCESS_DESC', "ui_pasting" = 'DDS_PROCESS_LOG_T.PROCESS_DESC') ,
 "ORDER" INT  SET( "ui_mapping_text" = 'DDS_PROCESS_LOG_T.DISPLAY_ORDER', "ui_pasting" = 'DDS_PROCESS_LOG_T.DISPLAY_ORDER') ,
 JOBID INT  SET( "ui_mapping_text" = 'DDS_PROCESS_LOG_T.JOBID', "ui_pasting" = 'DDS_PROCESS_LOG_T.JOBID')  )
 AS
SELECT DISTINCT DDS_PROCESS_LOG_T.PROCESS_DESC, DDS_PROCESS_LOG_T.DISPLAY_ORDER, DDS_PROCESS_LOG_T.JOBID FROM DDS_PROCESS_LOG_T  WHERE ((DDS_PROCESS_LOG_T.JOBID = $gJobId) AND
   (DDS_PROCESS_LOG_T.DISPLAY_ORDER != -11)) ORDER BY DDS_PROCESS_LOG_T.DISPLAY_ORDER ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>375</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gFileName"(DDS_PROCESS_LOG_S3)', "x" = '1978', "y" = '-663')
GUID::'77b5ba63-5759-4837-bfdc-b48b078a8274' LOAD FILE DDS_PROCESS_LOG_S3."$gFileName" INPUT(Q_EXPORT_PROCESS_LOG)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:55 2017', "ActaValue_3" = 'Mon Sep 18 13:16:55 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_ADJUSTER::'db74f885-a8c8-4d60-b1aa-b243d250ad37'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '227', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>332</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '67', "ui_acta_from_schema_0" = 'DDS_Adjuster_csv', "ui_display_name" = 'Q_READ_Adjuster', "x" = '1018', "y" = '-722')
GUID::'0daae4ad-38d6-4299-8d6c-004b97d70daa' CREATE VIEW Q_READ_Adjuster( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1') ,
 RECORD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.RECORD_TYPE)))') ,
 CLAIM_ID VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.CLAIM_ID)))') ,
 ADJ_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.ADJ_DATE)))') ,
 ADJ_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.ADJ_TIME)))') ,
 FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.FIRST_NAME)))') ,
 LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.LAST_NAME)))') ,
 TEXT LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Adjuster_csv.TEXT))') ,
 ADJUSTER_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.ADJUSTER_TYPE)))') ,
 NAME_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.NAME_TYPE)))')  )
 AS
SELECT $gJobId,  NULL , 1, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.RECORD_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.CLAIM_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.ADJ_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.ADJ_TIME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.LAST_NAME))), varchar_to_long(f_dds_replace_quote(DDS_Adjuster_csv.TEXT)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.ADJUSTER_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv.NAME_TYPE))) FROM DDS_Adjuster_csv 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '282', "Output_Width_Type" = '91', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '67', "ui_display_name" = 'KG_DA_ROW_ID_ADJ', "x" = '1597', "y" = '-722')
GUID::'1b10be81-18f7-4f72-be58-c5b2f7ec986b' CALL TRANSFORM Key_Generation() INPUT(Q_READ_Adjuster) OUTPUT(KG_DA_ROW_ID_ADJ()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_ADJUSTER', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '67', "x" = '2555', "y" = '-719')
GUID::'f108f237-1ee2-47dc-9bce-fea47b8937eb' LOAD TABLE DS_RMX_STAGING.DBO.DDS_ADJUSTER INPUT(MO_READ_Adjuster)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>357</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '67', "ui_display_name" = 'MO_READ_Adjuster', "x" = '2078', "y" = '-722')
GUID::'36085204-c934-4b85-bc11-ecf672f04117' CALL TRANSFORM Map_Operation() INPUT(KG_DA_ROW_ID_ADJ) OUTPUT(MO_READ_Adjuster()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>322</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '41', "ui_display_name" = '"$gAdjusters_ImportFile_Name"(DDS_Adjuster_csv)', "x" = '756', "y" = '-672')
GUID::'89b1a981-4880-416e-84ac-b081c1b63223' READ FILE DDS_Adjuster_csv."$gAdjusters_ImportFile_Name" OUTPUT(DDS_Adjuster_csv)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "root_dir" = '$gFileDirectory', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:55 2017', "ActaValue_3" = 'Mon Sep 25 18:30:47 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_ADJUSTER_S3::'95eee548-4278-4f16-8839-b0790e3796e9'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>357</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '67', "ui_display_name" = 'MO_READ_Adjuster', "x" = '1794', "y" = '-553')
GUID::'512bed4a-7179-4845-9dc6-ac45ff140af0' CALL TRANSFORM Map_Operation() INPUT(KG_DA_ROW_ID_ADJ) OUTPUT(MO_READ_Adjuster()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '67', "x" = '2271', "y" = '-550')
GUID::'dc5274d1-3a95-41f7-b0ae-1cb21ff98377' LOAD TABLE DS_RMX_STAGING.DBO.DDS_ADJUSTER INPUT(MO_READ_Adjuster)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '282', "Output_Width_Type" = '91', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>391</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '67', "ui_display_name" = 'KG_DA_ROW_ID_ADJ', "x" = '1313', "y" = '-553')
GUID::'d00e11df-fa68-48e5-a81a-083cc1b4b066' CALL TRANSFORM Key_Generation() INPUT(Q_READ_Adjuster) OUTPUT(KG_DA_ROW_ID_ADJ()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_ADJUSTER', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '227', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>332</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '67', "ui_acta_from_schema_0" = 'DDS_Adjuster_csv_S3', "ui_display_name" = 'Q_READ_Adjuster', "x" = '734', "y" = '-553')
GUID::'cf43cfe0-dde9-4af7-99a0-6f9f1b2280b3' CREATE VIEW Q_READ_Adjuster( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL', "ui_pasting" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 RECORD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.RECORD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Adjuster_csv.RECORD_TYPE)))') ,
 CLAIM_ID VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.CLAIM_ID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Adjuster_csv.CLAIM_ID)))') ,
 ADJ_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.ADJ_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Adjuster_csv.ADJ_DATE)))') ,
 ADJ_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.ADJ_TIME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Adjuster_csv.ADJ_TIME)))') ,
 FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.FIRST_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Adjuster_csv.FIRST_NAME)))') ,
 LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.LAST_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Adjuster_csv.LAST_NAME)))') ,
 TEXT LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Adjuster_csv_S3.TEXT))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(Adjuster_csv.TEXT))') ,
 ADJUSTER_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.ADJUSTER_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Adjuster_csv.ADJUSTER_TYPE)))') ,
 NAME_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.NAME_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Adjuster_csv.NAME_TYPE)))')  )
 AS
SELECT $gJobId,  NULL , 1, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.RECORD_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.CLAIM_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.ADJ_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.ADJ_TIME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.LAST_NAME))), varchar_to_long(f_dds_replace_quote(DDS_Adjuster_csv_S3.TEXT)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.ADJUSTER_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Adjuster_csv_S3.NAME_TYPE))) FROM DDS_Adjuster_csv_S3 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>322</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gAdjusters_ImportFile_Name"(DDS_Adjuster_csv_S3)', "x" = '203', "y" = '-663')
GUID::'89d18588-7021-48e8-bca3-f956736276ad' READ FILE DDS_Adjuster_csv_S3."$gAdjusters_ImportFile_Name" OUTPUT(DDS_Adjuster_csv_S3)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'job_server', "name" = 'UNNAMED', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Apr 17 07:18:13 2020', "ActaValue_3" = 'Tue Apr 28 15:31:18 2020', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_CLAIMS::'8cbeba29-2647-4556-93a2-b98422589359'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '56', "ui_display_name" = '"$gClaims_ImportFile_Name"(DDS_CLAIM_UPTO707)', "x" = '63', "y" = '-309')
GUID::'85e64707-8e2d-4a08-aaef-1c2b1da3e6bc' READ FILE DDS_CLAIM_UPTO707."$gClaims_ImportFile_Name" OUTPUT(DDS_CLAIM_UPTO707)
SET("adaptable" = 'yes', "cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'DDS_CLAIM_UPTO707', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'yes', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "root_dir" = '$gFileDirectory', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '33', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '311', "Input_Width_Type" = '262', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '730', "Output_Width_Name" = '267', "Output_Width_Type" = '119', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>385</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'DDS_CLAIM_UPTO707', "ui_display_name" = 'Q_READ_CLAIMSFILE', "x" = '758', "y" = '-780')
GUID::'8fe1f06d-5ec7-4333-9e25-d7e72c738724' CREATE VIEW Q_READ_CLAIMSFILE( DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'key_generation(DS_RMX_STAGING.DBO.DDS_CLAIM, \'DA_ROW_ID\', 1)') ,
 JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1') ,
 RECORD_TYPE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RECORD_TYPE)))') ,
 CLAIM_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_NUMBER)))') ,
 CLAIM_SUFFIX VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_SUFFIX)))') ,
 CLAIM_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_TYPE)))') ,
 DIVISION VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIVISION)))') ,
 LOCATION VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LOCATION)))') ,
 DEPARTMENT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPARTMENT)))') ,
 COMPANY VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COMPANY)))') ,
 COUNTRY VARCHAR(20)  SET( "Content_Type" = 'COUNTRY', "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COUNTRY)))') ,
 DIVISION_DESC VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIVISION_DESC)))') ,
 LOCATION_DESC VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LOCATION_DESC)))') ,
 DEPARTMENT_DESC VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPARTMENT_DESC)))') ,
 COMPANY_DESC VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COMPANY_DESC)))') ,
 TIME_OF_CLAIM VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.TIME_OF_CLAIM)))') ,
 DATE_OF_LOSS VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_LOSS)))') ,
 DATE_REPORTED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_REPORTED)))') ,
 DATE_OF_CLAIM VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_CLAIM)))') ,
 DATE_CLOSED VARCHAR(14)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_CLOSED)))') ,
 DATE_REOPENED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_REOPENED)))') ,
 CLAIM_STATUS VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_STATUS)))') ,
 RESERVE_A_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_A_OPENING)))') ,
 RESERVE_A_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_A_CURRENT)))') ,
 RESERVE_A_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_A_DATE)))') ,
 PAID_A_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_A_TOTAL)))') ,
 COLLECTION_A_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_A_TOTAL)))') ,
 RESERVE_B_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_B_OPENING)))') ,
 RESERVE_B_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_B_CURRENT)))') ,
 RESERVE_B_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_B_DATE)))') ,
 PAID_B_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_B_TOTAL)))') ,
 COLLECTION_B_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_B_TOTAL)))') ,
 RESERVE_C_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_C_OPENING)))') ,
 RESERVE_C_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_C_CURRENT)))') ,
 RESERVE_C_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_C_DATE)))') ,
 PAID_C_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_C_TOTAL)))') ,
 COLLECTION_C_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_C_TOTAL)))') ,
 RESERVE_D_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_D_OPENING)))') ,
 RESERVE_D_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_D_CURRENT)))') ,
 RESERVE_D_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_D_DATE)))') ,
 PAID_D_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_D_TOTAL)))') ,
 COLLECTION_D_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_D_TOTAL)))') ,
 CAUSE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CAUSE_CODE)))') ,
 CLAIMANT_LASTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_LASTNAME)))') ,
 CLAIMANT_FIRSTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_FIRSTNAME)))') ,
 CLAIMANT_SSN VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_SSN)))') ,
 CLAIMANT_ADDRESS1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS  ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS ,1,\'|\' )))') ,
 CLAIMANT_ADDRESS2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS  ,2,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS ,2,\'|\' )))') ,
 CLAIMANT_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_CITY)))') ,
 CLAIMANT_STATE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_STATE)))') ,
 CLAIMANT_ZIP VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_ZIP)))') ,
 CLAIMANT_SEX VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_SEX)))') ,
 CLAIMANT_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_BIRTH_DT)))') ,
 CLAIMANT_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_PHONE)))') ,
 CLAIMANT_COMMENT LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_CLAIM_UPTO707.CLAIMANT_COMMENT))') ,
 DEF_LASTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_LASTNAME)))') ,
 DEF_FIRSTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_FIRSTNAME)))') ,
 DEF_ADDRESS VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_ADDRESS)))') ,
 DEF_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_CITY)))') ,
 DEF_STATE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_STATE)))') ,
 DEF_ZIP VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_ZIP)))') ,
 DEF_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_PHONE)))') ,
 DEF_COMMENT LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707.DEF_COMMENT))') ,
 CLOSURE_METHOD VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLOSURE_METHOD)))') ,
 DESCRIPTION LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( f_dds_replace_quote(DDS_CLAIM_UPTO707.DESCRIPTION))') ,
 SERVICE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SERVICE)))') ,
 ICD10_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.ICD10,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.ICD10,1,\'|\' )))') ,
 ICD10_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.ICD10,2,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.ICD10,2,\'|\' )))') ,
 ICD10_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.ICD10,3,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.ICD10,3,\'|\' )))') ,
 ICD10_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.ICD10,4,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.ICD10,4,\'|\' )))') ,
 ICD10_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.ICD10,5,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.ICD10,5,\'|\' )))') ,
 DIAGNOSIS_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,1,\'|\' )))') ,
 DIAGNOSIS_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,2,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,2,\'|\' )))') ,
 DIAGNOSIS_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,3,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,3,\'|\' )))') ,
 DIAGNOSIS_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,4,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,4,\'|\' )))') ,
 DIAGNOSIS_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,5,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,5,\'|\' )))') ,
 POLICY_NUMBER VARCHAR(40)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_NUMBER)))') ,
 POLICY_EFFECT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_EFFECT_DATE)))') ,
 POLICY_EXPIRE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_EXPIRE_DATE)))') ,
 SUIT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SUIT_DATE)))') ,
 CASE_NUMBER VARCHAR(22)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CASE_NUMBER)))') ,
 EVENT_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EVENT_NUMBER)))') ,
 COMMENTS LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( f_dds_replace_quote(DDS_CLAIM_UPTO707.COMMENTS))') ,
 ILLNESS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ILLNESS_CODE)))') ,
 INJURY_CODE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,1,\'|\' )))') ,
 INJURY_CODE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,2,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,2,\'|\' )))') ,
 INJURY_CODE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,3,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,3,\'|\' )))') ,
 INJURY_CODE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,4,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,4,\'|\' )))') ,
 INJURY_CODE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,5,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,5,\'|\' )))') ,
 BODY_PART_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,1,\'|\' )))') ,
 BODY_PART_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,2,\'|\') IS NULL, NULL,word_ext( DDS_CLAIM_UPTO707.BODY_PART  ,2,\'|\' )))') ,
 BODY_PART_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,3,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,3,\'|\' )))') ,
 BODY_PART_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,4,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,4,\'|\' )))') ,
 BODY_PART_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,5,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,5,\'|\' )))') ,
 EMP_DEPARTMENT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMP_DEPARTMENT)))') ,
 OCCUPATION VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OCCUPATION)))') ,
 DATE_OF_BIRTH VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_BIRTH)))') ,
 DATE_OF_HIRE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_HIRE)))') ,
 DATE_OF_DEATH VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_DEATH)))') ,
 OSHA_RECORDABLE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OSHA_RECORDABLE)))') ,
 EMPLOYEE_SEX VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYEE_SEX)))') ,
 WEEKLY_WAGE_RATE VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.WEEKLY_WAGE_RATE)))') ,
 HOURLY_WAGE_RATE VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.HOURLY_WAGE_RATE)))') ,
 WEEKLY_HOURS VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.WEEKLY_HOURS)))') ,
 NCCI_CLASS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NCCI_CLASS_CODE)))') ,
 ACCIDENT_STATE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ACCIDENT_STATE)))') ,
 MARITAL_STATUS VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MARITAL_STATUS)))') ,
 DEPENDENT_LNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPENDENT_LNAME)))') ,
 DEPENDENT_FNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPENDENT_FNAME)))') ,
 DEPENDENT_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPENDENT_BIRTH_DT)))') ,
 LICENSE_NUMBER VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_NUMBER)))') ,
 LICENSE_EXPIR_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_EXPIR_DATE)))') ,
 LICENSE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_TYPE)))') ,
 LICENSE_RESTRICT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_RESTRICT)))') ,
 RETURN_WORK_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RETURN_WORK_DATE)))') ,
 ACTIVE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ACTIVE_FLAG)))') ,
 EMPLOYER_SIC_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYER_SIC_CODE)))') ,
 EMPLOYER_PAYROLL_CLASS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYER_PAYROLL_CLASS_CODE)))') ,
 VEHICLE_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_ID)))') ,
 VEHICLE_YEAR VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_YEAR)))') ,
 VEHICLE_MAKE VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_MAKE)))') ,
 EMPLOYEE_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYEE_ID)))') ,
 VEHICLE_MODEL VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_MODEL)))') ,
 FILE_NUMBER VARCHAR(32)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.FILE_NUMBER)))') ,
 DATE_LAST_WORKED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_LAST_WORKED)))') ,
 CLAIMANT_MIDDLENAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_MIDDLENAME)))') ,
 ACCIDENT_DESC VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext( DDS_CLAIM_UPTO707.ACCIDENT_DESC)))') ,
 ACCIDENT_PREVENTABLE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext( DDS_CLAIM_UPTO707.ACCIDENT_PREVENTABLE)))') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707.USER_FIELD_A))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_O)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_P)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_Q)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_Y)))') ,
 USER_FIELD_Z VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_Z)))') ,
 PLAN_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PLAN_NAME)))') ,
 CLASS_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLASS_NAME)))') ,
 DISABIL_FROM_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DISABIL_FROM_DATE)))') ,
 DISABIL_TO_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DISABIL_TO_DATE)))') ,
 BENEFITS_START VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BENEFITS_START)))') ,
 BENEFITS_THROUGH VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BENEFITS_THROUGH)))') ,
 DIS_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIS_TYPE)))') ,
 BEN_CALC_PAY_START VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BEN_CALC_PAY_START)))') ,
 BEN_CALC_PAY_TO VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BEN_CALC_PAY_TO)))') ,
 FEDERAL_TAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.FEDERAL_TAX_FLAG)))') ,
 SOCIAL_SEC_TAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SOCIAL_SEC_TAX_FLAG)))') ,
 MEDICARE_TAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MEDICARE_TAX_FLAG)))') ,
 STATE_TAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.STATE_TAX_FLAG)))') ,
 STD_DISABIL_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.STD_DISABIL_TYPE)))') ,
 MONTHLY_RATE VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MONTHLY_RATE)))') ,
 ELIG_DIS_BEN_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ELIG_DIS_BEN_FLAG)))') ,
 DIS_OPTION_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIS_OPTION_CODE)))') ,
 PENSION_AMT VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PENSION_AMT)))') ,
 SS_AMT VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SS_AMT)))') ,
 OTHER_AMT VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OTHER_AMT)))') ,
 RESERVE_E_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_E_OPENING)))') ,
 RESERVE_E_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_E_CURRENT)))') ,
 RESERVE_E_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_E_DATE)))') ,
 PAID_E_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_E_TOTAL)))') ,
 COLLECTION_E_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_E_TOTAL)))') ,
 CLAIMANT_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_TYPE)))') ,
 OSHA_ACC_DESC VARCHAR(16)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OSHA_ACC_DESC)))') ,
 DATE_WORKED_LAST VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_WORKED_LAST)))') ,
 DATE_RETURNED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_RETURNED)))') ,
 STATE_DURATION VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.STATE_DURATION)))') ,
 DATE_FIRST_RESTRICT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_FIRST_RESTRICT)))') ,
 DATE_LAST_RESTRICT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_LAST_RESTRICT)))') ,
 PERCENT_DISABLED VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PERCENT_DISABLED)))') ,
 SETTLEMENT_METHOD VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SETTLEMENT_METHOD)))') ,
 MGND_CARE_ORG_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MGND_CARE_ORG_TYPE)))') ,
 DISPUTED_CASE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DISPUTED_CASE_FLAG)))') ,
 NCCI_LOSS_TYPE_LOSS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NCCI_LOSS_TYPE_LOSS_CODE)))') ,
 NCCI_LOSS_TYPE_RECOV_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NCCI_LOSS_TYPE_RECOV_CODE)))') ,
 TREATMENT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.TREATMENT_CODE)))') ,
 CLAIMANT_STATUS VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_STATUS)))') ,
 NAME_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NAME_TYPE)))') ,
 BENEFICIARY_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BENEFICIARY_CODE)))') ,
 INFO_REQ_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.INFO_REQ_DATE)))') ,
 PROOF_OF_LOSS_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PROOF_OF_LOSS_DATE)))') ,
 CLAIM_CAUSE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_CAUSE_CODE)))') ,
 DEF_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_BIRTH_DT)))') ,
 POLICY_LOB VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_LOB)))') ,
 CURR_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CURR_CODE)))') ,
 CLAIM_TYPE_DATE_CHANGED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_TYPE_DATE_CHANGED)))') ,
 REVIEW_STATUS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.REVIEW_STATUS_CODE)))') ,
 REVIEW_STATUS_DATE_CHANGED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.REVIEW_STATUS_DATE_CHANGED)))') ,
 REVIEW_REASON VARCHAR(2000)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.REVIEW_REASON)))') ,
 CLAIM_TYPE_REASON VARCHAR(2000)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_TYPE_REASON)))')  )
 AS
SELECT key_generation(DS_RMX_STAGING.DBO.DDS_CLAIM, 'DA_ROW_ID', 1) , $gJobId, 1, f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RECORD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_SUFFIX))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIVISION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LOCATION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPARTMENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COMPANY))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COUNTRY))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIVISION_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LOCATION_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPARTMENT_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COMPANY_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.TIME_OF_CLAIM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_LOSS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_REPORTED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_CLAIM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_CLOSED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_REOPENED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_STATUS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_A_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_A_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_A_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_A_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_A_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_B_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_B_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_B_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_B_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_B_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_C_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_C_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_C_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_C_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_C_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_D_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_D_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_D_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_D_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_D_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CAUSE_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_LASTNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_FIRSTNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_SSN))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS, 2, '|'))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_CITY))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_STATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_ZIP))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_SEX))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_BIRTH_DT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_PHONE))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707.CLAIMANT_COMMENT)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_LASTNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_FIRSTNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_ADDRESS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_CITY))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_STATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_ZIP))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_PHONE))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707.DEF_COMMENT)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLOSURE_METHOD))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707.DESCRIPTION)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SERVICE))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.ICD10, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.ICD10, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.ICD10, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.ICD10, 2, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.ICD10, 3, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.ICD10, 3, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.ICD10, 4, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.ICD10, 4, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.ICD10, 5, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.ICD10, 5, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 2, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 3, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 3, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 4, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 4, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 5, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS, 5, '|'))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_EFFECT_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_EXPIRE_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SUIT_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CASE_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EVENT_NUMBER))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707.COMMENTS)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ILLNESS_CODE))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 2, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 3, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 3, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 4, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 4, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 5, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.INJURY_CODE, 5, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.BODY_PART, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.BODY_PART, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.BODY_PART, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.BODY_PART, 2, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.BODY_PART, 3, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.BODY_PART, 3, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.BODY_PART, 4, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.BODY_PART, 4, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707.BODY_PART, 5, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707.BODY_PART, 5, '|'))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMP_DEPARTMENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OCCUPATION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_BIRTH))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_HIRE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_DEATH))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OSHA_RECORDABLE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYEE_SEX))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.WEEKLY_WAGE_RATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.HOURLY_WAGE_RATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.WEEKLY_HOURS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NCCI_CLASS_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ACCIDENT_STATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MARITAL_STATUS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPENDENT_LNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPENDENT_FNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPENDENT_BIRTH_DT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_EXPIR_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_RESTRICT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RETURN_WORK_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ACTIVE_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYER_SIC_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYER_PAYROLL_CLASS_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_ID))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_YEAR))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_MAKE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYEE_ID))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_MODEL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.FILE_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_LAST_WORKED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_MIDDLENAME))), f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext(DDS_CLAIM_UPTO707.ACCIDENT_DESC))), f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext(DDS_CLAIM_UPTO707.ACCIDENT_PREVENTABLE))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707.USER_FIELD_A)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_Y))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_Z))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PLAN_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLASS_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DISABIL_FROM_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DISABIL_TO_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BENEFITS_START))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BENEFITS_THROUGH))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIS_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BEN_CALC_PAY_START))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BEN_CALC_PAY_TO))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.FEDERAL_TAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SOCIAL_SEC_TAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MEDICARE_TAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.STATE_TAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.STD_DISABIL_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MONTHLY_RATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ELIG_DIS_BEN_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIS_OPTION_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PENSION_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SS_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OTHER_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_E_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_E_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_E_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_E_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_E_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OSHA_ACC_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_WORKED_LAST))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_RETURNED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.STATE_DURATION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_FIRST_RESTRICT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_LAST_RESTRICT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PERCENT_DISABLED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SETTLEMENT_METHOD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MGND_CARE_ORG_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DISPUTED_CASE_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NCCI_LOSS_TYPE_LOSS_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NCCI_LOSS_TYPE_RECOV_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.TREATMENT_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_STATUS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NAME_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BENEFICIARY_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.INFO_REQ_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PROOF_OF_LOSS_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_CAUSE_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_BIRTH_DT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_LOB))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CURR_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_TYPE_DATE_CHANGED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.REVIEW_STATUS_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.REVIEW_STATUS_DATE_CHANGED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.REVIEW_REASON))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_TYPE_REASON))) FROM DDS_CLAIM_UPTO707 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '267', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "x" = '1589', "y" = '-438')
GUID::'5c56f758-33d5-49b5-8d56-1f4716624481' LOAD TABLE DS_RMX_STAGING.DBO.DDS_CLAIM INPUT(Q_READ_CLAIMSFILE)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_fl_object_name></loader_fl_object_name>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_fl_object_name></loader_fl_object_name>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_fl_object_name></loader_fl_object_name>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Apr 17 07:18:13 2020', "ActaValue_3" = 'Mon Sep 25 19:04:38 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_CLAIMS_S3::'5e8a719f-86b0-4bf1-8165-22454bcda3b6'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '267', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "x" = '1526', "y" = '-129')
GUID::'7aad7299-e874-48e9-be17-28f9a65990ca' LOAD TABLE DS_RMX_STAGING.DBO.DDS_CLAIM INPUT(Q_READ_CLAIMSFILE)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_fl_object_name></loader_fl_object_name>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_fl_object_name></loader_fl_object_name>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_fl_object_name></loader_fl_object_name>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '311', "Input_Width_Type" = '262', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '730', "Output_Width_Name" = '267', "Output_Width_Type" = '119', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>385</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'DDS_CLAIM_UPTO707_S3', "ui_display_name" = 'Q_READ_CLAIMSFILE', "x" = '695', "y" = '-471')
GUID::'23cc7311-5b06-49d1-a88b-52c4a351d968' CREATE VIEW Q_READ_CLAIMSFILE( DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'key_generation(DS_RMX_STAGING.DBO.DDS_CLAIM, \'DA_ROW_ID\', 1)', "ui_pasting" = 'key_generation(DS_RMX_STAGING.DBO.DDS_CLAIM, \'DA_ROW_ID\', 1)') ,
 JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 RECORD_TYPE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RECORD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RECORD_TYPE)))') ,
 CLAIM_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_NUMBER)))') ,
 CLAIM_SUFFIX VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_SUFFIX)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_SUFFIX)))') ,
 CLAIM_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_TYPE)))') ,
 DIVISION VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DIVISION)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIVISION)))') ,
 LOCATION VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LOCATION)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LOCATION)))') ,
 DEPARTMENT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPARTMENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPARTMENT)))') ,
 COMPANY VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COMPANY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COMPANY)))') ,
 COUNTRY VARCHAR(20)  SET( "Content_Type" = 'COUNTRY', "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COUNTRY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COUNTRY)))') ,
 DIVISION_DESC VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DIVISION_DESC)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIVISION_DESC)))') ,
 LOCATION_DESC VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LOCATION_DESC)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LOCATION_DESC)))') ,
 DEPARTMENT_DESC VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPARTMENT_DESC)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPARTMENT_DESC)))') ,
 COMPANY_DESC VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COMPANY_DESC)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COMPANY_DESC)))') ,
 TIME_OF_CLAIM VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.TIME_OF_CLAIM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.TIME_OF_CLAIM)))') ,
 DATE_OF_LOSS VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_LOSS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_LOSS)))') ,
 DATE_REPORTED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_REPORTED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_REPORTED)))') ,
 DATE_OF_CLAIM VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_CLAIM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_CLAIM)))') ,
 DATE_CLOSED VARCHAR(14)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_CLOSED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_CLOSED)))') ,
 DATE_REOPENED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_REOPENED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_REOPENED)))') ,
 CLAIM_STATUS VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_STATUS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_STATUS)))') ,
 RESERVE_A_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_A_OPENING)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_A_OPENING)))') ,
 RESERVE_A_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_A_CURRENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_A_CURRENT)))') ,
 RESERVE_A_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_A_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_A_DATE)))') ,
 PAID_A_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_A_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_A_TOTAL)))') ,
 COLLECTION_A_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_A_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_A_TOTAL)))') ,
 RESERVE_B_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_B_OPENING)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_B_OPENING)))') ,
 RESERVE_B_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_B_CURRENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_B_CURRENT)))') ,
 RESERVE_B_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_B_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_B_DATE)))') ,
 PAID_B_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_B_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_B_TOTAL)))') ,
 COLLECTION_B_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_B_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_B_TOTAL)))') ,
 RESERVE_C_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_C_OPENING)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_C_OPENING)))') ,
 RESERVE_C_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_C_CURRENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_C_CURRENT)))') ,
 RESERVE_C_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_C_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_C_DATE)))') ,
 PAID_C_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_C_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_C_TOTAL)))') ,
 COLLECTION_C_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_C_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_C_TOTAL)))') ,
 RESERVE_D_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_D_OPENING)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_D_OPENING)))') ,
 RESERVE_D_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_D_CURRENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_D_CURRENT)))') ,
 RESERVE_D_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_D_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_D_DATE)))') ,
 PAID_D_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_D_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_D_TOTAL)))') ,
 COLLECTION_D_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_D_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_D_TOTAL)))') ,
 CAUSE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CAUSE_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CAUSE_CODE)))') ,
 CLAIMANT_LASTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_LASTNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_LASTNAME)))') ,
 CLAIMANT_FIRSTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_FIRSTNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_FIRSTNAME)))') ,
 CLAIMANT_SSN VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_SSN)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_SSN)))') ,
 CLAIMANT_ADDRESS1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.CLAIMANT_ADDRESS  ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.CLAIMANT_ADDRESS ,1,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS  ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS ,1,\'|\' )))') ,
 CLAIMANT_ADDRESS2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.CLAIMANT_ADDRESS  ,2,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.CLAIMANT_ADDRESS ,2,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS  ,2,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.CLAIMANT_ADDRESS ,2,\'|\' )))') ,
 CLAIMANT_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_CITY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_CITY)))') ,
 CLAIMANT_STATE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_STATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_STATE)))') ,
 CLAIMANT_ZIP VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_ZIP)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_ZIP)))') ,
 CLAIMANT_SEX VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_SEX)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_SEX)))') ,
 CLAIMANT_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_BIRTH_DT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_BIRTH_DT)))') ,
 CLAIMANT_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_PHONE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_PHONE)))') ,
 CLAIMANT_COMMENT LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.CLAIMANT_COMMENT))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_CLAIM_UPTO707.CLAIMANT_COMMENT))') ,
 DEF_LASTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_LASTNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_LASTNAME)))') ,
 DEF_FIRSTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_FIRSTNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_FIRSTNAME)))') ,
 DEF_ADDRESS VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_ADDRESS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_ADDRESS)))') ,
 DEF_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_CITY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_CITY)))') ,
 DEF_STATE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_STATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_STATE)))') ,
 DEF_ZIP VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_ZIP)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_ZIP)))') ,
 DEF_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_PHONE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_PHONE)))') ,
 DEF_COMMENT LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.DEF_COMMENT))', "ui_pasting" = 'varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707.DEF_COMMENT))') ,
 CLOSURE_METHOD VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLOSURE_METHOD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLOSURE_METHOD)))') ,
 DESCRIPTION LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.DESCRIPTION))', "ui_pasting" = 'varchar_to_long( f_dds_replace_quote(DDS_CLAIM_UPTO707.DESCRIPTION))') ,
 SERVICE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SERVICE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SERVICE)))') ,
 ICD10_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.ICD10 ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.ICD10,1,\'|\' )))') ,
 ICD10_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707_S3.ICD10,2,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707_S3.ICD10,2,\'|\' )))') ,
 ICD10_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707_S3.ICD10,3,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707_S3.ICD10,3,\'|\' )))') ,
 ICD10_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707_S3.ICD10,4,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707_S3.ICD10,4,\'|\' )))') ,
 ICD10_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.ICD10,5,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707_S3.ICD10,5,\'|\' )))') ,
 DIAGNOSIS_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707_S3.DIAGNOSIS,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS,1,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,1,\'|\' )))') ,
 DIAGNOSIS_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707_S3.DIAGNOSIS,2,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS,2,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,2,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,2,\'|\' )))') ,
 DIAGNOSIS_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707_S3.DIAGNOSIS,3,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS,3,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,3,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,3,\'|\' )))') ,
 DIAGNOSIS_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707_S3.DIAGNOSIS,4,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS,4,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,4,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,4,\'|\' )))') ,
 DIAGNOSIS_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707_S3.DIAGNOSIS,5,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS,5,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext( DDS_CLAIM_UPTO707.DIAGNOSIS,5,\'|\') IS NULL, NULL, word_ext(DDS_CLAIM_UPTO707.DIAGNOSIS,5,\'|\' )))') ,
 POLICY_NUMBER VARCHAR(40)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.POLICY_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_NUMBER)))') ,
 POLICY_EFFECT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.POLICY_EFFECT_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_EFFECT_DATE)))') ,
 POLICY_EXPIRE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.POLICY_EXPIRE_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_EXPIRE_DATE)))') ,
 SUIT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SUIT_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SUIT_DATE)))') ,
 CASE_NUMBER VARCHAR(22)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CASE_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CASE_NUMBER)))') ,
 EVENT_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EVENT_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EVENT_NUMBER)))') ,
 COMMENTS LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.COMMENTS))', "ui_pasting" = 'varchar_to_long( f_dds_replace_quote(DDS_CLAIM_UPTO707.COMMENTS))') ,
 ILLNESS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.ILLNESS_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ILLNESS_CODE)))') ,
 INJURY_CODE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,1,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,1,\'|\' )))') ,
 INJURY_CODE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,2,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,2,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,2,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,2,\'|\' )))') ,
 INJURY_CODE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,3,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,3,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,3,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,3,\'|\' )))') ,
 INJURY_CODE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,4,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,4,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,4,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,4,\'|\' )))') ,
 INJURY_CODE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,5,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE ,5,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,5,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.INJURY_CODE ,5,\'|\' )))') ,
 BODY_PART_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART  ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART  ,1,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,1,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,1,\'|\' )))') ,
 BODY_PART_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART  ,2,\'|\') IS NULL, NULL,word_ext( DDS_CLAIM_UPTO707_S3.BODY_PART  ,2,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,2,\'|\') IS NULL, NULL,word_ext( DDS_CLAIM_UPTO707.BODY_PART  ,2,\'|\' )))') ,
 BODY_PART_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART  ,3,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART  ,3,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,3,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,3,\'|\' )))') ,
 BODY_PART_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART  ,4,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART  ,4,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,4,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,4,\'|\' )))') ,
 BODY_PART_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART  ,5,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART  ,5,\'|\' )))', "ui_pasting" = 'f_dds_replace_quote(IFTHENELSE(word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,5,\'|\') IS NULL, NULL,word_ext(DDS_CLAIM_UPTO707.BODY_PART  ,5,\'|\' )))') ,
 EMP_DEPARTMENT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMP_DEPARTMENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMP_DEPARTMENT)))') ,
 OCCUPATION VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.OCCUPATION)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OCCUPATION)))') ,
 DATE_OF_BIRTH VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_BIRTH)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_BIRTH)))') ,
 DATE_OF_HIRE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_HIRE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_HIRE)))') ,
 DATE_OF_DEATH VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_DEATH)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_OF_DEATH)))') ,
 OSHA_RECORDABLE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.OSHA_RECORDABLE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OSHA_RECORDABLE)))') ,
 EMPLOYEE_SEX VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMPLOYEE_SEX)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYEE_SEX)))') ,
 WEEKLY_WAGE_RATE VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.WEEKLY_WAGE_RATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.WEEKLY_WAGE_RATE)))') ,
 HOURLY_WAGE_RATE VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.HOURLY_WAGE_RATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.HOURLY_WAGE_RATE)))') ,
 WEEKLY_HOURS VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.WEEKLY_HOURS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.WEEKLY_HOURS)))') ,
 NCCI_CLASS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.NCCI_CLASS_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NCCI_CLASS_CODE)))') ,
 ACCIDENT_STATE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.ACCIDENT_STATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ACCIDENT_STATE)))') ,
 MARITAL_STATUS VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.MARITAL_STATUS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MARITAL_STATUS)))') ,
 DEPENDENT_LNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPENDENT_LNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPENDENT_LNAME)))') ,
 DEPENDENT_FNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPENDENT_FNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPENDENT_FNAME)))') ,
 DEPENDENT_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPENDENT_BIRTH_DT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEPENDENT_BIRTH_DT)))') ,
 LICENSE_NUMBER VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LICENSE_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_NUMBER)))') ,
 LICENSE_EXPIR_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LICENSE_EXPIR_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_EXPIR_DATE)))') ,
 LICENSE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LICENSE_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_TYPE)))') ,
 LICENSE_RESTRICT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LICENSE_RESTRICT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.LICENSE_RESTRICT)))') ,
 RETURN_WORK_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RETURN_WORK_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RETURN_WORK_DATE)))') ,
 ACTIVE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.ACTIVE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ACTIVE_FLAG)))') ,
 EMPLOYER_SIC_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMPLOYER_SIC_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYER_SIC_CODE)))') ,
 EMPLOYER_PAYROLL_CLASS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMPLOYER_PAYROLL_CLASS_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYER_PAYROLL_CLASS_CODE)))') ,
 VEHICLE_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.VEHICLE_ID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_ID)))') ,
 VEHICLE_YEAR VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.VEHICLE_YEAR)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_YEAR)))') ,
 VEHICLE_MAKE VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.VEHICLE_MAKE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_MAKE)))') ,
 EMPLOYEE_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMPLOYEE_ID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.EMPLOYEE_ID)))') ,
 VEHICLE_MODEL VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.VEHICLE_MODEL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.VEHICLE_MODEL)))') ,
 FILE_NUMBER VARCHAR(32)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.FILE_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.FILE_NUMBER)))') ,
 DATE_LAST_WORKED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_LAST_WORKED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_LAST_WORKED)))') ,
 CLAIMANT_MIDDLENAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_MIDDLENAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_MIDDLENAME)))') ,
 ACCIDENT_DESC VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext( DDS_CLAIM_UPTO707_S3.ACCIDENT_DESC)))', "ui_pasting" = 'f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext( DDS_CLAIM_UPTO707.ACCIDENT_DESC)))') ,
 ACCIDENT_PREVENTABLE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext( DDS_CLAIM_UPTO707_S3.ACCIDENT_PREVENTABLE)))', "ui_pasting" = 'f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext( DDS_CLAIM_UPTO707.ACCIDENT_PREVENTABLE)))') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.USER_FIELD_A))', "ui_pasting" = 'varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707.USER_FIELD_A))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_B)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_C)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_D)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_E)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_F)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_G)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_H)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_I)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_J)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_K)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_L)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_M)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_N)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_O)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_O)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_P)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_P)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_Q)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_Q)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_R)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_S)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_T)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_U)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_V)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_W)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_X)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_Y)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_Y)))') ,
 USER_FIELD_Z VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_Z)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.USER_FIELD_Z)))') ,
 PLAN_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PLAN_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PLAN_NAME)))') ,
 CLASS_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLASS_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLASS_NAME)))') ,
 DISABIL_FROM_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DISABIL_FROM_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DISABIL_FROM_DATE)))') ,
 DISABIL_TO_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DISABIL_TO_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DISABIL_TO_DATE)))') ,
 BENEFITS_START VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BENEFITS_START)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BENEFITS_START)))') ,
 BENEFITS_THROUGH VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BENEFITS_THROUGH)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BENEFITS_THROUGH)))') ,
 DIS_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DIS_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIS_TYPE)))') ,
 BEN_CALC_PAY_START VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BEN_CALC_PAY_START)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BEN_CALC_PAY_START)))') ,
 BEN_CALC_PAY_TO VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BEN_CALC_PAY_TO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BEN_CALC_PAY_TO)))') ,
 FEDERAL_TAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.FEDERAL_TAX_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.FEDERAL_TAX_FLAG)))') ,
 SOCIAL_SEC_TAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SOCIAL_SEC_TAX_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SOCIAL_SEC_TAX_FLAG)))') ,
 MEDICARE_TAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.MEDICARE_TAX_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MEDICARE_TAX_FLAG)))') ,
 STATE_TAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.STATE_TAX_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.STATE_TAX_FLAG)))') ,
 STD_DISABIL_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.STD_DISABIL_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.STD_DISABIL_TYPE)))') ,
 MONTHLY_RATE VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.MONTHLY_RATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MONTHLY_RATE)))') ,
 ELIG_DIS_BEN_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.ELIG_DIS_BEN_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.ELIG_DIS_BEN_FLAG)))') ,
 DIS_OPTION_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DIS_OPTION_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DIS_OPTION_CODE)))') ,
 PENSION_AMT VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PENSION_AMT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PENSION_AMT)))') ,
 SS_AMT VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SS_AMT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SS_AMT)))') ,
 OTHER_AMT VARCHAR(11)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.OTHER_AMT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OTHER_AMT)))') ,
 RESERVE_E_OPENING VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_E_OPENING)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_E_OPENING)))') ,
 RESERVE_E_CURRENT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_E_CURRENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_E_CURRENT)))') ,
 RESERVE_E_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_E_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.RESERVE_E_DATE)))') ,
 PAID_E_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_E_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PAID_E_TOTAL)))') ,
 COLLECTION_E_TOTAL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_E_TOTAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.COLLECTION_E_TOTAL)))') ,
 CLAIMANT_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_TYPE)))') ,
 OSHA_ACC_DESC VARCHAR(16)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.OSHA_ACC_DESC)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.OSHA_ACC_DESC)))') ,
 DATE_WORKED_LAST VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_WORKED_LAST)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_WORKED_LAST)))') ,
 DATE_RETURNED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_RETURNED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_RETURNED)))') ,
 STATE_DURATION VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.STATE_DURATION)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.STATE_DURATION)))') ,
 DATE_FIRST_RESTRICT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_FIRST_RESTRICT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_FIRST_RESTRICT)))') ,
 DATE_LAST_RESTRICT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_LAST_RESTRICT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DATE_LAST_RESTRICT)))') ,
 PERCENT_DISABLED VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PERCENT_DISABLED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PERCENT_DISABLED)))') ,
 SETTLEMENT_METHOD VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SETTLEMENT_METHOD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.SETTLEMENT_METHOD)))') ,
 MGND_CARE_ORG_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.MGND_CARE_ORG_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.MGND_CARE_ORG_TYPE)))') ,
 DISPUTED_CASE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DISPUTED_CASE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DISPUTED_CASE_FLAG)))') ,
 NCCI_LOSS_TYPE_LOSS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.NCCI_LOSS_TYPE_LOSS_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NCCI_LOSS_TYPE_LOSS_CODE)))') ,
 NCCI_LOSS_TYPE_RECOV_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.NCCI_LOSS_TYPE_RECOV_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NCCI_LOSS_TYPE_RECOV_CODE)))') ,
 TREATMENT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.TREATMENT_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.TREATMENT_CODE)))') ,
 CLAIMANT_STATUS VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_STATUS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIMANT_STATUS)))') ,
 NAME_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.NAME_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.NAME_TYPE)))') ,
 BENEFICIARY_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BENEFICIARY_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.BENEFICIARY_CODE)))') ,
 INFO_REQ_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.INFO_REQ_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.INFO_REQ_DATE)))') ,
 PROOF_OF_LOSS_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PROOF_OF_LOSS_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.PROOF_OF_LOSS_DATE)))') ,
 CLAIM_CAUSE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_CAUSE_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CLAIM_CAUSE_CODE)))') ,
 DEF_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_BIRTH_DT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.DEF_BIRTH_DT)))') ,
 POLICY_LOB VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.POLICY_LOB)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.POLICY_LOB)))') ,
 CURR_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CURR_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707.CURR_CODE)))') ,
 CLAIM_TYPE_DATE_CHANGED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_TYPE_DATE_CHANGED)))') ,
 REVIEW_STATUS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.REVIEW_STATUS_CODE)))') ,
 REVIEW_STATUS_DATE_CHANGED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.REVIEW_STATUS_DATE_CHANGED)))') ,
 REVIEW_REASON VARCHAR(2000)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.REVIEW_REASON)))') ,
 CLAIM_TYPE_REASON VARCHAR(2000)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_TYPE_REASON)))')  )
 AS
SELECT key_generation(DS_RMX_STAGING.DBO.DDS_CLAIM, 'DA_ROW_ID', 1) , $gJobId, 1, f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RECORD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_SUFFIX))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DIVISION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LOCATION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPARTMENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COMPANY))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COUNTRY))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DIVISION_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LOCATION_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPARTMENT_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COMPANY_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.TIME_OF_CLAIM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_LOSS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_REPORTED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_CLAIM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_CLOSED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_REOPENED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_STATUS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_A_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_A_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_A_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_A_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_A_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_B_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_B_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_B_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_B_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_B_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_C_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_C_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_C_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_C_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_C_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_D_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_D_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_D_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_D_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_D_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CAUSE_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_LASTNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_FIRSTNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_SSN))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.CLAIMANT_ADDRESS, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.CLAIMANT_ADDRESS, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.CLAIMANT_ADDRESS, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.CLAIMANT_ADDRESS, 2, '|'))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_CITY))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_STATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_ZIP))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_SEX))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_BIRTH_DT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_PHONE))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.CLAIMANT_COMMENT)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_LASTNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_FIRSTNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_ADDRESS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_CITY))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_STATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_ZIP))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_PHONE))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.DEF_COMMENT)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLOSURE_METHOD))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.DESCRIPTION)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SERVICE))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 2, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 3, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 3, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 4, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 4, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 5, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.ICD10, 5, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 2, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 3, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 3, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 4, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 4, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 5, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.DIAGNOSIS, 5, '|'))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.POLICY_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.POLICY_EFFECT_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.POLICY_EXPIRE_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SUIT_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CASE_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EVENT_NUMBER))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.COMMENTS)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.ILLNESS_CODE))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 2, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 3, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 3, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 4, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 4, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 5, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.INJURY_CODE, 5, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 1, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 1, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 2, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 2, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 3, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 3, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 4, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 4, '|'))), f_dds_replace_quote(ifthenelse((word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 5, '|') IS  NULL ),  NULL , word_ext(DDS_CLAIM_UPTO707_S3.BODY_PART, 5, '|'))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMP_DEPARTMENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.OCCUPATION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_BIRTH))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_HIRE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_OF_DEATH))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.OSHA_RECORDABLE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMPLOYEE_SEX))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.WEEKLY_WAGE_RATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.HOURLY_WAGE_RATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.WEEKLY_HOURS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.NCCI_CLASS_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.ACCIDENT_STATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.MARITAL_STATUS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPENDENT_LNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPENDENT_FNAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEPENDENT_BIRTH_DT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LICENSE_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LICENSE_EXPIR_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LICENSE_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.LICENSE_RESTRICT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RETURN_WORK_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.ACTIVE_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMPLOYER_SIC_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMPLOYER_PAYROLL_CLASS_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.VEHICLE_ID))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.VEHICLE_YEAR))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.VEHICLE_MAKE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.EMPLOYEE_ID))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.VEHICLE_MODEL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.FILE_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_LAST_WORKED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_MIDDLENAME))), f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext(DDS_CLAIM_UPTO707_S3.ACCIDENT_DESC))), f_dds_replace_quote(rtrim_blanks_ext(ltrim_blanks_ext(DDS_CLAIM_UPTO707_S3.ACCIDENT_PREVENTABLE))), varchar_to_long(f_dds_replace_quote(DDS_CLAIM_UPTO707_S3.USER_FIELD_A)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_Y))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.USER_FIELD_Z))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PLAN_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLASS_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DISABIL_FROM_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DISABIL_TO_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BENEFITS_START))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BENEFITS_THROUGH))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DIS_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BEN_CALC_PAY_START))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BEN_CALC_PAY_TO))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.FEDERAL_TAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SOCIAL_SEC_TAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.MEDICARE_TAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.STATE_TAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.STD_DISABIL_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.MONTHLY_RATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.ELIG_DIS_BEN_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DIS_OPTION_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PENSION_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SS_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.OTHER_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_E_OPENING))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_E_CURRENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.RESERVE_E_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PAID_E_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.COLLECTION_E_TOTAL))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.OSHA_ACC_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_WORKED_LAST))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_RETURNED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.STATE_DURATION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_FIRST_RESTRICT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DATE_LAST_RESTRICT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PERCENT_DISABLED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.SETTLEMENT_METHOD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.MGND_CARE_ORG_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DISPUTED_CASE_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.NCCI_LOSS_TYPE_LOSS_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.NCCI_LOSS_TYPE_RECOV_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.TREATMENT_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIMANT_STATUS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.NAME_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.BENEFICIARY_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.INFO_REQ_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.PROOF_OF_LOSS_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_CAUSE_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.DEF_BIRTH_DT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.POLICY_LOB))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CURR_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_TYPE_DATE_CHANGED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.REVIEW_STATUS_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.REVIEW_STATUS_DATE_CHANGED))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.REVIEW_REASON))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_CLAIM_UPTO707_S3.CLAIM_TYPE_REASON))) FROM DDS_CLAIM_UPTO707_S3 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '31', "ui_display_name" = '"$gClaims_ImportFile_Name"(DDS_CLAIM_UPTO707_S3)', "x" = '203', "y" = '-450')
GUID::'ac7c9bdc-564b-45ba-9e5c-382807f2545d' READ FILE DDS_CLAIM_UPTO707_S3."$gClaims_ImportFile_Name" OUTPUT(DDS_CLAIM_UPTO707_S3)
SET("adaptable" = 'yes', "cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'DDS_CLAIM_UPTO707', "number_of_threads" = '<default>', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'yes', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Dec 20 18:25:08 2016', "ActaValue_3" = 'Thu Dec 29 16:50:10 2016', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_ENHNOTES::'d61d15f0-92d4-4e2e-807b-2b14b9c712b2'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>331</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '83', "ui_display_name" = '"$gEnhNotes_ImportFile_Name"(DDS_ENH_NOTES_csv)', "x" = '216', "y" = '-638')
GUID::'4d6267d8-2653-4e5a-b3d3-48a775e9a328' READ FILE DDS_ENH_NOTES_csv."$gEnhNotes_ImportFile_Name" OUTPUT(DDS_ENH_NOTES_csv)
SET("adaptable" = 'no', "cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "number_of_threads" = '<default>', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "table_weight" = '0', "transfer_custom" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '220', "Output_Width_Name" = '240', "Output_Width_Type" = '150', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '61', "ui_acta_from_schema_0" = 'DDS_ENH_NOTES_csv', "ui_display_name" = 'Q_READ_ENH', "x" = '710', "y" = '-637')
GUID::'cefb04d7-fec9-499c-ba5d-dd78686506c1' CREATE VIEW Q_READ_ENH( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1') ,
 ID VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.ID)))') ,
 CLAIM_OR_EVENT VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIM_OR_EVENT)))') ,
 NOTE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.NOTE_TYPE)))') ,
 USER_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.USER_TYPE)))') ,
 NOTE_MEMO LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_ENH_NOTES_csv.NOTE_MEMO))') ,
 ENTERED_BY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.ENTERED_BY)))') ,
 DATE_ENTERED VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.DATE_ENTERED)))') ,
 DATE_CREATED VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.DATE_CREATED)))') ,
 TIME_CREATED VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.TIME_CREATED)))') ,
 ENTERED_BY_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.ENTERED_BY_NAME)))') ,
 CLAIMANT_LASTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIMANT_LASTNAME)))') ,
 CLAIMANT_FIRSTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIMANT_FIRSTNAME)))') ,
 CLAIMANT_SSN VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIMANT_SSN)))') ,
 ABBREVIATION VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.ABBREVIATION)))')  )
 AS
SELECT $gJobId,  NULL , 1, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIM_OR_EVENT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.NOTE_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.USER_TYPE))), varchar_to_long(f_dds_replace_quote(DDS_ENH_NOTES_csv.NOTE_MEMO)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.ENTERED_BY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.DATE_ENTERED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.DATE_CREATED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.TIME_CREATED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.ENTERED_BY_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIMANT_LASTNAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIMANT_FIRSTNAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIMANT_SSN))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv.ABBREVIATION))) FROM DDS_ENH_NOTES_csv 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '21', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '219', "Output_Width_Type" = '178', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>444</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "x" = '2313', "y" = '-722')
GUID::'5921b2c7-516e-41cd-86d2-bf1399271285' LOAD TABLE DS_RMX_STAGING.DBO.DDS_ENHANCEDNOTES INPUT(MO_ENHNOTES)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>288</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "ui_display_name" = 'KG_ENHNOTES', "x" = '1206', "y" = '-638')
GUID::'632f9527-c65d-4496-be35-9a88b24819ad' CALL TRANSFORM Key_Generation() INPUT(Q_READ_ENH) OUTPUT(KG_ENHNOTES()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_ENHANCEDNOTES', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '214', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>291</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '82', "ui_display_name" = 'MO_ENHNOTES', "x" = '1740', "y" = '-637')
GUID::'c5215428-3cfa-47db-9de3-733f10b337b2' CALL TRANSFORM Map_Operation() INPUT(KG_ENHNOTES) OUTPUT(MO_ENHNOTES()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:55 2017', "ActaValue_3" = 'Tue Sep 26 12:19:31 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_ENHNOTES_S3::'a68603fb-c594-49d6-8a3f-7ff0c9585d43'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '214', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>291</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '82', "ui_display_name" = 'MO_ENHNOTES', "x" = '1524', "y" = '0')
GUID::'b1c47086-ae71-4c24-86e1-73d54f739250' CALL TRANSFORM Map_Operation() INPUT(KG_ENHNOTES) OUTPUT(MO_ENHNOTES()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>288</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "ui_display_name" = 'KG_ENHNOTES', "x" = '990', "y" = '-1')
GUID::'c50fa413-3f09-48ad-87b8-89b70cb697e0' CALL TRANSFORM Key_Generation() INPUT(Q_READ_ENH) OUTPUT(KG_ENHNOTES()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_ENHANCEDNOTES', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '21', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '219', "Output_Width_Type" = '178', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>444</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "x" = '2097', "y" = '-85')
GUID::'a974813e-72df-45fc-890f-f7cd2ac00a51' LOAD TABLE DS_RMX_STAGING.DBO.DDS_ENHANCEDNOTES INPUT(MO_ENHNOTES)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '220', "Output_Width_Name" = '240', "Output_Width_Type" = '150', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '61', "ui_acta_from_schema_0" = 'DDS_ENH_NOTES_csv_S3', "ui_display_name" = 'Q_READ_ENH', "x" = '494', "y" = '0')
GUID::'19185867-b90b-431c-ab49-50ed44ea1005' CREATE VIEW Q_READ_ENH( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL', "ui_pasting" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 ID VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.ID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.ID)))') ,
 CLAIM_OR_EVENT VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.CLAIM_OR_EVENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIM_OR_EVENT)))') ,
 NOTE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.NOTE_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.NOTE_TYPE)))') ,
 USER_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.USER_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.USER_TYPE)))') ,
 NOTE_MEMO LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_ENH_NOTES_csv_S3.NOTE_MEMO))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_ENH_NOTES_csv.NOTE_MEMO))') ,
 ENTERED_BY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.ENTERED_BY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.ENTERED_BY)))') ,
 DATE_ENTERED VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.DATE_ENTERED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.DATE_ENTERED)))') ,
 DATE_CREATED VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.DATE_CREATED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.DATE_CREATED)))') ,
 TIME_CREATED VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.TIME_CREATED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.TIME_CREATED)))') ,
 ENTERED_BY_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.ENTERED_BY_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.ENTERED_BY_NAME)))') ,
 CLAIMANT_LASTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.CLAIMANT_LASTNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIMANT_LASTNAME)))') ,
 CLAIMANT_FIRSTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.CLAIMANT_FIRSTNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIMANT_FIRSTNAME)))') ,
 CLAIMANT_SSN VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.CLAIMANT_SSN)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.CLAIMANT_SSN)))') ,
 ABBREVIATION VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.ABBREVIATION)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_ENH_NOTES_csv.ABBREVIATION)))')  )
 AS
SELECT $gJobId,  NULL , 1, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.CLAIM_OR_EVENT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.NOTE_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.USER_TYPE))), varchar_to_long(f_dds_replace_quote(DDS_ENH_NOTES_csv_S3.NOTE_MEMO)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.ENTERED_BY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.DATE_ENTERED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.DATE_CREATED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.TIME_CREATED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.ENTERED_BY_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.CLAIMANT_LASTNAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.CLAIMANT_FIRSTNAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.CLAIMANT_SSN))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_ENH_NOTES_csv_S3.ABBREVIATION))) FROM DDS_ENH_NOTES_csv_S3 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>331</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '18', "ui_display_name" = '"$gEnhNotes_ImportFile_Name"(DDS_ENH_NOTES_csv_S3)', "x" = '594', "y" = '-578')
GUID::'8926768b-162d-4137-8fda-ad9542201db1' READ FILE DDS_ENH_NOTES_csv_S3."$gEnhNotes_ImportFile_Name" OUTPUT(DDS_ENH_NOTES_csv_S3)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ANNOTATION_0" = 'ALGUICOMMENT( x = \'1613\', y = \'-1588\',ObjectDesc=\'SAMPLE SECTION FOR OTHER AREAS.
Perform a simple aggregate and discard result.\',UI_DATA_XML=\'<UIDATA><MAINICON><LOCATION><X>-1613</X><Y>1588</Y></LOCATION><SIZE><CX>0</CX><CY>0</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>922</CX><CY>163</CY></SIZE><VISIBLE>1</VISIBLE></DESCRIPTION></UIDATA>\' )
', "ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:55 2017', "ActaValue_3" = 'Mon Sep 18 13:58:22 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_EVENTS::'e7dc1edb-4d18-46fc-84a5-1606a55f3541'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '22', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '226', "Input_Width_Type" = '161', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '148', "Output_Width_Name" = '270', "Output_Width_Type" = '221', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>307</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'DDS_Events_csv', "ui_display_name" = 'Q_READ_EVENT', "x" = '554', "y" = '-237')
GUID::'bc80d02b-33de-4834-b990-3e6f161d810c' CREATE VIEW Q_READ_EVENT( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1') ,
 UPDATE_ROW INT  SET( "ui_mapping_text" = '0') ,
 INPUT_ROW_ID INT  SET( "ui_mapping_text" = '0') ,
 EVENT_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EVENT_NUMBER)))') ,
 EVENT_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EVENT_TYPE_CODE)))') ,
 EVENT_STATUS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EVENT_STATUS_CODE)))') ,
 EVENT_IND_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EVENT_IND_CODE)))') ,
 EVENT_DESCRIPTION LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv.EVENT_DESCRIPTION))') ,
 BRIEF_DESCRIPTION VARCHAR(250)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BRIEF_DESCRIPTION)))') ,
 DEPARTMENT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DEPARTMENT)))') ,
 DEPT_INVOLVED VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DEPT_INVOLVED)))') ,
 ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ADDR1)))') ,
 ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ADDR2)))') ,
 CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.CITY)))') ,
 STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.STATE)))') ,
 ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ZIP_CODE)))') ,
 COUNTRY VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.COUNTRY)))') ,
 COUNTY_OF_INJURY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.COUNTY_OF_INJURY)))') ,
 LOCATION_AREA_DESC LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv.LOCATION_AREA_DESC))') ,
 PRIMARY_LOC_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PRIMARY_LOC_CODE)))') ,
 LOCATION_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.LOCATION_TYPE_CODE)))') ,
 ON_PREMISE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ON_PREMISE_FLAG)))') ,
 NO_OF_INJURIES INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NO_OF_INJURIES)))') ,
 NO_OF_FATALITIES INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NO_OF_FATALITIES)))') ,
 CAUSE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.CAUSE_CODE)))') ,
 DATE_OF_EVENT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_OF_EVENT)))') ,
 TIME_OF_EVENT VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TIME_OF_EVENT)))') ,
 DATE_REPORTED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_REPORTED)))') ,
 TIME_REPORTED VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TIME_REPORTED)))') ,
 REPORTED_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'replace_substr((ltrim_blanks(rtrim_blanks(DDS_Events_csv.REPORTED_TAX_ID))),\'-\',\'\')') ,
 REPORTED_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_LAST_NAME)))') ,
 REPORTED_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_FIRST_NAME)))') ,
 REPORTED_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_ADDR1)))') ,
 REPORTED_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_ADDR2)))') ,
 REPORTED_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_CITY)))') ,
 REPORTED_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_STATE)))') ,
 REPORTED_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_ZIP_CODE)))') ,
 REPORTED_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_PHONE)))') ,
 COMMENTS LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv.COMMENTS))') ,
 ACTIVITY_WHEN_INJ VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTIVITY_WHEN_INJ)))') ,
 HOW_ACC_OCCURRED VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOW_ACC_OCCURRED)))') ,
 OBJ_SUBST_THAT_INJ VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OBJ_SUBST_THAT_INJ)))') ,
 RECORDABLE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RECORDABLE_FLAG)))') ,
 SAFEG_NOTUSED_FLAG VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SAFEG_NOTUSED_FLAG)))') ,
 SAFEGUARD_FLAG VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SAFEGUARD_FLAG)))') ,
 NO_RULES_FLAG VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NO_RULES_FLAG)))') ,
 DATE_PHYS_ADVISED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_PHYS_ADVISED)))') ,
 TIME_PHYS_ADVISED VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TIME_PHYS_ADVISED)))') ,
 ACTION_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_Events_csv.ACTION))), 1, \'|\'),1,25)') ,
 ACTION_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_Events_csv.ACTION))), 2, \'|\'),1,25)') ,
 ACTION_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTION)), 3, \'|\'),1,25))') ,
 ACTION_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTION)), 4, \'|\'),1,25))') ,
 ACTION_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTION)), 5, \'|\'),1,25))') ,
 OUTCOME_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 1, \'|\'),1,25)))') ,
 OUTCOME_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 2, \'|\'),1,25))') ,
 OUTCOME_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 3, \'|\'),1,25))') ,
 OUTCOME_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 4, \'|\'),1,25))') ,
 OUTCOME_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 5, \'|\'),1,25))') ,
 DATE_TO_FOLLOW_UP VARCHAR(8)  SET( "ui_mapping_text" = 'ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_TO_FOLLOW_UP))') ,
 TREATMENT_GIVEN VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT_GIVEN)))') ,
 RELEASE_SIGNED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RELEASE_SIGNED)))') ,
 DEPT_HEAD_ADVISED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DEPT_HEAD_ADVISED)))') ,
 PHYS_NOTES LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv.PHYS_NOTES))') ,
 DATE_CARRIER_NOTIF VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_CARRIER_NOTIF)))') ,
 PI_SUFFIX VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_SUFFIX)))') ,
 PI_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(replace_substr((ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_TAX_ID))),\'-\',\'\'))') ,
 PI_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_LAST_NAME)))') ,
 PI_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_FIRST_NAME)))') ,
 PI_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_ADDR1)))') ,
 PI_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_ADDR2)))') ,
 PI_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_CITY)))') ,
 PI_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_STATE)))') ,
 PI_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_ZIP_CODE)))') ,
 PI_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_PHONE)))') ,
 PI_TYPE_CODE VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_TYPE_CODE)))') ,
 MARITAL_STAT_CODE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.MARITAL_STAT_CODE)))') ,
 SEX_CODE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SEX_CODE)))') ,
 BIRTH_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BIRTH_DATE)))') ,
 DATE_OF_DEATH VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_OF_DEATH)))') ,
 ILLNESS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ILLNESS_CODE)))') ,
 INJURY_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 1, \'|\'),1,25))') ,
 INJURY_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 2, \'|\'),1,25))') ,
 INJURY_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 3, \'|\'),1,25))') ,
 INJURY_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 4, \'|\'),1,25))') ,
 INJURY_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 5, \'|\'),1,25))') ,
 BODY_PART_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 1, \'|\'),1,25))') ,
 BODY_PART_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 2, \'|\'),1,25))') ,
 BODY_PART_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 3, \'|\'),1,25))') ,
 BODY_PART_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 4, \'|\'),1,25))') ,
 BODY_PART_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 5, \'|\'),1,25))') ,
 DIAGNOSIS_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 1, \'|\'),1,25))') ,
 DIAGNOSIS_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 2, \'|\'),1,25))') ,
 DIAGNOSIS_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 3, \'|\'),1,25))') ,
 DIAGNOSIS_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 4, \'|\'),1,25))') ,
 DIAGNOSIS_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 5, \'|\'),1,25))') ,
 TREATMENT_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 1, \'|\'),1,25))') ,
 TREATMENT_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 2, \'|\'),1,25))') ,
 TREATMENT_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 3, \'|\'),1,25))') ,
 TREATMENT_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 4, \'|\'),1,25))') ,
 TREATMENT_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 5, \'|\'),1,25))') ,
 PHYSICIAN_1_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_LAST_NAME)), 1, $gSecondaryDelimiter), 1, 50))') ,
 PHYSICIAN_1_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_FIRST_NAME)), 1, $gSecondaryDelimiter), 1, 25))') ,
 PHYSICIAN_1_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks(rtrim_blanks(DDS_Events_csv.PHYSICIAN_PHONE1)), 1, $gSecondaryDelimiter), 1, 30))') ,
 PHYSICIAN_2_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_LAST_NAME)), 2, $gSecondaryDelimiter), 1, 50))') ,
 PHYSICIAN_2_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_FIRST_NAME)), 2, $gSecondaryDelimiter), 1, 25))') ,
 PHYSICIAN_2_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_PHONE1)), 2, $gSecondaryDelimiter), 1, 30))') ,
 PHYSICIAN_3_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_LAST_NAME)), 3, $gSecondaryDelimiter), 1, 50))') ,
 PHYSICIAN_3_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_FIRST_NAME)), 3, $gSecondaryDelimiter), 1, 25))') ,
 PHYSICIAN_3_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_PHONE1)), 3, $gSecondaryDelimiter), 1, 30))') ,
 HOSPITAL_1_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_NAME)), 1, $gSecondaryDelimiter), 1, 50))') ,
 HOSPITAL_1_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_PHONE)), 1, $gSecondaryDelimiter), 1, 30))') ,
 HOSPITAL_2_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_NAME)), 2, $gSecondaryDelimiter), 1, 50))') ,
 HOSPITAL_2_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_PHONE)), 2, $gSecondaryDelimiter), 1, 30))') ,
 HOSPITAL_3_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_NAME)), 3, $gSecondaryDelimiter), 1, 50))') ,
 HOSPITAL_3_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_PHONE)), 3, $gSecondaryDelimiter), 1, 30))') ,
 DRIVERS_LIC_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DRIVERS_LIC_NO)))') ,
 DRIVERSLICTYPECODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DRIVERSLICTYPECODE)))') ,
 DATE_DRIVERSLICEXP VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_DRIVERSLICEXP)))') ,
 DRIVLIC_RSTRCT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DRIVLIC_RSTRCT_CODE)))') ,
 DRIVLIC_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DRIVLIC_STATE)))') ,
 COUNTY_OF_RESIDNC VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.COUNTY_OF_RESIDNC)))') ,
 NCCI_CLASS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NCCI_CLASS_CODE)))') ,
 EST_LEN_DISABILITY INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EST_LEN_DISABILITY)))') ,
 INSURABLE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INSURABLE_FLAG)))') ,
 LAST_VERIFIED_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.LAST_VERIFIED_DATE)))') ,
 PATIENT_ACCT_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_ACCT_NO)))') ,
 MEDICAL_RCD_NO VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.MEDICAL_RCD_NO)))') ,
 INS_PLAN_GROUP_NO VARCHAR(16)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INS_PLAN_GROUP_NO)))') ,
 DATE_OF_ADMISSION VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_OF_ADMISSION)))') ,
 DATE_OF_DISCHARGE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_OF_DISCHARGE)))') ,
 ADM_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ADM_TYPE_CODE)))') ,
 ADM_SOURCE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ADM_SOURCE_CODE)))') ,
 ADMISSION_REASON LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv.ADMISSION_REASON))') ,
 ACUITY_LEVEL_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACUITY_LEVEL_CODE)))') ,
 PATIENT_STAT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_STAT_CODE)))') ,
 PATIENT_COND_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_COND_CODE)))') ,
 DISCHARGE_DSP_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DISCHARGE_DSP_CODE)))') ,
 EXP_LENGTH_OF_STAY INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EXP_LENGTH_OF_STAY)))') ,
 EXPECTED_COST DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EXPECTED_COST)))') ,
 QI_SIGNIF_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.QI_SIGNIF_CODE)))') ,
 EPISODE_OF_CARE_ID VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EPISODE_OF_CARE_ID)))') ,
 PATIENT_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_TYPE_CODE)))') ,
 WEIGHT INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WEIGHT)))') ,
 EMERGENCY_CONTACT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EMERGENCY_CONTACT)))') ,
 EMERGENCY_CONT_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EMERGENCY_CONT_NO)))') ,
 PATIENT_ROOM_NO VARCHAR(14)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_ROOM_NO)))') ,
 FACILITY_UNIT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.FACILITY_UNIT_CODE)))') ,
 FACILITY_DEPT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.FACILITY_DEPT)))') ,
 HCO_ID_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HCO_ID_NO)))') ,
 HCO_SITE_ID_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HCO_SITE_ID_NO)))') ,
 WHY_AT_FACILITY LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv.WHY_AT_FACILITY))') ,
 DISABILITY_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DISABILITY_CODE)))') ,
 EMPLOYEE_NUMBER VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EMPLOYEE_NUMBER)))') ,
 POSITION_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.POSITION_CODE)))') ,
 DEPT_ASSIGNED VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DEPT_ASSIGNED)))') ,
 SUPER_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'substr( word_ext( replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_TAX_ID)),\'-\',\'\'), 1, $gSecondaryDelimiter), 1, 11)') ,
 SUPER_EMP_NO VARCHAR(20)  SET( "ui_mapping_text" = 'substr( word_ext( replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_TAX_ID)),\'-\',\'\'), 2, $gSecondaryDelimiter), 1, 20)') ,
 SUPER_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_LAST_NAME)))') ,
 SUPER_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_FIRST_NAME)))') ,
 SUPER_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_ADDR1)))') ,
 SUPER_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_ADDR2)))') ,
 SUPER_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_CITY)))') ,
 SUPER_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_STATE)))') ,
 SUPER_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_ZIP_CODE)))') ,
 SUPER_PHONE1 VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_PHONE1)))') ,
 FULL_TIME_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.FULL_TIME_FLAG)))') ,
 PAY_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PAY_TYPE_CODE)))') ,
 HOURLY_RATE DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOURLY_RATE)))') ,
 WEEKLY_HOURS DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WEEKLY_HOURS)))') ,
 WEEKLY_RATE DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WEEKLY_RATE)))') ,
 PAY_AMOUNT DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PAY_AMOUNT)))') ,
 ACTIVE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTIVE_FLAG)))') ,
 DATE_HIRED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_HIRED)))') ,
 DATE_LAST_WORKED_1 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 1, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_1 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 1, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_2 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 2, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_2 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 2, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_3 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_Ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 3, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_3 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 3, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_4 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 4, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_4 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_Ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 4, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_5 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(f_dds_replace_quote (substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 5, $gSecondaryDelimiter), 1, 8)))') ,
 DATE_RETURNED_5 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 5, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_6 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 6, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_6 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 6, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_7 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 7, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_7 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 7, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_8 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 8, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_8 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 8, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_9 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 9, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_9 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 9, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_10 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 10, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_10 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 10, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_11 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 11, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_11 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 11, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_12 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 12, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_12 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 12, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_13 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 13, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_13 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 13, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_14 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 14, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_14 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 14, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_15 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 15, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_15 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 15, $gSecondaryDelimiter), 1, 8))') ,
 LOST_WORK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.LOST_WORK_FLAG)))') ,
 LEN_OF_SVC_DAYS INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.LEN_OF_SVC_DAYS)))') ,
 EXEMPT_STATUS_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EXEMPT_STATUS_FLAG)))') ,
 NO_OF_EXEMPTIONS INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NO_OF_EXEMPTIONS)))') ,
 WORK_SUN_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_SUN_FLAG)))') ,
 WORK_MON_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_MON_FLAG)))') ,
 WORK_TUE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_TUE_FLAG)))') ,
 WORK_WED_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_WED_FLAG)))') ,
 WORK_THU_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_THU_FLAG)))') ,
 WORK_FRI_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_FRI_FLAG)))') ,
 WORK_SAT_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_SAT_FLAG)))') ,
 WORKDAY_START_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORKDAY_START_TIME)))') ,
 WORK_PERMIT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_PERMIT_DATE)))') ,
 WORK_PERMIT_NUMBER VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_PERMIT_NUMBER)))') ,
 REGULAR_JOB_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REGULAR_JOB_FLAG)))') ,
 HIRED_IN_STATE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HIRED_IN_STATE_FLAG)))') ,
 NUM_OF_VIOLATION INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NUM_OF_VIOLATION)))') ,
 DESC_BY_WITNESS LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv.DESC_BY_WITNESS))') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv.USER_FIELD_A))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_O)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_P)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_Q)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_Y)))') ,
 COND_PRIOR_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.COND_PRIOR_CODE)))') ,
 RAIL_POSITION_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RAIL_POSITION_CODE)))') ,
 RESTRAINT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RESTRAINT_CODE)))') ,
 BED_POSITION_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BED_POSITION_CODE)))') ,
 CALL_LIGHT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.CALL_LIGHT_CODE)))') ,
 REPORTED_COUNTRY VARCHAR(24)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_COUNTRY)))') ,
 REPORTED_PHONE2 VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_PHONE2)))') ,
 REPORTED_FAX VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_FAX)))') ,
 PI_MIDDLE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_MIDDLE_NAME)))') ,
 PRIVACY_CASE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PRIVACY_CASE_FLAG)))') ,
 SHARPS_OBJECT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SHARPS_OBJECT)))') ,
 SHARPS_BRAND_MAKE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SHARPS_BRAND_MAKE)))') ,
 SAFEG_PROVIDED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SAFEG_PROVIDED)))') ,
 RULES_NOT_FOLLOWED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RULES_NOT_FOLLOWED)))') ,
 OSHA_ESTAB_EID VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OSHA_ESTAB_EID)))') ,
 NAME_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NAME_TYPE)))')  )
 AS
SELECT $gJobId,  NULL , 1, 0, 0, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EVENT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EVENT_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EVENT_STATUS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EVENT_IND_CODE))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv.EVENT_DESCRIPTION)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BRIEF_DESCRIPTION))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DEPARTMENT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DEPT_INVOLVED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.COUNTRY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.COUNTY_OF_INJURY))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv.LOCATION_AREA_DESC)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PRIMARY_LOC_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.LOCATION_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ON_PREMISE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NO_OF_INJURIES))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NO_OF_FATALITIES))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.CAUSE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_OF_EVENT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TIME_OF_EVENT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_REPORTED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TIME_REPORTED))), replace_substr(ltrim_blanks(rtrim_blanks(DDS_Events_csv.REPORTED_TAX_ID)), '-', ''), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_PHONE))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv.COMMENTS)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTIVITY_WHEN_INJ))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOW_ACC_OCCURRED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OBJ_SUBST_THAT_INJ))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RECORDABLE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SAFEG_NOTUSED_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SAFEGUARD_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NO_RULES_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_PHYS_ADVISED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TIME_PHYS_ADVISED))), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_Events_csv.ACTION))), 1, '|'), 1, 25), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_Events_csv.ACTION))), 2, '|'), 1, 25), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTION)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTION)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTION)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OUTCOME)), 5, '|'), 1, 25)), ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_TO_FOLLOW_UP)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT_GIVEN))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RELEASE_SIGNED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DEPT_HEAD_ADVISED))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv.PHYS_NOTES)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_CARRIER_NOTIF))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_SUFFIX))), f_dds_replace_quote(replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_TAX_ID)), '-', '')), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_PHONE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.MARITAL_STAT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SEX_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BIRTH_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_OF_DEATH))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ILLNESS_CODE))), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INJURY_CODE)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BODY_PART)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DIAGNOSIS)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.TREATMENT)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_LAST_NAME)), 1, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_FIRST_NAME)), 1, $gSecondaryDelimiter), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks(rtrim_blanks(DDS_Events_csv.PHYSICIAN_PHONE1)), 1, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_LAST_NAME)), 2, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_FIRST_NAME)), 2, $gSecondaryDelimiter), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_PHONE1)), 2, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_LAST_NAME)), 3, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_FIRST_NAME)), 3, $gSecondaryDelimiter), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PHYSICIAN_PHONE1)), 3, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_NAME)), 1, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_PHONE)), 1, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_NAME)), 2, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_PHONE)), 2, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_NAME)), 3, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOSPITAL_PHONE)), 3, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DRIVERS_LIC_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DRIVERSLICTYPECODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_DRIVERSLICEXP))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DRIVLIC_RSTRCT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DRIVLIC_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.COUNTY_OF_RESIDNC))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NCCI_CLASS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EST_LEN_DISABILITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INSURABLE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.LAST_VERIFIED_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_ACCT_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.MEDICAL_RCD_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.INS_PLAN_GROUP_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_OF_ADMISSION))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_OF_DISCHARGE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ADM_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ADM_SOURCE_CODE))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv.ADMISSION_REASON)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACUITY_LEVEL_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_STAT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_COND_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DISCHARGE_DSP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EXP_LENGTH_OF_STAY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EXPECTED_COST))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.QI_SIGNIF_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EPISODE_OF_CARE_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WEIGHT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EMERGENCY_CONTACT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EMERGENCY_CONT_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PATIENT_ROOM_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.FACILITY_UNIT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.FACILITY_DEPT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HCO_ID_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HCO_SITE_ID_NO))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv.WHY_AT_FACILITY)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DISABILITY_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EMPLOYEE_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.POSITION_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DEPT_ASSIGNED))), substr(word_ext(replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_TAX_ID)), '-', ''), 1, $gSecondaryDelimiter), 1, 11), substr(word_ext(replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_TAX_ID)), '-', ''), 2, $gSecondaryDelimiter), 1, 20), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SUPER_PHONE1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.FULL_TIME_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PAY_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HOURLY_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WEEKLY_HOURS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WEEKLY_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PAY_AMOUNT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.ACTIVE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_HIRED))), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 1, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 1, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 2, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 2, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 3, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 3, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 4, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 4, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 5, $gSecondaryDelimiter), 1, 8))), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 5, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 6, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 6, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 7, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 7, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 8, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 8, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 9, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 9, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 10, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 10, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 11, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 11, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 12, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 12, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 13, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 13, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 14, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 14, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_LAST_WORKED)), 15, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.DATE_RETURNED)), 15, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.LOST_WORK_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.LEN_OF_SVC_DAYS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.EXEMPT_STATUS_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NO_OF_EXEMPTIONS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_SUN_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_MON_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_TUE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_WED_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_THU_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_FRI_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_SAT_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORKDAY_START_TIME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_PERMIT_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.WORK_PERMIT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REGULAR_JOB_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.HIRED_IN_STATE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NUM_OF_VIOLATION))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv.DESC_BY_WITNESS)), varchar_to_long(f_dds_replace_quote(DDS_Events_csv.USER_FIELD_A)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.USER_FIELD_Y))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.COND_PRIOR_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RAIL_POSITION_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RESTRAINT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.BED_POSITION_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.CALL_LIGHT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_COUNTRY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_PHONE2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.REPORTED_FAX))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PI_MIDDLE_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.PRIVACY_CASE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SHARPS_OBJECT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SHARPS_BRAND_MAKE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.SAFEG_PROVIDED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.RULES_NOT_FOLLOWED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.OSHA_ESTAB_EID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv.NAME_TYPE))) FROM DDS_Events_csv 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '28', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>328</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '60', "ui_display_name" = 'KG_DA_ROW_ID1', "x" = '989', "y" = '-237')
GUID::'df1cf5de-2ed6-4ec0-ad3d-e7a63bee3d3c' CALL TRANSFORM Key_Generation() INPUT(Q_READ_EVENT) OUTPUT(KG_DA_ROW_ID1()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_EVENT', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>332</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '77', "ui_display_name" = 'MO_READ_EVENT', "x" = '1419', "y" = '-238')
GUID::'8a4029d9-cfb0-45ef-a3f2-b2459640876e' CALL TRANSFORM Map_Operation() INPUT(KG_DA_ROW_ID1) OUTPUT(MO_READ_EVENT()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '86', "x" = '1969', "y" = '-235')
GUID::'86161105-c99d-4dbe-b84a-9fb5c6e8a225' LOAD TABLE DS_RMX_STAGING.DBO.DDS_EVENT INPUT(MO_READ_EVENT)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>319</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '86', "x" = '247', "y" = '-334')
GUID::'2130e4a2-71f9-43ac-ace5-84d193a2bf4e' READ FILE DDS_Events_csv."$gEvents_ImportFile_Name" OUTPUT(DDS_Events_csv)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'Events_csv', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "table_weight" = '0', "transfer_custom" = 'no');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:56 2017', "ActaValue_3" = 'Mon Sep 25 19:03:43 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_EVENTS_S3::'e8fbe99a-b140-4287-a031-0dea80bcfd50'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '86', "x" = '2152', "y" = '-403')
GUID::'69ab5377-7f3d-4b69-b173-18336faa3af7' LOAD TABLE DS_RMX_STAGING.DBO.DDS_EVENT INPUT(MO_READ_EVENT)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>332</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '77', "ui_display_name" = 'MO_READ_EVENT', "x" = '1602', "y" = '-406')
GUID::'cc163650-b8e3-4cbd-bd96-b323aebca962' CALL TRANSFORM Map_Operation() INPUT(KG_DA_ROW_ID1) OUTPUT(MO_READ_EVENT()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

ALGUIComment ("InputSchema_WidthProp" = '28', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>328</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '60', "ui_display_name" = 'KG_DA_ROW_ID1', "x" = '1172', "y" = '-405')
GUID::'ff6c0324-4b8d-490f-8e3f-57549e600f31' CALL TRANSFORM Key_Generation() INPUT(Q_READ_EVENT) OUTPUT(KG_DA_ROW_ID1()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_EVENT', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '22', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '226', "Input_Width_Type" = '161', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '148', "Output_Width_Name" = '270', "Output_Width_Type" = '221', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>307</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '64', "ui_acta_from_schema_0" = 'DDS_Events_csv_S3', "ui_display_name" = 'Q_READ_EVENT', "x" = '737', "y" = '-405')
GUID::'94a8bf83-d38b-4dff-86f6-6d401be98a2a' CREATE VIEW Q_READ_EVENT( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL', "ui_pasting" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 UPDATE_ROW INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0') ,
 INPUT_ROW_ID INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0') ,
 EVENT_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EVENT_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EVENT_NUMBER)))') ,
 EVENT_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EVENT_TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EVENT_TYPE_CODE)))') ,
 EVENT_STATUS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EVENT_STATUS_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EVENT_STATUS_CODE)))') ,
 EVENT_IND_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EVENT_IND_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EVENT_IND_CODE)))') ,
 EVENT_DESCRIPTION LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv_S3.EVENT_DESCRIPTION))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(Events_csv.EVENT_DESCRIPTION))') ,
 BRIEF_DESCRIPTION VARCHAR(250)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BRIEF_DESCRIPTION)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.BRIEF_DESCRIPTION)))') ,
 DEPARTMENT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DEPARTMENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DEPARTMENT)))') ,
 DEPT_INVOLVED VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DEPT_INVOLVED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DEPT_INVOLVED)))') ,
 ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ADDR1)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ADDR1)))') ,
 ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ADDR2)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ADDR2)))') ,
 CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.CITY)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.CITY)))') ,
 STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.STATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.STATE)))') ,
 ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ZIP_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ZIP_CODE)))') ,
 COUNTRY VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.COUNTRY)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.COUNTRY)))') ,
 COUNTY_OF_INJURY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.COUNTY_OF_INJURY)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.COUNTY_OF_INJURY)))') ,
 LOCATION_AREA_DESC LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv_S3.LOCATION_AREA_DESC))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(Events_csv.LOCATION_AREA_DESC))') ,
 PRIMARY_LOC_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PRIMARY_LOC_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PRIMARY_LOC_CODE)))') ,
 LOCATION_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.LOCATION_TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.LOCATION_TYPE_CODE)))') ,
 ON_PREMISE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ON_PREMISE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ON_PREMISE_FLAG)))') ,
 NO_OF_INJURIES INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NO_OF_INJURIES)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.NO_OF_INJURIES)))') ,
 NO_OF_FATALITIES INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NO_OF_FATALITIES)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.NO_OF_FATALITIES)))') ,
 CAUSE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.CAUSE_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.CAUSE_CODE)))') ,
 DATE_OF_EVENT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_OF_EVENT)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_OF_EVENT)))') ,
 TIME_OF_EVENT VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TIME_OF_EVENT)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.TIME_OF_EVENT)))') ,
 DATE_REPORTED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_REPORTED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_REPORTED)))') ,
 TIME_REPORTED VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TIME_REPORTED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.TIME_REPORTED)))') ,
 REPORTED_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'replace_substr((ltrim_blanks(rtrim_blanks(DDS_Events_csv_S3.REPORTED_TAX_ID))),\'-\',\'\')', "ui_pasting" = 'replace_substr((ltrim_blanks(rtrim_blanks(Events_csv.REPORTED_TAX_ID))),\'-\',\'\')') ,
 REPORTED_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_LAST_NAME)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_LAST_NAME)))') ,
 REPORTED_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_FIRST_NAME)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_FIRST_NAME)))') ,
 REPORTED_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_ADDR1)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_ADDR1)))') ,
 REPORTED_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_ADDR2)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_ADDR2)))') ,
 REPORTED_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_CITY)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_CITY)))') ,
 REPORTED_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_STATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_STATE)))') ,
 REPORTED_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_ZIP_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_ZIP_CODE)))') ,
 REPORTED_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_PHONE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_PHONE)))') ,
 COMMENTS LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv_S3.COMMENTS))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(Events_csv.COMMENTS))') ,
 ACTIVITY_WHEN_INJ VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTIVITY_WHEN_INJ)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ACTIVITY_WHEN_INJ)))') ,
 HOW_ACC_OCCURRED VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOW_ACC_OCCURRED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HOW_ACC_OCCURRED)))') ,
 OBJ_SUBST_THAT_INJ VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OBJ_SUBST_THAT_INJ)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.OBJ_SUBST_THAT_INJ)))') ,
 RECORDABLE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RECORDABLE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.RECORDABLE_FLAG)))') ,
 SAFEG_NOTUSED_FLAG VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SAFEG_NOTUSED_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SAFEG_NOTUSED_FLAG)))') ,
 SAFEGUARD_FLAG VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SAFEGUARD_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SAFEGUARD_FLAG)))') ,
 NO_RULES_FLAG VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NO_RULES_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.NO_RULES_FLAG)))') ,
 DATE_PHYS_ADVISED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_PHYS_ADVISED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_PHYS_ADVISED)))') ,
 TIME_PHYS_ADVISED VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TIME_PHYS_ADVISED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.TIME_PHYS_ADVISED)))') ,
 ACTION_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_Events_csv_S3.ACTION))), 1, \'|\'),1,25)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(Events_csv.ACTION))), 1, \'|\'),1,25)') ,
 ACTION_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_Events_csv_S3.ACTION))), 2, \'|\'),1,25)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(Events_csv.ACTION))), 2, \'|\'),1,25)') ,
 ACTION_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTION)), 3, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ACTION)), 3, \'|\'),1,25))') ,
 ACTION_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTION)), 4, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ACTION)), 4, \'|\'),1,25))') ,
 ACTION_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTION)), 5, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ACTION)), 5, \'|\'),1,25))') ,
 OUTCOME_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 1, \'|\'),1,25)))', "ui_pasting" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.OUTCOME)), 1, \'|\'),1,25)))') ,
 OUTCOME_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 2, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.OUTCOME)), 2, \'|\'),1,25))') ,
 OUTCOME_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 3, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.OUTCOME)), 3, \'|\'),1,25))') ,
 OUTCOME_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 4, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.OUTCOME)), 4, \'|\'),1,25))') ,
 OUTCOME_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 5, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.OUTCOME)), 5, \'|\'),1,25))') ,
 DATE_TO_FOLLOW_UP VARCHAR(8)  SET( "ui_mapping_text" = 'ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_TO_FOLLOW_UP))', "ui_pasting" = 'ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_TO_FOLLOW_UP))') ,
 TREATMENT_GIVEN VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT_GIVEN)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.TREATMENT_GIVEN)))') ,
 RELEASE_SIGNED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RELEASE_SIGNED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.RELEASE_SIGNED)))') ,
 DEPT_HEAD_ADVISED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DEPT_HEAD_ADVISED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DEPT_HEAD_ADVISED)))') ,
 PHYS_NOTES LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv_S3.PHYS_NOTES))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(Events_csv.PHYS_NOTES))') ,
 DATE_CARRIER_NOTIF VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_CARRIER_NOTIF)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_CARRIER_NOTIF)))') ,
 PI_SUFFIX VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_SUFFIX)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_SUFFIX)))') ,
 PI_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(replace_substr((ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_TAX_ID))),\'-\',\'\'))', "ui_pasting" = 'f_dds_replace_quote(replace_substr((ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_TAX_ID))),\'-\',\'\'))') ,
 PI_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_LAST_NAME)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_LAST_NAME)))') ,
 PI_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_FIRST_NAME)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_FIRST_NAME)))') ,
 PI_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_ADDR1)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_ADDR1)))') ,
 PI_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_ADDR2)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_ADDR2)))') ,
 PI_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_CITY)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_CITY)))') ,
 PI_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_STATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_STATE)))') ,
 PI_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_ZIP_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_ZIP_CODE)))') ,
 PI_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_PHONE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_PHONE)))') ,
 PI_TYPE_CODE VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_TYPE_CODE)))') ,
 MARITAL_STAT_CODE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.MARITAL_STAT_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.MARITAL_STAT_CODE)))') ,
 SEX_CODE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SEX_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SEX_CODE)))') ,
 BIRTH_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BIRTH_DATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.BIRTH_DATE)))') ,
 DATE_OF_DEATH VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_OF_DEATH)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_OF_DEATH)))') ,
 ILLNESS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ILLNESS_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ILLNESS_CODE)))') ,
 INJURY_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 1, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.INJURY_CODE)), 1, \'|\'),1,25))') ,
 INJURY_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 2, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.INJURY_CODE)), 2, \'|\'),1,25))') ,
 INJURY_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 3, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.INJURY_CODE)), 3, \'|\'),1,25))') ,
 INJURY_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 4, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.INJURY_CODE)), 4, \'|\'),1,25))') ,
 INJURY_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 5, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.INJURY_CODE)), 5, \'|\'),1,25))') ,
 BODY_PART_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 1, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.BODY_PART)), 1, \'|\'),1,25))') ,
 BODY_PART_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 2, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.BODY_PART)), 2, \'|\'),1,25))') ,
 BODY_PART_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 3, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.BODY_PART)), 3, \'|\'),1,25))') ,
 BODY_PART_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 4, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.BODY_PART)), 4, \'|\'),1,25))') ,
 BODY_PART_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 5, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.BODY_PART)), 5, \'|\'),1,25))') ,
 DIAGNOSIS_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 1, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DIAGNOSIS)), 1, \'|\'),1,25))') ,
 DIAGNOSIS_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 2, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DIAGNOSIS)), 2, \'|\'),1,25))') ,
 DIAGNOSIS_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 3, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DIAGNOSIS)), 3, \'|\'),1,25))') ,
 DIAGNOSIS_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 4, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DIAGNOSIS)), 4, \'|\'),1,25))') ,
 DIAGNOSIS_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 5, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DIAGNOSIS)), 5, \'|\'),1,25))') ,
 TREATMENT_1_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 1, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.TREATMENT)), 1, \'|\'),1,25))') ,
 TREATMENT_2_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 2, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.TREATMENT)), 2, \'|\'),1,25))') ,
 TREATMENT_3_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 3, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.TREATMENT)), 3, \'|\'),1,25))') ,
 TREATMENT_4_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 4, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.TREATMENT)), 4, \'|\'),1,25))') ,
 TREATMENT_5_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 5, \'|\'),1,25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.TREATMENT)), 5, \'|\'),1,25))') ,
 PHYSICIAN_1_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_LAST_NAME)), 1, $gSecondaryDelimiter), 1, 50))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PHYSICIAN_LAST_NAME)), 1, $gSecondaryDelimiter), 1, 50))') ,
 PHYSICIAN_1_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_FIRST_NAME)), 1, $gSecondaryDelimiter), 1, 25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PHYSICIAN_FIRST_NAME)), 1, $gSecondaryDelimiter), 1, 25))') ,
 PHYSICIAN_1_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks(rtrim_blanks(DDS_Events_csv_S3.PHYSICIAN_PHONE1)), 1, $gSecondaryDelimiter), 1, 30))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks(rtrim_blanks(Events_csv.PHYSICIAN_PHONE1)), 1, $gSecondaryDelimiter), 1, 30))') ,
 PHYSICIAN_2_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_LAST_NAME)), 2, $gSecondaryDelimiter), 1, 50))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PHYSICIAN_LAST_NAME)), 2, $gSecondaryDelimiter), 1, 50))') ,
 PHYSICIAN_2_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_FIRST_NAME)), 2, $gSecondaryDelimiter), 1, 25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PHYSICIAN_FIRST_NAME)), 2, $gSecondaryDelimiter), 1, 25))') ,
 PHYSICIAN_2_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_PHONE1)), 2, $gSecondaryDelimiter), 1, 30))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PHYSICIAN_PHONE1)), 2, $gSecondaryDelimiter), 1, 30))') ,
 PHYSICIAN_3_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_LAST_NAME)), 3, $gSecondaryDelimiter), 1, 50))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PHYSICIAN_LAST_NAME)), 3, $gSecondaryDelimiter), 1, 50))') ,
 PHYSICIAN_3_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_FIRST_NAME)), 3, $gSecondaryDelimiter), 1, 25))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PHYSICIAN_FIRST_NAME)), 3, $gSecondaryDelimiter), 1, 25))') ,
 PHYSICIAN_3_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_PHONE1)), 3, $gSecondaryDelimiter), 1, 30))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PHYSICIAN_PHONE1)), 3, $gSecondaryDelimiter), 1, 30))') ,
 HOSPITAL_1_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_NAME)), 1, $gSecondaryDelimiter), 1, 50))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HOSPITAL_NAME)), 1, $gSecondaryDelimiter), 1, 50))') ,
 HOSPITAL_1_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_PHONE)), 1, $gSecondaryDelimiter), 1, 30))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HOSPITAL_PHONE)), 1, $gSecondaryDelimiter), 1, 30))') ,
 HOSPITAL_2_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_NAME)), 2, $gSecondaryDelimiter), 1, 50))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HOSPITAL_NAME)), 2, $gSecondaryDelimiter), 1, 50))') ,
 HOSPITAL_2_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_PHONE)), 2, $gSecondaryDelimiter), 1, 30))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HOSPITAL_PHONE)), 2, $gSecondaryDelimiter), 1, 30))') ,
 HOSPITAL_3_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_NAME)), 3, $gSecondaryDelimiter), 1, 50))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HOSPITAL_NAME)), 3, $gSecondaryDelimiter), 1, 50))') ,
 HOSPITAL_3_PHONE VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_PHONE)), 3, $gSecondaryDelimiter), 1, 30))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HOSPITAL_PHONE)), 3, $gSecondaryDelimiter), 1, 30))') ,
 DRIVERS_LIC_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DRIVERS_LIC_NO)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DRIVERS_LIC_NO)))') ,
 DRIVERSLICTYPECODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DRIVERSLICTYPECODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DRIVERSLICTYPECODE)))') ,
 DATE_DRIVERSLICEXP VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_DRIVERSLICEXP)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_DRIVERSLICEXP)))') ,
 DRIVLIC_RSTRCT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DRIVLIC_RSTRCT_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DRIVLIC_RSTRCT_CODE)))') ,
 DRIVLIC_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DRIVLIC_STATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DRIVLIC_STATE)))') ,
 COUNTY_OF_RESIDNC VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.COUNTY_OF_RESIDNC)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.COUNTY_OF_RESIDNC)))') ,
 NCCI_CLASS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NCCI_CLASS_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.NCCI_CLASS_CODE)))') ,
 EST_LEN_DISABILITY INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EST_LEN_DISABILITY)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EST_LEN_DISABILITY)))') ,
 INSURABLE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INSURABLE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.INSURABLE_FLAG)))') ,
 LAST_VERIFIED_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.LAST_VERIFIED_DATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.LAST_VERIFIED_DATE)))') ,
 PATIENT_ACCT_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_ACCT_NO)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PATIENT_ACCT_NO)))') ,
 MEDICAL_RCD_NO VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.MEDICAL_RCD_NO)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.MEDICAL_RCD_NO)))') ,
 INS_PLAN_GROUP_NO VARCHAR(16)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INS_PLAN_GROUP_NO)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.INS_PLAN_GROUP_NO)))') ,
 DATE_OF_ADMISSION VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_OF_ADMISSION)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_OF_ADMISSION)))') ,
 DATE_OF_DISCHARGE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_OF_DISCHARGE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_OF_DISCHARGE)))') ,
 ADM_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ADM_TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ADM_TYPE_CODE)))') ,
 ADM_SOURCE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ADM_SOURCE_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ADM_SOURCE_CODE)))') ,
 ADMISSION_REASON LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv_S3.ADMISSION_REASON))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(Events_csv.ADMISSION_REASON))') ,
 ACUITY_LEVEL_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACUITY_LEVEL_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ACUITY_LEVEL_CODE)))') ,
 PATIENT_STAT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_STAT_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PATIENT_STAT_CODE)))') ,
 PATIENT_COND_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_COND_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PATIENT_COND_CODE)))') ,
 DISCHARGE_DSP_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DISCHARGE_DSP_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DISCHARGE_DSP_CODE)))') ,
 EXP_LENGTH_OF_STAY INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EXP_LENGTH_OF_STAY)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EXP_LENGTH_OF_STAY)))') ,
 EXPECTED_COST DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EXPECTED_COST)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EXPECTED_COST)))') ,
 QI_SIGNIF_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.QI_SIGNIF_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.QI_SIGNIF_CODE)))') ,
 EPISODE_OF_CARE_ID VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EPISODE_OF_CARE_ID)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EPISODE_OF_CARE_ID)))') ,
 PATIENT_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PATIENT_TYPE_CODE)))') ,
 WEIGHT INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WEIGHT)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WEIGHT)))') ,
 EMERGENCY_CONTACT VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EMERGENCY_CONTACT)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EMERGENCY_CONTACT)))') ,
 EMERGENCY_CONT_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EMERGENCY_CONT_NO)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EMERGENCY_CONT_NO)))') ,
 PATIENT_ROOM_NO VARCHAR(14)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_ROOM_NO)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PATIENT_ROOM_NO)))') ,
 FACILITY_UNIT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.FACILITY_UNIT_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.FACILITY_UNIT_CODE)))') ,
 FACILITY_DEPT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.FACILITY_DEPT)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.FACILITY_DEPT)))') ,
 HCO_ID_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HCO_ID_NO)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HCO_ID_NO)))') ,
 HCO_SITE_ID_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HCO_SITE_ID_NO)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HCO_SITE_ID_NO)))') ,
 WHY_AT_FACILITY LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv_S3.WHY_AT_FACILITY))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(Events_csv.WHY_AT_FACILITY))') ,
 DISABILITY_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DISABILITY_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DISABILITY_CODE)))') ,
 EMPLOYEE_NUMBER VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EMPLOYEE_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EMPLOYEE_NUMBER)))') ,
 POSITION_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.POSITION_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.POSITION_CODE)))') ,
 DEPT_ASSIGNED VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DEPT_ASSIGNED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DEPT_ASSIGNED)))') ,
 SUPER_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'substr( word_ext( replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_TAX_ID)),\'-\',\'\'), 1, $gSecondaryDelimiter), 1, 11)', "ui_pasting" = 'substr( word_ext( replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_TAX_ID)),\'-\',\'\'), 1, $gSecondaryDelimiter), 1, 11)') ,
 SUPER_EMP_NO VARCHAR(20)  SET( "ui_mapping_text" = 'substr( word_ext( replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_TAX_ID)),\'-\',\'\'), 2, $gSecondaryDelimiter), 1, 20)', "ui_pasting" = 'substr( word_ext( replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_TAX_ID)),\'-\',\'\'), 2, $gSecondaryDelimiter), 1, 20)') ,
 SUPER_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_LAST_NAME)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_LAST_NAME)))') ,
 SUPER_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_FIRST_NAME)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_FIRST_NAME)))') ,
 SUPER_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_ADDR1)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_ADDR1)))') ,
 SUPER_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_ADDR2)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_ADDR2)))') ,
 SUPER_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_CITY)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_CITY)))') ,
 SUPER_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_STATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_STATE)))') ,
 SUPER_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_ZIP_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_ZIP_CODE)))') ,
 SUPER_PHONE1 VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_PHONE1)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SUPER_PHONE1)))') ,
 FULL_TIME_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.FULL_TIME_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.FULL_TIME_FLAG)))') ,
 PAY_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PAY_TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PAY_TYPE_CODE)))') ,
 HOURLY_RATE DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOURLY_RATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HOURLY_RATE)))') ,
 WEEKLY_HOURS DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WEEKLY_HOURS)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WEEKLY_HOURS)))') ,
 WEEKLY_RATE DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WEEKLY_RATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WEEKLY_RATE)))') ,
 PAY_AMOUNT DECIMAL(20, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PAY_AMOUNT)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PAY_AMOUNT)))') ,
 ACTIVE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTIVE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.ACTIVE_FLAG)))') ,
 DATE_HIRED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_HIRED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_HIRED)))') ,
 DATE_LAST_WORKED_1 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 1, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 1, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_1 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 1, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 1, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_2 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 2, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 2, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_2 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 2, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 2, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_3 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_Ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 3, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_Ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 3, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_3 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 3, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 3, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_4 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 4, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 4, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_4 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_Ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 4, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_Ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 4, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_5 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(f_dds_replace_quote (substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 5, $gSecondaryDelimiter), 1, 8)))', "ui_pasting" = 'f_dds_replace_quote(f_dds_replace_quote (substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 5, $gSecondaryDelimiter), 1, 8)))') ,
 DATE_RETURNED_5 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 5, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 5, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_6 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 6, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 6, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_6 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 6, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 6, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_7 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 7, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 7, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_7 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 7, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 7, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_8 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 8, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 8, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_8 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 8, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 8, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_9 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 9, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 9, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_9 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 9, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 9, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_10 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 10, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 10, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_10 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 10, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 10, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_11 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 11, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 11, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_11 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 11, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 11, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_12 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 12, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 12, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_12 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 12, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 12, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_13 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 13, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 13, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_13 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 13, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 13, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_14 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 14, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 14, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_14 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 14, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 14, $gSecondaryDelimiter), 1, 8))') ,
 DATE_LAST_WORKED_15 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 15, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_LAST_WORKED)), 15, $gSecondaryDelimiter), 1, 8))') ,
 DATE_RETURNED_15 VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 15, $gSecondaryDelimiter), 1, 8))', "ui_pasting" = 'f_dds_replace_quote(substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.DATE_RETURNED)), 15, $gSecondaryDelimiter), 1, 8))') ,
 LOST_WORK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.LOST_WORK_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.LOST_WORK_FLAG)))') ,
 LEN_OF_SVC_DAYS INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.LEN_OF_SVC_DAYS)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.LEN_OF_SVC_DAYS)))') ,
 EXEMPT_STATUS_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EXEMPT_STATUS_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EXEMPT_STATUS_FLAG)))') ,
 NO_OF_EXEMPTIONS INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NO_OF_EXEMPTIONS)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.NO_OF_EXEMPTIONS)))') ,
 WORK_SUN_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_SUN_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORK_SUN_FLAG)))') ,
 WORK_MON_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_MON_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORK_MON_FLAG)))') ,
 WORK_TUE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_TUE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORK_TUE_FLAG)))') ,
 WORK_WED_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_WED_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORK_WED_FLAG)))') ,
 WORK_THU_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_THU_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORK_THU_FLAG)))') ,
 WORK_FRI_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_FRI_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORK_FRI_FLAG)))') ,
 WORK_SAT_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_SAT_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORK_SAT_FLAG)))') ,
 WORKDAY_START_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORKDAY_START_TIME)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORKDAY_START_TIME)))') ,
 WORK_PERMIT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_PERMIT_DATE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORK_PERMIT_DATE)))') ,
 WORK_PERMIT_NUMBER VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_PERMIT_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.WORK_PERMIT_NUMBER)))') ,
 REGULAR_JOB_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REGULAR_JOB_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REGULAR_JOB_FLAG)))') ,
 HIRED_IN_STATE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HIRED_IN_STATE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.HIRED_IN_STATE_FLAG)))') ,
 NUM_OF_VIOLATION INT  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NUM_OF_VIOLATION)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.NUM_OF_VIOLATION)))') ,
 DESC_BY_WITNESS LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv_S3.DESC_BY_WITNESS))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(Events_csv.DESC_BY_WITNESS))') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_Events_csv_S3.USER_FIELD_A))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(Events_csv.USER_FIELD_A))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_B)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_C)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_D)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_E)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_F)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_G)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_H)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_I)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_J)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_K)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_L)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_M)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_N)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_O)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_O)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_P)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_P)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_Q)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_Q)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_R)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_S)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_T)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_U)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_V)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_W)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_X)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_Y)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.USER_FIELD_Y)))') ,
 COND_PRIOR_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.COND_PRIOR_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.COND_PRIOR_CODE)))') ,
 RAIL_POSITION_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RAIL_POSITION_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.RAIL_POSITION_CODE)))') ,
 RESTRAINT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RESTRAINT_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.RESTRAINT_CODE)))') ,
 BED_POSITION_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BED_POSITION_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.BED_POSITION_CODE)))') ,
 CALL_LIGHT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.CALL_LIGHT_CODE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.CALL_LIGHT_CODE)))') ,
 REPORTED_COUNTRY VARCHAR(24)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_COUNTRY)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_COUNTRY)))') ,
 REPORTED_PHONE2 VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_PHONE2)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_PHONE2)))') ,
 REPORTED_FAX VARCHAR(30)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_FAX)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.REPORTED_FAX)))') ,
 PI_MIDDLE_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_MIDDLE_NAME)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PI_MIDDLE_NAME)))') ,
 PRIVACY_CASE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PRIVACY_CASE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.PRIVACY_CASE_FLAG)))') ,
 SHARPS_OBJECT VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SHARPS_OBJECT)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SHARPS_OBJECT)))') ,
 SHARPS_BRAND_MAKE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SHARPS_BRAND_MAKE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SHARPS_BRAND_MAKE)))') ,
 SAFEG_PROVIDED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SAFEG_PROVIDED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.SAFEG_PROVIDED)))') ,
 RULES_NOT_FOLLOWED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RULES_NOT_FOLLOWED)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.RULES_NOT_FOLLOWED)))') ,
 OSHA_ESTAB_EID VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OSHA_ESTAB_EID)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.OSHA_ESTAB_EID)))') ,
 NAME_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NAME_TYPE)))', "ui_pasting" = 'f_dds_replace_quote( ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.NAME_TYPE)))')  )
 AS
SELECT $gJobId,  NULL , 1, 0, 0, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EVENT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EVENT_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EVENT_STATUS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EVENT_IND_CODE))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv_S3.EVENT_DESCRIPTION)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BRIEF_DESCRIPTION))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DEPARTMENT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DEPT_INVOLVED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.COUNTRY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.COUNTY_OF_INJURY))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv_S3.LOCATION_AREA_DESC)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PRIMARY_LOC_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.LOCATION_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ON_PREMISE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NO_OF_INJURIES))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NO_OF_FATALITIES))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.CAUSE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_OF_EVENT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TIME_OF_EVENT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_REPORTED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TIME_REPORTED))), replace_substr(ltrim_blanks(rtrim_blanks(DDS_Events_csv_S3.REPORTED_TAX_ID)), '-', ''), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_PHONE))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv_S3.COMMENTS)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTIVITY_WHEN_INJ))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOW_ACC_OCCURRED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OBJ_SUBST_THAT_INJ))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RECORDABLE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SAFEG_NOTUSED_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SAFEGUARD_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NO_RULES_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_PHYS_ADVISED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TIME_PHYS_ADVISED))), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_Events_csv_S3.ACTION))), 1, '|'), 1, 25), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_Events_csv_S3.ACTION))), 2, '|'), 1, 25), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTION)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTION)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTION)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OUTCOME)), 5, '|'), 1, 25)), ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_TO_FOLLOW_UP)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT_GIVEN))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RELEASE_SIGNED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DEPT_HEAD_ADVISED))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv_S3.PHYS_NOTES)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_CARRIER_NOTIF))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_SUFFIX))), f_dds_replace_quote(replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_TAX_ID)), '-', '')), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_PHONE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.MARITAL_STAT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SEX_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BIRTH_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_OF_DEATH))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ILLNESS_CODE))), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INJURY_CODE)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BODY_PART)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DIAGNOSIS)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.TREATMENT)), 5, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_LAST_NAME)), 1, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_FIRST_NAME)), 1, $gSecondaryDelimiter), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks(rtrim_blanks(DDS_Events_csv_S3.PHYSICIAN_PHONE1)), 1, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_LAST_NAME)), 2, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_FIRST_NAME)), 2, $gSecondaryDelimiter), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_PHONE1)), 2, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_LAST_NAME)), 3, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_FIRST_NAME)), 3, $gSecondaryDelimiter), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PHYSICIAN_PHONE1)), 3, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_NAME)), 1, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_PHONE)), 1, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_NAME)), 2, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_PHONE)), 2, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_NAME)), 3, $gSecondaryDelimiter), 1, 50)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOSPITAL_PHONE)), 3, $gSecondaryDelimiter), 1, 30)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DRIVERS_LIC_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DRIVERSLICTYPECODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_DRIVERSLICEXP))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DRIVLIC_RSTRCT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DRIVLIC_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.COUNTY_OF_RESIDNC))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NCCI_CLASS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EST_LEN_DISABILITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INSURABLE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.LAST_VERIFIED_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_ACCT_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.MEDICAL_RCD_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.INS_PLAN_GROUP_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_OF_ADMISSION))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_OF_DISCHARGE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ADM_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ADM_SOURCE_CODE))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv_S3.ADMISSION_REASON)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACUITY_LEVEL_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_STAT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_COND_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DISCHARGE_DSP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EXP_LENGTH_OF_STAY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EXPECTED_COST))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.QI_SIGNIF_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EPISODE_OF_CARE_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WEIGHT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EMERGENCY_CONTACT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EMERGENCY_CONT_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PATIENT_ROOM_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.FACILITY_UNIT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.FACILITY_DEPT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HCO_ID_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HCO_SITE_ID_NO))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv_S3.WHY_AT_FACILITY)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DISABILITY_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EMPLOYEE_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.POSITION_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DEPT_ASSIGNED))), substr(word_ext(replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_TAX_ID)), '-', ''), 1, $gSecondaryDelimiter), 1, 11), substr(word_ext(replace_substr(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_TAX_ID)), '-', ''), 2, $gSecondaryDelimiter), 1, 20), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SUPER_PHONE1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.FULL_TIME_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PAY_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HOURLY_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WEEKLY_HOURS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WEEKLY_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PAY_AMOUNT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.ACTIVE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_HIRED))), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 1, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 1, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 2, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 2, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 3, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 3, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 4, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 4, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 5, $gSecondaryDelimiter), 1, 8))), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 5, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 6, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 6, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 7, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 7, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 8, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 8, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 9, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 9, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 10, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 10, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 11, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 11, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 12, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 12, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 13, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 13, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 14, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 14, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_LAST_WORKED)), 15, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.DATE_RETURNED)), 15, $gSecondaryDelimiter), 1, 8)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.LOST_WORK_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.LEN_OF_SVC_DAYS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.EXEMPT_STATUS_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NO_OF_EXEMPTIONS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_SUN_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_MON_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_TUE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_WED_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_THU_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_FRI_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_SAT_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORKDAY_START_TIME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_PERMIT_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.WORK_PERMIT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REGULAR_JOB_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.HIRED_IN_STATE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NUM_OF_VIOLATION))), varchar_to_long(f_dds_replace_quote(DDS_Events_csv_S3.DESC_BY_WITNESS)), varchar_to_long(f_dds_replace_quote(DDS_Events_csv_S3.USER_FIELD_A)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.USER_FIELD_Y))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.COND_PRIOR_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RAIL_POSITION_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RESTRAINT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.BED_POSITION_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.CALL_LIGHT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_COUNTRY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_PHONE2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.REPORTED_FAX))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PI_MIDDLE_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.PRIVACY_CASE_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SHARPS_OBJECT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SHARPS_BRAND_MAKE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.SAFEG_PROVIDED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.RULES_NOT_FOLLOWED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.OSHA_ESTAB_EID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_Events_csv_S3.NAME_TYPE))) FROM DDS_Events_csv_S3 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '22', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>319</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '39', "ui_display_name" = '"$gEvents_ImportFile_Name"(DDS_Events_csv_S3)', "x" = '441', "y" = '-541')
GUID::'c507be5e-d2bb-4278-892d-92d6948161ae' READ FILE DDS_Events_csv_S3."$gEvents_ImportFile_Name" OUTPUT(DDS_Events_csv_S3)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'Events_csv', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Mar 22 18:53:42 2018', "ActaValue_3" = 'Thu Mar 22 19:25:05 2018', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_MEDWATCH::'a9ec853c-7712-4081-98d4-a2108ad86cbd'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>388</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '67', "ui_display_name" = 'MO_READ_MedWatch', "x" = '1508', "y" = '-400')
GUID::'bb0a55b4-f6b5-45e2-932e-0397537a941c' CALL TRANSFORM Map_Operation() INPUT(KG_DA_ROW_ID1) OUTPUT(MO_READ_MedWatch()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

ALGUIComment ("InputSchema_WidthProp" = '28', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>328</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '60', "ui_display_name" = 'KG_DA_ROW_ID1', "x" = '1078', "y" = '-399')
GUID::'78b5d19b-b1ca-4a06-a361-c340fd41a3e0' CALL TRANSFORM Key_Generation() INPUT(Q_READ_MedWatch) OUTPUT(KG_DA_ROW_ID1()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_MEDWATCH', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '43', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '226', "Input_Width_Type" = '161', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '148', "Output_Width_Name" = '270', "Output_Width_Type" = '221', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>363</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '61', "ui_acta_from_schema_0" = 'DDS_MedWatch_csv_1', "ui_display_name" = 'Q_READ_MedWatch', "x" = '643', "y" = '-399')
GUID::'47906265-554f-49d8-b02e-7416f6b08e91' CREATE VIEW Q_READ_MedWatch( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL', "ui_pasting" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 UPDATE_ROW INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0') ,
 INPUT_ROW_ID INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0') ,
 EVENT_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EVENT_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(Events_csv.EVENT_NUMBER)))') ,
 UNIT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.UNIT_CODE)))') ,
 DATE_RPTD_FDA VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(  ltrim_blanks_ext(  rtrim_blanks_ext(  DDS_MedWatch_csv_1.DATE_RPTD_FDA)))') ,
 DATE_RPTD_MFG VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(  ltrim_blanks_ext(  rtrim_blanks_ext(  DDS_MedWatch_csv_1.DATE_RPTD_MFG)))') ,
 RPTD_BY_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(  ltrim_blanks_ext(  rtrim_blanks_ext(  DDS_MedWatch_csv_1.RPTD_BY_LAST_NAME
)))') ,
 RPTD_BY_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_FIRST_NAME)))') ,
 RPTD_BY_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_ADDR1)))') ,
 RPTD_BY_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_ADDR2)))') ,
 RPTD_BY_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_CITY)))') ,
 RPTD_BY_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_STATE)))') ,
 RPTD_BY_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_ZIP_CODE)))') ,
 RPTD_BY_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_TAX_ID)))') ,
 RPTD_BY_PRO_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_PRO_FLAG)))') ,
 RPTD_BY_POS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_POS_CODE)))') ,
 RELEVANT_HISTORY LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RELEVANT_HISTORY))))') ,
 LAST_REPORT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.LAST_REPORT_DATE)))') ,
 REPORT_YEAR INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.REPORT_YEAR)))') ,
 REPORT_SERIAL_NO INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.REPORT_SERIAL_NO)))') ,
 ADVERSE_EVENT_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.ADVERSE_EVENT_FLAG)))') ,
 PRODUCT_PROB_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.PRODUCT_PROB_FLAG)))') ,
 LIFE_THREAT_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.LIFE_THREAT_FLAG
)))') ,
 HOSPITALIZ_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.HOSPITALIZ_FLAG)))') ,
 DISABILITY_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DISABILITY_FLAG)))') ,
 CONGENITAL_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.CONGENITAL_FLAG)))') ,
 REQD_INTERV_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.REQD_INTERV_FLAG)))') ,
 FOLLOW_UP_COUNT INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.FOLLOW_UP_COUNT)))') ,
 RPT_MANDATORY INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPT_MANDATORY)))') ,
 MED_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MED_TYPE)))') ,
 MED_NAME VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MED_NAME)))') ,
 DOSE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DOSE)))') ,
 FREQUENCY VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.FREQUENCY)))') ,
 ROUTE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.ROUTE)))') ,
 THERAPY_FROM_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.THERAPY_FROM_DATE
)))') ,
 THERAPY_TO_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.THERAPY_TO_DATE
)))') ,
 DURATION INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DURATION
)))') ,
 LOT_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.LOT_NUMBER
)))') ,
 NDC_NUMBER INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.NDC_NUMBER
)))') ,
 EXPIRATION_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EXPIRATION_DATE
)))') ,
 EVENT_ABATED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EVENT_ABATED
)))') ,
 EVENT_REAPPEARED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EVENT_REAPPEARED
)))') ,
 DIAGNOSIS_TEST VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DIAGNOSIS_TEST)))') ,
 BRAND_NAME VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.BRAND_NAME)))') ,
 EQUIP_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EQUIP_TYPE_CODE)))') ,
 MANUF_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_NAME)))') ,
 MANUF_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_ADDR1
)))') ,
 MANUF_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_ADDR2
)))') ,
 MANUF_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_CITY)))') ,
 MANUF_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_STATE)))') ,
 MANUF_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_ZIP_CODE)))') ,
 MODEL_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MODEL_NUMBER)))') ,
 CATALOG_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.CATALOG_NUMBER)))') ,
 SERIAL_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.SERIAL_NUMBER
)))') ,
 OTHER_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.OTHER_NUMBER

)))') ,
 DEVICE_OPER_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DEVICE_OPER_CODE)))') ,
 IMPLANT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.IMPLANT_DATE)))') ,
 EXPLANT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EXPLANT_DATE)))') ,
 AGE_OF_DEVICE VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.AGE_OF_DEVICE)))') ,
 DEV_AVAIL_FOR_EVAL VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DEV_AVAIL_FOR_EVAL)))') ,
 DEVICE_RETURN_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DEVICE_RETURN_DATE)))') ,
 EQ_LOT_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EQ_LOT_NUMBER)))') ,
 EQ_EXPIRATION_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EQ_EXPIRATION_DATE)))') ,
 TEST_LAB_TEST_1 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 1, \'|\'),1,255))') ,
 TEST_LAB_TEST_2 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 2, \'|\'),1,255))') ,
 TEST_LAB_TEST_3 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 3, \'|\'),1,255))') ,
 TEST_LAB_TEST_4 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 4, \'|\'),1,255))') ,
 TEST_LAB_TEST_5 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 5, \'|\'),1,255))') ,
 TEST_RESULT_1 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 1, \'|\'),1,255))') ,
 TEST_RESULT_2 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 2, \'|\'),1,255))') ,
 TEST_RESULT_3 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 3, \'|\'),1,255))') ,
 TEST_RESULT_4 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 4, \'|\'),1,255))') ,
 TEST_RESULT_5 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 5, \'|\'),1,255))') ,
 TEST_DATE_1 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))),1 , \'|\'),1,8)') ,
 TEST_DATE_2 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))),2, \'|\'),1,8)') ,
 TEST_DATE_3 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))),3 , \'|\'),1,8)') ,
 TEST_DATE_4 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))),4, \'|\'),1,8)') ,
 TEST_DATE_5 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))),5 , \'|\'),1,8)') ,
 CONCOM_PRODUCT_ID_1 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID , 1 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_2 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID , 2 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_3 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID , 3 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_4 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID , 4 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_5 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID , 5 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_6 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID , 6 , \'|\')) , \'int\' )') ,
 CONCOM_FROM_DATE_1 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))),1 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_2 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))),2 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_3 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))),3 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_4 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))),4 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_5 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))),5 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_6 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))),6 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_1 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))),1 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_2 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))),2 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_3 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))),3 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_4 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))),4 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_5 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))),5 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_6 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))),6 , \'|\'),1,8)') ,
 CONCOM_PRODUCT_1 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))),1 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_2 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))),2 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_3 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))),3 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_4 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))),4 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_5 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))),5 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_6 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))),6 , \'|\'),1,40)') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_A))))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_O
)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_P
)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_Q
)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_Y)))') ,
 NAME_TYPE VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.NAME_TYPE)))') ,
 RPTD_BY_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_BIRTH_DT)))') ,
 MANUF_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_BIRTH_DT)))')  )
 AS
SELECT $gJobId,  NULL , 1, 0, 0, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EVENT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.UNIT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DATE_RPTD_FDA))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DATE_RPTD_MFG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_TAX_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_PRO_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_POS_CODE))), varchar_to_long(f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RELEVANT_HISTORY)))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.LAST_REPORT_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.REPORT_YEAR))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.REPORT_SERIAL_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.ADVERSE_EVENT_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.PRODUCT_PROB_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.LIFE_THREAT_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.HOSPITALIZ_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DISABILITY_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.CONGENITAL_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.REQD_INTERV_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.FOLLOW_UP_COUNT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPT_MANDATORY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MED_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MED_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DOSE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.FREQUENCY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.ROUTE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.THERAPY_FROM_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.THERAPY_TO_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DURATION))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.LOT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.NDC_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EXPIRATION_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EVENT_ABATED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EVENT_REAPPEARED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DIAGNOSIS_TEST))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.BRAND_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EQUIP_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MODEL_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.CATALOG_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.SERIAL_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.OTHER_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DEVICE_OPER_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.IMPLANT_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EXPLANT_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.AGE_OF_DEVICE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DEV_AVAIL_FOR_EVAL))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.DEVICE_RETURN_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EQ_LOT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.EQ_EXPIRATION_DATE))), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 1, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 2, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 3, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 4, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_LAB_TEST))), 5, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 1, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 2, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 3, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 4, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_RESULT))), 5, '|'), 1, 255)), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))), 1, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))), 2, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))), 3, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))), 4, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.TEST_DATE))), 5, '|'), 1, 8), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID, 1, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID, 2, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID, 3, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID, 4, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID, 5, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_1.CONCOM_PRODUCT_ID, 6, '|')), 'int'), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))), 1, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))), 2, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))), 3, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))), 4, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))), 5, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_FROM_DATE))), 6, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))), 1, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))), 2, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))), 3, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))), 4, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))), 5, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_TO_DATE))), 6, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))), 1, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))), 2, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))), 3, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))), 4, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))), 5, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_1.CONCOM_PRODUCT))), 6, '|'), 1, 40), varchar_to_long(f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_A)))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.USER_FIELD_Y))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.NAME_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.RPTD_BY_BIRTH_DT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_1.MANUF_BIRTH_DT))) FROM DDS_MedWatch_csv_1 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>447</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '67', "x" = '2122', "y" = '-381')
GUID::'b78842d2-e4b3-4ca8-b9ca-4fa87f001460' LOAD TABLE DS_RMX_STAGING.DBO.DDS_MEDWATCH INPUT(MO_READ_MedWatch)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>347</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '24', "ui_display_name" = '"$gMedWatch_ImportFile_Name"(DDS_MedWatch_csv)', "x" = '184', "y" = '-738')
GUID::'97d18e71-0263-4e22-9af0-d341970cd689' READ FILE DDS_MedWatch_csv."$gMedWatch_ImportFile_Name" OUTPUT(DDS_MedWatch_csv_1)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "root_dir" = '$gFileDirectory', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Mar 22 18:53:42 2018', "ActaValue_3" = 'Mon Sep 25 19:02:52 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_MEDWATCH_S3::'b36950a0-2096-495b-84cd-b1a6aec3ac5a'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>447</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '67', "x" = '1960', "y" = '-21')
GUID::'219af2ca-5b41-4750-8296-8f6aafc588e8' LOAD TABLE DS_RMX_STAGING.DBO.DDS_MEDWATCH INPUT(MO_READ_MedWatch)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '43', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '226', "Input_Width_Type" = '161', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '148', "Output_Width_Name" = '270', "Output_Width_Type" = '221', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>363</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '81', "ui_acta_from_schema_0" = 'DDS_MedWatch_csv_S3', "ui_display_name" = 'Q_READ_MedWatch', "x" = '481', "y" = '-39')
GUID::'53249c3b-5167-44ec-b5d0-480c83695990' CREATE VIEW Q_READ_MedWatch( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL', "ui_pasting" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 UPDATE_ROW INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0') ,
 INPUT_ROW_ID INT  SET( "ui_mapping_text" = '0', "ui_pasting" = '0') ,
 EVENT_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EVENT_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.EVENT_NUMBER)))') ,
 UNIT_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.UNIT_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.UNIT_CODE)))') ,
 DATE_RPTD_FDA VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(  ltrim_blanks_ext(  rtrim_blanks_ext(  DDS_MedWatch_csv_S3.DATE_RPTD_FDA)))', "ui_pasting" = 'f_dds_replace_quote(  ltrim_blanks_ext(  rtrim_blanks_ext(  MedWatch_csv.DATE_RPTD_FDA)))') ,
 DATE_RPTD_MFG VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(  ltrim_blanks_ext(  rtrim_blanks_ext(  DDS_MedWatch_csv_S3.DATE_RPTD_MFG)))', "ui_pasting" = 'f_dds_replace_quote(  ltrim_blanks_ext(  rtrim_blanks_ext(  MedWatch_csv.DATE_RPTD_MFG)))') ,
 RPTD_BY_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(  ltrim_blanks_ext(  rtrim_blanks_ext(  DDS_MedWatch_csv_S3.RPTD_BY_LAST_NAME
)))', "ui_pasting" = 'f_dds_replace_quote(  ltrim_blanks_ext(  rtrim_blanks_ext(  MedWatch_csv.RPTD_BY_LAST_NAME
)))') ,
 RPTD_BY_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_FIRST_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_FIRST_NAME)))') ,
 RPTD_BY_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_ADDR1)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_ADDR1)))') ,
 RPTD_BY_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_ADDR2)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_ADDR2)))') ,
 RPTD_BY_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_CITY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_CITY)))') ,
 RPTD_BY_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_STATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_STATE)))') ,
 RPTD_BY_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_ZIP_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_ZIP_CODE)))') ,
 RPTD_BY_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_TAX_ID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_TAX_ID)))') ,
 RPTD_BY_PRO_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_PRO_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_PRO_FLAG)))') ,
 RPTD_BY_POS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_POS_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_POS_CODE)))') ,
 RELEVANT_HISTORY LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RELEVANT_HISTORY))))', "ui_pasting" = 'varchar_to_long( f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RELEVANT_HISTORY))))') ,
 LAST_REPORT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.LAST_REPORT_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.LAST_REPORT_DATE)))') ,
 REPORT_YEAR INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.REPORT_YEAR)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.REPORT_YEAR)))') ,
 REPORT_SERIAL_NO INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.REPORT_SERIAL_NO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.REPORT_SERIAL_NO)))') ,
 ADVERSE_EVENT_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.ADVERSE_EVENT_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.ADVERSE_EVENT_FLAG)))') ,
 PRODUCT_PROB_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.PRODUCT_PROB_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.PRODUCT_PROB_FLAG)))') ,
 LIFE_THREAT_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.LIFE_THREAT_FLAG
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.LIFE_THREAT_FLAG
)))') ,
 HOSPITALIZ_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.HOSPITALIZ_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.HOSPITALIZ_FLAG)))') ,
 DISABILITY_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DISABILITY_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.DISABILITY_FLAG)))') ,
 CONGENITAL_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.CONGENITAL_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.CONGENITAL_FLAG)))') ,
 REQD_INTERV_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.REQD_INTERV_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.REQD_INTERV_FLAG)))') ,
 FOLLOW_UP_COUNT INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.FOLLOW_UP_COUNT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.FOLLOW_UP_COUNT)))') ,
 RPT_MANDATORY INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPT_MANDATORY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPT_MANDATORY)))') ,
 MED_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MED_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MED_TYPE)))') ,
 MED_NAME VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MED_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MED_NAME)))') ,
 DOSE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DOSE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.DOSE)))') ,
 FREQUENCY VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.FREQUENCY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.FREQUENCY)))') ,
 ROUTE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.ROUTE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.ROUTE)))') ,
 THERAPY_FROM_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.THERAPY_FROM_DATE
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.THERAPY_FROM_DATE
)))') ,
 THERAPY_TO_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.THERAPY_TO_DATE
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.THERAPY_TO_DATE
)))') ,
 DURATION INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DURATION
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.DURATION
)))') ,
 LOT_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.LOT_NUMBER
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.LOT_NUMBER
)))') ,
 NDC_NUMBER INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.NDC_NUMBER
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.NDC_NUMBER
)))') ,
 EXPIRATION_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EXPIRATION_DATE
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.EXPIRATION_DATE
)))') ,
 EVENT_ABATED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EVENT_ABATED
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.EVENT_ABATED
)))') ,
 EVENT_REAPPEARED VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EVENT_REAPPEARED
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.EVENT_REAPPEARED
)))') ,
 DIAGNOSIS_TEST VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DIAGNOSIS_TEST)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.DIAGNOSIS_TEST)))') ,
 BRAND_NAME VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.BRAND_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.BRAND_NAME)))') ,
 EQUIP_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EQUIP_TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.EQUIP_TYPE_CODE)))') ,
 MANUF_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MANUF_NAME)))') ,
 MANUF_ADDR1 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_ADDR1
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MANUF_ADDR1
)))') ,
 MANUF_ADDR2 VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_ADDR2
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MANUF_ADDR2
)))') ,
 MANUF_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_CITY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MANUF_CITY)))') ,
 MANUF_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_STATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MANUF_STATE)))') ,
 MANUF_ZIP_CODE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_ZIP_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MANUF_ZIP_CODE)))') ,
 MODEL_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MODEL_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MODEL_NUMBER)))') ,
 CATALOG_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.CATALOG_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.CATALOG_NUMBER)))') ,
 SERIAL_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.SERIAL_NUMBER
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.SERIAL_NUMBER
)))') ,
 OTHER_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.OTHER_NUMBER

)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.OTHER_NUMBER

)))') ,
 DEVICE_OPER_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DEVICE_OPER_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.DEVICE_OPER_CODE)))') ,
 IMPLANT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.IMPLANT_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.IMPLANT_DATE)))') ,
 EXPLANT_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EXPLANT_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.EXPLANT_DATE)))') ,
 AGE_OF_DEVICE VARCHAR(12)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.AGE_OF_DEVICE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.AGE_OF_DEVICE)))') ,
 DEV_AVAIL_FOR_EVAL VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DEV_AVAIL_FOR_EVAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.DEV_AVAIL_FOR_EVAL)))') ,
 DEVICE_RETURN_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DEVICE_RETURN_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.DEVICE_RETURN_DATE)))') ,
 EQ_LOT_NUMBER VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EQ_LOT_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.EQ_LOT_NUMBER)))') ,
 EQ_EXPIRATION_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EQ_EXPIRATION_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.EQ_EXPIRATION_DATE)))') ,
 TEST_LAB_TEST_1 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 1, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_LAB_TEST))), 1, \'|\'),1,255))') ,
 TEST_LAB_TEST_2 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 2, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_LAB_TEST))), 2, \'|\'),1,255))') ,
 TEST_LAB_TEST_3 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 3, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_LAB_TEST))), 3, \'|\'),1,255))') ,
 TEST_LAB_TEST_4 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 4, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_LAB_TEST))), 4, \'|\'),1,255))') ,
 TEST_LAB_TEST_5 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 5, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_LAB_TEST))), 5, \'|\'),1,255))') ,
 TEST_RESULT_1 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 1, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_RESULT))), 1, \'|\'),1,255))') ,
 TEST_RESULT_2 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 2, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_RESULT))), 2, \'|\'),1,255))') ,
 TEST_RESULT_3 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 3, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_RESULT))), 3, \'|\'),1,255))') ,
 TEST_RESULT_4 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 4, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_RESULT))), 4, \'|\'),1,255))') ,
 TEST_RESULT_5 LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 5, \'|\'),1,255))', "ui_pasting" = 'varchar_to_long( substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_RESULT))), 5, \'|\'),1,255))') ,
 TEST_DATE_1 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))),1 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_DATE))),1 , \'|\'),1,8)') ,
 TEST_DATE_2 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))),2, \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_DATE))),2, \'|\'),1,8)') ,
 TEST_DATE_3 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))),3 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_DATE))),3 , \'|\'),1,8)') ,
 TEST_DATE_4 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))),4, \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_DATE))),4, \'|\'),1,8)') ,
 TEST_DATE_5 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))),5 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.TEST_DATE))),5 , \'|\'),1,8)') ,
 CONCOM_PRODUCT_ID_1 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID , 1 , \'|\')) , \'int\' )', "ui_pasting" = 'cast(f_dds_replace_quote( word_ext(  MedWatch_csv.CONCOM_PRODUCT_ID , 1 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_2 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID , 2 , \'|\')) , \'int\' )', "ui_pasting" = 'cast(f_dds_replace_quote( word_ext(  MedWatch_csv.CONCOM_PRODUCT_ID , 2 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_3 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID , 3 , \'|\')) , \'int\' )', "ui_pasting" = 'cast(f_dds_replace_quote( word_ext(  MedWatch_csv.CONCOM_PRODUCT_ID , 3 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_4 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID , 4 , \'|\')) , \'int\' )', "ui_pasting" = 'cast(f_dds_replace_quote( word_ext(  MedWatch_csv.CONCOM_PRODUCT_ID , 4 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_5 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID , 5 , \'|\')) , \'int\' )', "ui_pasting" = 'cast(f_dds_replace_quote( word_ext(  MedWatch_csv.CONCOM_PRODUCT_ID , 5 , \'|\')) , \'int\' )') ,
 CONCOM_PRODUCT_ID_6 INT  SET( "ui_mapping_text" = 'cast(f_dds_replace_quote( word_ext(  DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID , 6 , \'|\')) , \'int\' )', "ui_pasting" = 'cast(f_dds_replace_quote( word_ext(  MedWatch_csv.CONCOM_PRODUCT_ID , 6 , \'|\')) , \'int\' )') ,
 CONCOM_FROM_DATE_1 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))),1 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_FROM_DATE))),1 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_2 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))),2 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_FROM_DATE))),2 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_3 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))),3 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_FROM_DATE))),3 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_4 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))),4 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_FROM_DATE))),4 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_5 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))),5 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_FROM_DATE))),5 , \'|\'),1,8)') ,
 CONCOM_FROM_DATE_6 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))),6 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_FROM_DATE))),6 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_1 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))),1 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_TO_DATE))),1 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_2 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))),2 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_TO_DATE))),2 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_3 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))),3 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_TO_DATE))),3 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_4 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))),4 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_TO_DATE))),4 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_5 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))),5 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_TO_DATE))),5 , \'|\'),1,8)') ,
 CONCOM_TO_DATE_6 VARCHAR(8)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))),6 , \'|\'),1,8)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_TO_DATE))),6 , \'|\'),1,8)') ,
 CONCOM_PRODUCT_1 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))),1 , \'|\'),1,40)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_PRODUCT))),1 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_2 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))),2 , \'|\'),1,40)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_PRODUCT))),2 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_3 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))),3 , \'|\'),1,40)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_PRODUCT))),3 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_4 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))),4 , \'|\'),1,40)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_PRODUCT))),4 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_5 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))),5 , \'|\'),1,40)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_PRODUCT))),5 , \'|\'),1,40)') ,
 CONCOM_PRODUCT_6 VARCHAR(40)  SET( "ui_mapping_text" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))),6 , \'|\'),1,40)', "ui_pasting" = 'substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(MedWatch_csv.CONCOM_PRODUCT))),6 , \'|\'),1,40)') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long( f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_A))))', "ui_pasting" = 'varchar_to_long( f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_A))))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_B)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_C)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_D)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_E)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_F)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_G)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_H)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_I)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_J)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_K)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_L)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_M)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_N)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_O
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_O
)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_P
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_P
)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_Q
)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_Q
)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_R)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_S)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_T)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_U)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_V)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_W)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_X)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_Y)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.USER_FIELD_Y)))') ,
 NAME_TYPE VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.NAME_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.NAME_TYPE)))') ,
 RPTD_BY_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_BIRTH_DT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.RPTD_BY_BIRTH_DT)))') ,
 MANUF_BIRTH_DT VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_BIRTH_DT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(MedWatch_csv.MANUF_BIRTH_DT)))')  )
 AS
SELECT $gJobId,  NULL , 1, 0, 0, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EVENT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.UNIT_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DATE_RPTD_FDA))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DATE_RPTD_MFG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_TAX_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_PRO_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_POS_CODE))), varchar_to_long(f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RELEVANT_HISTORY)))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.LAST_REPORT_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.REPORT_YEAR))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.REPORT_SERIAL_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.ADVERSE_EVENT_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.PRODUCT_PROB_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.LIFE_THREAT_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.HOSPITALIZ_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DISABILITY_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.CONGENITAL_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.REQD_INTERV_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.FOLLOW_UP_COUNT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPT_MANDATORY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MED_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MED_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DOSE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.FREQUENCY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.ROUTE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.THERAPY_FROM_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.THERAPY_TO_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DURATION))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.LOT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.NDC_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EXPIRATION_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EVENT_ABATED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EVENT_REAPPEARED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DIAGNOSIS_TEST))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.BRAND_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EQUIP_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_ADDR1))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_ADDR2))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_ZIP_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MODEL_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.CATALOG_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.SERIAL_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.OTHER_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DEVICE_OPER_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.IMPLANT_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EXPLANT_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.AGE_OF_DEVICE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DEV_AVAIL_FOR_EVAL))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.DEVICE_RETURN_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EQ_LOT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.EQ_EXPIRATION_DATE))), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 1, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 2, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 3, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 4, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_LAB_TEST))), 5, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 1, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 2, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 3, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 4, '|'), 1, 255)), varchar_to_long(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_RESULT))), 5, '|'), 1, 255)), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))), 1, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))), 2, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))), 3, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))), 4, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.TEST_DATE))), 5, '|'), 1, 8), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID, 1, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID, 2, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID, 3, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID, 4, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID, 5, '|')), 'int'), cast(f_dds_replace_quote(word_ext(DDS_MedWatch_csv_S3.CONCOM_PRODUCT_ID, 6, '|')), 'int'), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))), 1, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))), 2, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))), 3, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))), 4, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))), 5, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_FROM_DATE))), 6, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))), 1, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))), 2, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))), 3, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))), 4, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))), 5, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_TO_DATE))), 6, '|'), 1, 8), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))), 1, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))), 2, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))), 3, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))), 4, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))), 5, '|'), 1, 40), substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(f_dds_replace_quote(DDS_MedWatch_csv_S3.CONCOM_PRODUCT))), 6, '|'), 1, 40), varchar_to_long(f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_A)))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.USER_FIELD_Y))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.NAME_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.RPTD_BY_BIRTH_DT))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_MedWatch_csv_S3.MANUF_BIRTH_DT))) FROM DDS_MedWatch_csv_S3 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '28', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>328</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '60', "ui_display_name" = 'KG_DA_ROW_ID1', "x" = '916', "y" = '-39')
GUID::'df7d8161-21b8-444f-a994-b54f45aba19b' CALL TRANSFORM Key_Generation() INPUT(Q_READ_MedWatch) OUTPUT(KG_DA_ROW_ID1()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_MEDWATCH', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>388</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '67', "ui_display_name" = 'MO_READ_MedWatch', "x" = '1346', "y" = '-40')
GUID::'0c70a3ae-4a7d-4413-91fc-7c578d2747ca' CALL TRANSFORM Map_Operation() INPUT(KG_DA_ROW_ID1) OUTPUT(MO_READ_MedWatch()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>347</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '24', "ui_display_name" = '"$gMedWatch_ImportFile_Name"(DDS_MedWatch_csv_S3)', "x" = '350', "y" = '-322')
GUID::'4e4ee5c7-3c67-4caa-ad86-7e8247ab469b' READ FILE DDS_MedWatch_csv_S3."$gMedWatch_ImportFile_Name" OUTPUT(DDS_MedWatch_csv_S3)
SET("adaptable" = 'no', "cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "number_of_threads" = '<default>', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'yes', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Dec 20 18:25:09 2016', "ActaValue_3" = 'Thu Jan 05 16:17:50 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_PAYMENTS::'e15855a0-f071-4c4e-b6ba-8be4a5606f03'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '208', "Input_Width_Type" = '124', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '546', "Output_Width_Name" = '223', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>357</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '56', "ui_acta_from_schema_0" = 'DDS_PAYMENTS_csv', "ui_display_name" = 'Q_READ_PAYMENT', "x" = '741', "y" = '-319')
GUID::'2120abf4-fad2-4168-a17f-8693015697ff' CREATE VIEW Q_READ_PAYMENT( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1') ,
 RECORD_TYPE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.RECORD_TYPE)))') ,
 TRANSACTION_TYPE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TRANSACTION_TYPE)))') ,
 CLAIM_ID VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLAIM_ID)))') ,
 ACTIVITY_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext( DDS_PAYMENTS_csv.ACTIVITY_DATE)))') ,
 TYPE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TYPE_FLAG)))') ,
 AMOUNT DOUBLE  SET( "ui_mapping_text" = 'DDS_PAYMENTS_csv.AMOUNT') ,
 MEMO VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.MEMO)))') ,
 CARRIER VARCHAR(16)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CARRIER)))') ,
 ADJUSTER VARCHAR(16)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.ADJUSTER)))') ,
 CHECK_NO VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CHECK_NO)))') ,
 CHECK_SUFFIX VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CHECK_SUFFIX)))') ,
 CHECK_STATUS VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CHECK_STATUS)))') ,
 TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TYPE_CODE)))') ,
 PAYEE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_TYPE)))') ,
 PAYEE_TAX_ID_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_TAX_ID_NO)))') ,
 PAYEE_LASTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_LASTNAME)))') ,
 PAYEE_FIRSTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_FIRSTNAME)))') ,
 PAYEE_ADDRESS VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_ADDRESS)))') ,
 PAYEE_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_CITY)))') ,
 PAYEE_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_STATE)))') ,
 PAYEE_ZIP VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_ZIP)))') ,
 TRANSACTION_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TRANSACTION_DATE)))') ,
 REPORT_1099_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.REPORT_1099_FLAG)))') ,
 SERVICE_FROM_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SERVICE_FROM_DATE)))') ,
 SERVICE_TO_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SERVICE_TO_DATE)))') ,
 CLEARED_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLEARED_FLAG)))') ,
 DATE_CLEARED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.DATE_CLEARED)))') ,
 BANK_ACCOUNT_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.BANK_ACCOUNT_NUM)))') ,
 BANK_SUB_ACCNT_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.BANK_SUB_ACCNT_NUM)))') ,
 PAYEE_ADDRESS2 VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_ADDRESS2)))') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_PAYMENTS_csv.USER_FIELD_A))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_O)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_P)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_Q)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_Y)))') ,
 USER_FIELD_Z VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_Z)))') ,
 INVOICE_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.INVOICE_NUMBER)))') ,
 CLAIMANT_SUFFIX NUMERIC(4, 0)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLAIMANT_SUFFIX)))') ,
 RES_STATUS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.RES_STATUS_CODE)))') ,
 UNIT_TYPE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_TYPE)))') ,
 POLICY_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_NAME)))') ,
 UNIT_NUMBER VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_NUMBER)))') ,
 COVERAGE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.COVERAGE_CODE)))') ,
 LOSS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.LOSS_CODE)))') ,
 RESERVE_SUB_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.RESERVE_SUB_TYPE)))') ,
 DISABILITY_CATEGORY VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.DISABILITY_CATEGORY)))') ,
 VOID_CODE_REASON VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.VOID_CODE_REASON)))') ,
 MODULE_NO VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.MODULE_NO)))') ,
 PREFIX VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PREFIX)))') ,
 SUFFIX_COMMON VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SUFFIX_COMMON)))') ,
 SUFFIX_LEGAL VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SUFFIX_LEGAL)))') ,
 MEMO_PHRASE VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.MEMO_PHRASE)))') ,
 CLASS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLASS_CODE)))') ,
 CVG_SEQUENCE_NO VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CVG_SEQUENCE_NO)))') ,
 TRANS_SEQ_NO VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TRANS_SEQ_NO)))') ,
 CVG_DESC VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CVG_DESC)))') ,
 SUBLINE_DESC VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SUBLINE_DESC)))') ,
 CLASS_DESC VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLASS_DESC)))') ,
 STAT_UNIT_NUMBER VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.STAT_UNIT_NUMBER)))') ,
 POLICY_CVG_SEQNO VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_CVG_SEQNO)))') ,
 RESERVE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.RESERVE_TYPE)))') ,
 NAME_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.NAME_TYPE)))') ,
 POLICY_NUMBER VARCHAR(40)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_NUMBER)))') ,
 POLICY_SYMBOL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_SYMBOL)))') ,
 MASTER_COMPANY VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.MASTER_COMPANY)))') ,
 LOCATION_COMPANY VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.LOCATION_COMPANY)))') ,
 DSTRBN_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.DSTRBN_TYPE_CODE)))') ,
 PAYEE_DOB VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_DOB)))') ,
 REGION VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.REGION)))') ,
 BEN_REVIEW_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.BEN_REVIEW_DATE )))') ,
 EOB_REMARKS_CODE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 1, \'|\'),1,25)))') ,
 EOB_REMARKS_CODE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 2, \'|\'),1,25)))') ,
 EOB_REMARKS_CODE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 3, \'|\'),1,25)))') ,
 EOB_REMARKS_CODE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 4, \'|\'),1,25)))') ,
 EOB_REMARKS_CODE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 5, \'|\'),1,25)))') ,
 EOB_PRINTED_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_PRINTED_DATE)))') ,
 EOB_PRINTED_BY_USER VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_PRINTED_BY_USER)))') ,
 UNIT_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_FIRST_NAME)))') ,
 UNIT_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_LAST_NAME)))') ,
 UNIT_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_TAX_ID)))') ,
 UNIT_DOB VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_DOB)))') ,
 CLMNT_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLMNT_LAST_NAME)))') ,
 CLMNT_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLMNT_FIRST_NAME)))') ,
 CLMNT_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLMNT_TAX_ID)))') ,
 EMP_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.EMP_NUM)))') ,
 UNIT_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_ID)))') ,
 PMT_CURR_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_CURR_CODE)))') ,
 PMT_TO_BASE_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_TO_BASE_CURR_RATE)))') ,
 PMT_TO_POL_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_TO_POL_CURR_RATE)))') ,
 PMT_TO_CLM_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_TO_CLM_CURR_RATE)))') ,
 CLM_TO_BASE_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLM_TO_BASE_CURR_RATE)))') ,
 CLM_TO_POL_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLM_TO_POL_CURR_RATE)))')  )
 AS
SELECT $gJobId,  NULL , 1, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.RECORD_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.TRANSACTION_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLAIM_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.ACTIVITY_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.TYPE_FLAG))), DDS_PAYMENTS_csv.AMOUNT, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.MEMO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CARRIER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.ADJUSTER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CHECK_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CHECK_SUFFIX))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CHECK_STATUS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_TAX_ID_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_LASTNAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_FIRSTNAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_ADDRESS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_ZIP))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.TRANSACTION_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.REPORT_1099_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.SERVICE_FROM_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.SERVICE_TO_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLEARED_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.DATE_CLEARED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.BANK_ACCOUNT_NUM))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.BANK_SUB_ACCNT_NUM))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_ADDRESS2))), varchar_to_long(f_dds_replace_quote(DDS_PAYMENTS_csv.USER_FIELD_A)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_Y))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_Z))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.INVOICE_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLAIMANT_SUFFIX))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.RES_STATUS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.COVERAGE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.LOSS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.RESERVE_SUB_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.DISABILITY_CATEGORY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.VOID_CODE_REASON))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.MODULE_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PREFIX))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.SUFFIX_COMMON))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.SUFFIX_LEGAL))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.MEMO_PHRASE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLASS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CVG_SEQUENCE_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.TRANS_SEQ_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CVG_DESC))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.SUBLINE_DESC))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLASS_DESC))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.STAT_UNIT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_CVG_SEQNO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.RESERVE_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.NAME_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_SYMBOL))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.MASTER_COMPANY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.LOCATION_COMPANY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.DSTRBN_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_DOB))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.REGION))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.BEN_REVIEW_DATE))), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 5, '|'), 1, 25)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_PRINTED_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_PRINTED_BY_USER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_TAX_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_DOB))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLMNT_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLMNT_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLMNT_TAX_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EMP_NUM))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_CURR_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_TO_BASE_CURR_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_TO_POL_CURR_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_TO_CLM_CURR_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLM_TO_BASE_CURR_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.CLM_TO_POL_CURR_RATE))) FROM DDS_PAYMENTS_csv 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>294</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "ui_display_name" = 'KG_PAYMENTS', "x" = '1237', "y" = '-316')
GUID::'b2ae399f-7354-4510-b87d-7d23efe54683' CALL TRANSFORM Key_Generation() INPUT(Q_READ_PAYMENT) OUTPUT(KG_PAYMENTS()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_PAYMENT', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '10', "Output_Width_Name" = '246', "Output_Width_Type" = '164', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>297</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '82', "ui_display_name" = 'MO_PAYMENTS', "x" = '1783', "y" = '-315')
GUID::'725a62d5-7c93-419d-a2a7-ca141c9cc446' CALL TRANSFORM Map_Operation() INPUT(KG_PAYMENTS) OUTPUT(MO_PAYMENTS()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>334</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '56', "ui_display_name" = '"$gPayments_ImportFile_Name"(DDS_PAYMENTS_csv)', "x" = '320', "y" = '-306')
GUID::'80d519b7-6720-4e8a-9ac8-c4cf6e2b4e66' READ FILE DDS_PAYMENTS_csv."$gPayments_ImportFile_Name" OUTPUT(DDS_PAYMENTS_csv)
SET("adaptable" = 'yes', "cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_log_data_conversion_warnings" = 'no', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "table_weight" = '0', "transfer_custom" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '332', "Output_Width_Type" = '143', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>441</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '83', "x" = '2274', "y" = '-316')
GUID::'dbea2840-80b7-4819-88ff-9e8f4ae0ad12' LOAD TABLE DS_RMX_STAGING.DBO.DDS_PAYMENT INPUT(MO_PAYMENTS)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:56 2017', "ActaValue_3" = 'Mon Sep 25 19:02:52 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_PAYMENTS_S3::'7045d575-338e-4269-a747-a9b2ffc61c49'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '332', "Output_Width_Type" = '143', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>441</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '83', "x" = '1954', "y" = '-10')
GUID::'398ac5ce-b0ff-4118-a69e-6e3386448fab' LOAD TABLE DS_RMX_STAGING.DBO.DDS_PAYMENT INPUT(MO_PAYMENTS)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '10', "Output_Width_Name" = '246', "Output_Width_Type" = '164', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>297</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '82', "ui_display_name" = 'MO_PAYMENTS', "x" = '1463', "y" = '-9')
GUID::'3df6864e-b77f-4a46-a738-f56a4f3c1265' CALL TRANSFORM Map_Operation() INPUT(KG_PAYMENTS) OUTPUT(MO_PAYMENTS()
)
SET("delete" = 'discard', "insert" = 'discard', "normal" = 'insert', "update" = 'discard');

ALGUIComment ("InputSchema_WidthProp" = '53', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>294</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '63', "ui_display_name" = 'KG_PAYMENTS', "x" = '917', "y" = '-10')
GUID::'fa308fc9-6eff-47ac-8c5a-6a34dccbf0c7' CALL TRANSFORM Key_Generation() INPUT(Q_READ_PAYMENT) OUTPUT(KG_PAYMENTS()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'DA_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_PAYMENT', "table_owner" = 'DBO', "table_schema" = '');

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '208', "Input_Width_Type" = '124', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '546', "Output_Width_Name" = '223', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>357</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '56', "ui_acta_from_schema_0" = 'DDS_PAYMENTS_csv_S3', "ui_display_name" = 'Q_READ_PAYMENT', "x" = '549', "y" = '-260')
GUID::'c9bf57f2-f61f-4583-b503-e17475ce5e95' CREATE VIEW Q_READ_PAYMENT( JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId') ,
 DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'NULL', "ui_pasting" = 'NULL') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 RECORD_TYPE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.RECORD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.RECORD_TYPE)))') ,
 TRANSACTION_TYPE VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TRANSACTION_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TRANSACTION_TYPE)))') ,
 CLAIM_ID VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLAIM_ID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLAIM_ID)))') ,
 ACTIVITY_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext( DDS_PAYMENTS_csv_S3.ACTIVITY_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext( DDS_PAYMENTS_csv.ACTIVITY_DATE)))') ,
 TYPE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TYPE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TYPE_FLAG)))') ,
 AMOUNT DOUBLE  SET( "ui_mapping_text" = 'DDS_PAYMENTS_csv_S3.AMOUNT', "ui_pasting" = 'DDS_PAYMENTS_csv.AMOUNT') ,
 MEMO VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.MEMO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.MEMO)))') ,
 CARRIER VARCHAR(16)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CARRIER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CARRIER)))') ,
 ADJUSTER VARCHAR(16)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.ADJUSTER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.ADJUSTER)))') ,
 CHECK_NO VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CHECK_NO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CHECK_NO)))') ,
 CHECK_SUFFIX VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CHECK_SUFFIX)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CHECK_SUFFIX)))') ,
 CHECK_STATUS VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CHECK_STATUS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CHECK_STATUS)))') ,
 TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TYPE_CODE)))') ,
 PAYEE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_TYPE)))') ,
 PAYEE_TAX_ID_NO VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_TAX_ID_NO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_TAX_ID_NO)))') ,
 PAYEE_LASTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_LASTNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_LASTNAME)))') ,
 PAYEE_FIRSTNAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_FIRSTNAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_FIRSTNAME)))') ,
 PAYEE_ADDRESS VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_ADDRESS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_ADDRESS)))') ,
 PAYEE_CITY VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_CITY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_CITY)))') ,
 PAYEE_STATE VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_STATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_STATE)))') ,
 PAYEE_ZIP VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_ZIP)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_ZIP)))') ,
 TRANSACTION_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TRANSACTION_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TRANSACTION_DATE)))') ,
 REPORT_1099_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.REPORT_1099_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.REPORT_1099_FLAG)))') ,
 SERVICE_FROM_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SERVICE_FROM_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SERVICE_FROM_DATE)))') ,
 SERVICE_TO_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SERVICE_TO_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SERVICE_TO_DATE)))') ,
 CLEARED_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLEARED_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLEARED_FLAG)))') ,
 DATE_CLEARED VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.DATE_CLEARED)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.DATE_CLEARED)))') ,
 BANK_ACCOUNT_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.BANK_ACCOUNT_NUM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.BANK_ACCOUNT_NUM)))') ,
 BANK_SUB_ACCNT_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.BANK_SUB_ACCNT_NUM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.BANK_SUB_ACCNT_NUM)))') ,
 PAYEE_ADDRESS2 VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_ADDRESS2)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_ADDRESS2)))') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_PAYMENTS_csv_S3.USER_FIELD_A))', "ui_pasting" = 'VARCHAR_TO_LONG(f_dds_replace_quote(DDS_PAYMENTS_csv.USER_FIELD_A))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_B)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_C)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_D)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_E)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_F)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_G)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_H)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_I)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_J)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_K)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_L)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_M)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_N)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_O)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_O)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_P)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_P)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_Q)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_Q)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_R)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_S)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_T)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_U)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_V)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_W)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_X)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_Y)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_Y)))') ,
 USER_FIELD_Z VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_Z)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.USER_FIELD_Z)))') ,
 INVOICE_NUMBER VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.INVOICE_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.INVOICE_NUMBER)))') ,
 CLAIMANT_SUFFIX NUMERIC(4, 0)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLAIMANT_SUFFIX)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLAIMANT_SUFFIX)))') ,
 RES_STATUS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.RES_STATUS_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.RES_STATUS_CODE)))') ,
 UNIT_TYPE VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_TYPE)))') ,
 POLICY_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.POLICY_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_NAME)))') ,
 UNIT_NUMBER VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_NUMBER)))') ,
 COVERAGE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.COVERAGE_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.COVERAGE_CODE)))') ,
 LOSS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.LOSS_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.LOSS_CODE)))') ,
 RESERVE_SUB_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.RESERVE_SUB_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.RESERVE_SUB_TYPE)))') ,
 DISABILITY_CATEGORY VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.DISABILITY_CATEGORY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.DISABILITY_CATEGORY)))') ,
 VOID_CODE_REASON VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.VOID_CODE_REASON)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.VOID_CODE_REASON)))') ,
 MODULE_NO VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.MODULE_NO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.MODULE_NO)))') ,
 PREFIX VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PREFIX)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PREFIX)))') ,
 SUFFIX_COMMON VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SUFFIX_COMMON)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SUFFIX_COMMON)))') ,
 SUFFIX_LEGAL VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SUFFIX_LEGAL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SUFFIX_LEGAL)))') ,
 MEMO_PHRASE VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.MEMO_PHRASE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.MEMO_PHRASE)))') ,
 CLASS_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLASS_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLASS_CODE)))') ,
 CVG_SEQUENCE_NO VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CVG_SEQUENCE_NO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CVG_SEQUENCE_NO)))') ,
 TRANS_SEQ_NO VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TRANS_SEQ_NO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.TRANS_SEQ_NO)))') ,
 CVG_DESC VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CVG_DESC)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CVG_DESC)))') ,
 SUBLINE_DESC VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SUBLINE_DESC)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.SUBLINE_DESC)))') ,
 CLASS_DESC VARCHAR(100)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLASS_DESC)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLASS_DESC)))') ,
 STAT_UNIT_NUMBER VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.STAT_UNIT_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.STAT_UNIT_NUMBER)))') ,
 POLICY_CVG_SEQNO VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.POLICY_CVG_SEQNO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_CVG_SEQNO)))') ,
 RESERVE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.RESERVE_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.RESERVE_TYPE)))') ,
 NAME_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.NAME_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.NAME_TYPE)))') ,
 POLICY_NUMBER VARCHAR(40)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.POLICY_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_NUMBER)))') ,
 POLICY_SYMBOL VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.POLICY_SYMBOL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.POLICY_SYMBOL)))') ,
 MASTER_COMPANY VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.MASTER_COMPANY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.MASTER_COMPANY)))') ,
 LOCATION_COMPANY VARCHAR(10)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.LOCATION_COMPANY)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.LOCATION_COMPANY)))') ,
 DSTRBN_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.DSTRBN_TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.DSTRBN_TYPE_CODE)))') ,
 PAYEE_DOB VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_DOB)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PAYEE_DOB)))') ,
 REGION VARCHAR(4)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.REGION)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.REGION)))') ,
 BEN_REVIEW_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.BEN_REVIEW_DATE )))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.BEN_REVIEW_DATE )))') ,
 EOB_REMARKS_CODE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 1, \'|\'),1,25)))', "ui_pasting" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 1, \'|\'),1,25)))') ,
 EOB_REMARKS_CODE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 2, \'|\'),1,25)))', "ui_pasting" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 2, \'|\'),1,25)))') ,
 EOB_REMARKS_CODE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 3, \'|\'),1,25)))', "ui_pasting" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 3, \'|\'),1,25)))') ,
 EOB_REMARKS_CODE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 4, \'|\'),1,25)))', "ui_pasting" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 4, \'|\'),1,25)))') ,
 EOB_REMARKS_CODE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 5, \'|\'),1,25)))', "ui_pasting" = 'f_dds_replace_quote((substr( word_ext( ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_REMARKS_CODE)), 5, \'|\'),1,25)))') ,
 EOB_PRINTED_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_PRINTED_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_PRINTED_DATE)))') ,
 EOB_PRINTED_BY_USER VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_PRINTED_BY_USER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.EOB_PRINTED_BY_USER)))') ,
 UNIT_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_FIRST_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_FIRST_NAME)))') ,
 UNIT_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_LAST_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_LAST_NAME)))') ,
 UNIT_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_TAX_ID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_TAX_ID)))') ,
 UNIT_DOB VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_DOB)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_DOB)))') ,
 CLMNT_LAST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLMNT_LAST_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLMNT_LAST_NAME)))') ,
 CLMNT_FIRST_NAME VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLMNT_FIRST_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLMNT_FIRST_NAME)))') ,
 CLMNT_TAX_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLMNT_TAX_ID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLMNT_TAX_ID)))') ,
 EMP_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EMP_NUM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.EMP_NUM)))') ,
 UNIT_ID VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_ID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.UNIT_ID)))') ,
 PMT_CURR_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PMT_CURR_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_CURR_CODE)))') ,
 PMT_TO_BASE_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PMT_TO_BASE_CURR_RATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_TO_BASE_CURR_RATE)))') ,
 PMT_TO_POL_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PMT_TO_POL_CURR_RATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_TO_POL_CURR_RATE)))') ,
 PMT_TO_CLM_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PMT_TO_CLM_CURR_RATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.PMT_TO_CLM_CURR_RATE)))') ,
 CLM_TO_BASE_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLM_TO_BASE_CURR_RATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLM_TO_BASE_CURR_RATE)))') ,
 CLM_TO_POL_CURR_RATE NUMERIC(16, 2)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLM_TO_POL_CURR_RATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks_ext( rtrim_blanks_ext(DDS_PAYMENTS_csv.CLM_TO_POL_CURR_RATE)))')  )
 AS
SELECT $gJobId,  NULL , 1, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.RECORD_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TRANSACTION_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLAIM_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.ACTIVITY_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TYPE_FLAG))), DDS_PAYMENTS_csv_S3.AMOUNT, f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.MEMO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CARRIER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.ADJUSTER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CHECK_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CHECK_SUFFIX))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CHECK_STATUS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_TAX_ID_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_LASTNAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_FIRSTNAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_ADDRESS))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_CITY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_STATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_ZIP))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TRANSACTION_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.REPORT_1099_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SERVICE_FROM_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SERVICE_TO_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLEARED_FLAG))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.DATE_CLEARED))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.BANK_ACCOUNT_NUM))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.BANK_SUB_ACCNT_NUM))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_ADDRESS2))), varchar_to_long(f_dds_replace_quote(DDS_PAYMENTS_csv_S3.USER_FIELD_A)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_Y))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.USER_FIELD_Z))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.INVOICE_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLAIMANT_SUFFIX))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.RES_STATUS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.POLICY_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.COVERAGE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.LOSS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.RESERVE_SUB_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.DISABILITY_CATEGORY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.VOID_CODE_REASON))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.MODULE_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PREFIX))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SUFFIX_COMMON))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SUFFIX_LEGAL))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.MEMO_PHRASE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLASS_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CVG_SEQUENCE_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.TRANS_SEQ_NO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CVG_DESC))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.SUBLINE_DESC))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLASS_DESC))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.STAT_UNIT_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.POLICY_CVG_SEQNO))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.RESERVE_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.NAME_TYPE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.POLICY_NUMBER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.POLICY_SYMBOL))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.MASTER_COMPANY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.LOCATION_COMPANY))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.DSTRBN_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PAYEE_DOB))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.REGION))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.BEN_REVIEW_DATE))), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 1, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 2, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 3, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 4, '|'), 1, 25)), f_dds_replace_quote(substr(word_ext(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_REMARKS_CODE)), 5, '|'), 1, 25)), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_PRINTED_DATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EOB_PRINTED_BY_USER))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_TAX_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_DOB))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLMNT_LAST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLMNT_FIRST_NAME))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLMNT_TAX_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.EMP_NUM))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.UNIT_ID))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PMT_CURR_CODE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PMT_TO_BASE_CURR_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PMT_TO_POL_CURR_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.PMT_TO_CLM_CURR_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLM_TO_BASE_CURR_RATE))), f_dds_replace_quote(ltrim_blanks_ext(rtrim_blanks_ext(DDS_PAYMENTS_csv_S3.CLM_TO_POL_CURR_RATE))) FROM DDS_PAYMENTS_csv_S3 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>334</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '56', "ui_display_name" = '"$gPayments_ImportFile_Name"(DDS_PAYMENTS_csv_S3)', "x" = '222', "y" = '-506')
GUID::'76afaccb-ce20-4410-bd59-cdb9aa172fed' READ FILE DDS_PAYMENTS_csv_S3."$gPayments_ImportFile_Name" OUTPUT(DDS_PAYMENTS_csv_S3)
SET("adaptable" = 'yes', "cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "number_of_threads" = '<default>', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:56 2017', "ActaValue_3" = 'Mon Sep 18 12:32:42 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_STD_CLASS::'ebbb9a18-79b1-47ed-9395-e7e3536f6d82'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '261', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '378', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '69', "x" = '1941', "y" = '-760')
GUID::'6a23d321-e1e2-42ba-a219-63e830fddb40' LOAD TABLE DS_RMX_STAGING.DBO.DDS_STD_CLASS INPUT(Q_READ_STD_CLASS)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '261', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '545', "Output_Width_Name" = '328', "Output_Width_Type" = '152', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '69', "ui_acta_from_schema_0" = 'DDS_Short_Term_Disability_Class', "ui_display_name" = 'Q_READ_STD_CLASS', "x" = '963', "y" = '-879')
GUID::'7e24f08d-6f39-4071-acc5-4acf1e007a95' CREATE VIEW Q_READ_STD_CLASS( DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'key_generation(DS_RMX_STAGING.DBO.DDS_STD_CLASS,\'DA_ROW_ID\',1)') ,
 JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1') ,
 CLASS_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.CLASS_NAME)))') ,
 CLASS_DESC VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.CLASS_DESC)))') ,
 PLAN_NUMBER VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.PLAN_NUMBER)))') ,
 ELIG_BENE_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ELIG_BENE_PRD)))') ,
 BENE_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_PRD_TYPE)))') ,
 BENE_FROM_DT_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_FROM_DT_TYPE)))') ,
 DIS_WAIT_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_WAIT_PRD)))') ,
 DIS_CLNDR_WRK_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_CLNDR_WRK_TYPE)))') ,
 DIS_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_PRD_TYPE)))') ,
 DIS_MAX_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_MAX_PRD)))') ,
 DIS_MAX_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_MAX_PRD_TYPE)))') ,
 FROM_DIS_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.FROM_DIS_PRD_TYPE)))') ,
 ALLOW_EXT VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALLOW_EXT)))') ,
 EXTEND_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.EXTEND_PRD)))') ,
 EXTEND_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.EXTEND_PRD_TYPE)))') ,
 MAX_TOT_DIS_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.MAX_TOT_DIS_PRD)))') ,
 MAX_TOT_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.MAX_TOT_PRD_TYPE)))') ,
 ACTUAL_WORK_WEEK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ACTUAL_WORK_WEEK_FLAG)))') ,
 DAY7_WORK_WEEK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DAY7_WORK_WEEK_FLAG)))') ,
 DAY5_WORK_WEEK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DAY5_WORK_WEEK_FLAG)))') ,
 OTHER_WORK_WEEK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.OTHER_WORK_WEEK_FLAG)))') ,
 OTHER_DAYS INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.OTHER_DAYS)))') ,
 BENE_PRCTG_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_PRCTG_FLAG)))') ,
 BENE_PER_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_PER_AMT)))') ,
 BENE_FLAT_AMT_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_FLAT_AMT_FLAG)))') ,
 BENE_FLAT_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_FLAT_AMT)))') ,
 BENE_TD_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_TD_FLAG)))') ,
 BENE_BASED_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_BASED_TYPE)))') ,
 WITHHOLD_FED_ITAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WITHHOLD_FED_ITAX_FLAG)))') ,
 WITHHOLD_FICA_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WITHHOLD_FICA_FLAG)))') ,
 WEEKLY_BENE_CAP DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENE_CAP)))') ,
 MAX_BEN_PER_CLAIM DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.MAX_BEN_PER_CLAIM)))') ,
 MAX_BEN_PER_CAL_YR DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.MAX_BEN_PER_CAL_YR)))') ,
 WAGE_FOR_DIS_PRD DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGE_FOR_DIS_PRD)))') ,
 WAGE_FOR_CAL_YR DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGE_FOR_CAL_YR)))') ,
 TAXABLE_PERCENT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.TAXABLE_PERCENT)))') ,
 WITHHOLD_MEDICARE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WITHHOLD_MEDICARE_FLAG)))') ,
 WITHHOLD_STATE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WITHHOLD_STATE_FLAG)))') ,
 USE_VOUCHERS_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.USE_VOUCHERS_FLAG)))') ,
 ALT_WAIT_DIS_TYPE VARCHAR(207)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)))') ,
 ALT_WAIT_DIS_TYPE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),1,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),2,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),3,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),4,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),5,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_6 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),6,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_7 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),7,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_8 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),8,\'|\'))') ,
 ALT_WAIT_DIS_PRD VARCHAR(39)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)))') ,
 ALT_WAIT_DIS_PRD_VAL_1 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),1,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_2 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),2,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_3 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),3,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_4 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),4,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_5 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),5,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_6 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),6,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_7 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),7,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_8 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),8,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE VARCHAR(207)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),1,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),2,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),3,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),4,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),5,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_6 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),6,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_7 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),7,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_8 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),8,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE VARCHAR(207)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)))') ,
 ALT_WAIT_DIS_PRD_TYPE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),1,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),2,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),3,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),4,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),5,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_6 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),6,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_7 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),7,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_8 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),8,\'|\'))') ,
 WAGES_FROM VARCHAR(71)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)))') ,
 WAGES_FROM_1 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)),1,\'|\'))') ,
 WAGES_FROM_2 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)),2,\'|\'))') ,
 WAGES_FROM_3 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)),3,\'|\'))') ,
 WAGES_FROM_4 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)),4,\'|\'))') ,
 WAGES_FROM_5 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)),5,\'|\'))') ,
 WAGES_FROM_6 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)),6,\'|\'))') ,
 WAGES_FROM_7 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)),7,\'|\'))') ,
 WAGES_FROM_8 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)),8,\'|\'))') ,
 WAGES_TO VARCHAR(71)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)))') ,
 WAGES_TO_1 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)),1,\'|\'))') ,
 WAGES_TO_2 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)),2,\'|\'))') ,
 WAGES_TO_3 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)),3,\'|\'))') ,
 WAGES_TO_4 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)),4,\'|\'))') ,
 WAGES_TO_5 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)),5,\'|\'))') ,
 WAGES_TO_6 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)),6,\'|\'))') ,
 WAGES_TO_7 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)),7,\'|\'))') ,
 WAGES_TO_8 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)),8,\'|\'))') ,
 WEEKLY_BENEFIT VARCHAR(71)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)))') ,
 WEEKLY_BENEFIT_1 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)),1,\'|\'))') ,
 WEEKLY_BENEFIT_2 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)),2,\'|\'))') ,
 WEEKLY_BENEFIT_3 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)),3,\'|\'))') ,
 WEEKLY_BENEFIT_4 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)),4,\'|\'))') ,
 WEEKLY_BENEFIT_5 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)),5,\'|\'))') ,
 WEEKLY_BENEFIT_6 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)),6,\'|\'))') ,
 WEEKLY_BENEFIT_7 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)),7,\'|\'))') ,
 WEEKLY_BENEFIT_8 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)),8,\'|\'))') ,
 DAY30_WORK_MONTH_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DAY30_WORK_MONTH_FLAG)))') ,
 ACTUAL_MONTH_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ACTUAL_MONTH_FLAG)))') ,
 UPPER_AGE_LIMIT INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.UPPER_AGE_LIMIT)))') ,
 LOWER_AGE_LIMIT INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.LOWER_AGE_LIMIT)))') ,
 SUPP_PERCENT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_PERCENT)))') ,
 SUPP_FLAT_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_FLAT_AMT)))') ,
 SUPP_BANK_ACC_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_BANK_ACC_NAME)))') ,
 SUPP_SUB_ACC_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_SUB_ACC_NAME)))') ,
 SUPP_TR_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_TR_TYPE_CODE)))') ,
 SUPP_SEP_PAY_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_SEP_PAY_FLAG)))') ,
 PENSION_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.PENSION_AMT)))') ,
 SS_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SS_AMT)))') ,
 OTHER_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.OTHER_AMT)))') ,
 PRORATE_OFF_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.PRORATE_OFF_FLAG)))') ,
 FULLPAY_ONLY_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.FULLPAY_ONLY_FLAG)))')  )
 AS
SELECT key_generation(DS_RMX_STAGING.DBO.DDS_STD_CLASS, 'DA_ROW_ID', 1) , $gJobId, 1, f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.CLASS_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.CLASS_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.PLAN_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ELIG_BENE_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_FROM_DT_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_WAIT_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_CLNDR_WRK_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_MAX_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DIS_MAX_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.FROM_DIS_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALLOW_EXT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.EXTEND_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.EXTEND_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.MAX_TOT_DIS_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.MAX_TOT_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ACTUAL_WORK_WEEK_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DAY7_WORK_WEEK_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DAY5_WORK_WEEK_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.OTHER_WORK_WEEK_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.OTHER_DAYS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_PRCTG_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_PER_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_FLAT_AMT_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_FLAT_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_TD_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.BENE_BASED_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WITHHOLD_FED_ITAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WITHHOLD_FICA_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENE_CAP))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.MAX_BEN_PER_CLAIM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.MAX_BEN_PER_CAL_YR))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGE_FOR_DIS_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGE_FOR_CAL_YR))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.TAXABLE_PERCENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WITHHOLD_MEDICARE_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WITHHOLD_STATE_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.USE_VOUCHERS_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_FROM)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WAGES_TO)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.WEEKLY_BENEFIT)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.DAY30_WORK_MONTH_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.ACTUAL_MONTH_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.UPPER_AGE_LIMIT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.LOWER_AGE_LIMIT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_PERCENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_FLAT_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_BANK_ACC_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_SUB_ACC_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_TR_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SUPP_SEP_PAY_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.PENSION_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.SS_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.OTHER_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.PRORATE_OFF_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class.FULLPAY_ONLY_FLAG))) FROM DDS_Short_Term_Disability_Class 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>341</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '69', "x" = '625', "y" = '-841')
GUID::'e9cc18db-8edf-4426-9d84-0deb8650a9a1' READ FILE DDS_Short_Term_Disability_Class."$gSTD_Class_ImportFile_Name" OUTPUT(DDS_Short_Term_Disability_Class)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "root_dir" = '$gFileDirectory', "table_weight" = '0', "transfer_custom" = 'no');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:56 2017', "ActaValue_3" = 'Mon Sep 25 19:17:55 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_STD_CLASS_S3::'260a0276-56fc-467e-a723-ce785cebda5e'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '50', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '261', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '545', "Output_Width_Name" = '328', "Output_Width_Type" = '152', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '69', "ui_acta_from_schema_0" = 'DDS_Short_Term_Disability_Class_S3N', "ui_display_name" = 'Q_READ_STD_CLASS', "x" = '828', "y" = '-482')
GUID::'5fc83add-e837-41c1-871a-51597f272718' CREATE VIEW Q_READ_STD_CLASS( DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'key_generation(DS_RMX_STAGING.DBO.DDS_STD_CLASS,\'DA_ROW_ID\',1)', "ui_pasting" = 'key_generation(DS_RMX_STAGING.DBO.DDS_STD_CLASS,\'DA_ROW_ID\',1)') ,
 JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 CLASS_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.CLASS_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.CLASS_NAME)))') ,
 CLASS_DESC VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.CLASS_DESC)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.CLASS_DESC)))') ,
 PLAN_NUMBER VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.PLAN_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.PLAN_NUMBER)))') ,
 ELIG_BENE_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ELIG_BENE_PRD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ELIG_BENE_PRD)))') ,
 BENE_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_PRD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.BENE_PRD_TYPE)))') ,
 BENE_FROM_DT_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_FROM_DT_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.BENE_FROM_DT_TYPE)))') ,
 DIS_WAIT_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_WAIT_PRD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.DIS_WAIT_PRD)))') ,
 DIS_CLNDR_WRK_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_CLNDR_WRK_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.DIS_CLNDR_WRK_TYPE)))') ,
 DIS_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_PRD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.DIS_PRD_TYPE)))') ,
 DIS_MAX_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_MAX_PRD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.DIS_MAX_PRD)))') ,
 DIS_MAX_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_MAX_PRD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.DIS_MAX_PRD_TYPE)))') ,
 FROM_DIS_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.FROM_DIS_PRD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.FROM_DIS_PRD_TYPE)))') ,
 ALLOW_EXT VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALLOW_EXT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALLOW_EXT)))') ,
 EXTEND_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.EXTEND_PRD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.EXTEND_PRD)))') ,
 EXTEND_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.EXTEND_PRD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.EXTEND_PRD_TYPE)))') ,
 MAX_TOT_DIS_PRD INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.MAX_TOT_DIS_PRD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.MAX_TOT_DIS_PRD)))') ,
 MAX_TOT_PRD_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.MAX_TOT_PRD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.MAX_TOT_PRD_TYPE)))') ,
 ACTUAL_WORK_WEEK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ACTUAL_WORK_WEEK_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ACTUAL_WORK_WEEK_FLAG)))') ,
 DAY7_WORK_WEEK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DAY7_WORK_WEEK_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.DAY7_WORK_WEEK_FLAG)))') ,
 DAY5_WORK_WEEK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DAY5_WORK_WEEK_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.DAY5_WORK_WEEK_FLAG)))') ,
 OTHER_WORK_WEEK_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.OTHER_WORK_WEEK_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.OTHER_WORK_WEEK_FLAG)))') ,
 OTHER_DAYS INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.OTHER_DAYS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.OTHER_DAYS)))') ,
 BENE_PRCTG_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_PRCTG_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.BENE_PRCTG_FLAG)))') ,
 BENE_PER_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_PER_AMT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.BENE_PER_AMT)))') ,
 BENE_FLAT_AMT_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_FLAT_AMT_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.BENE_FLAT_AMT_FLAG)))') ,
 BENE_FLAT_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_FLAT_AMT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.BENE_FLAT_AMT)))') ,
 BENE_TD_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_TD_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.BENE_TD_FLAG)))') ,
 BENE_BASED_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_BASED_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.BENE_BASED_TYPE)))') ,
 WITHHOLD_FED_ITAX_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WITHHOLD_FED_ITAX_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WITHHOLD_FED_ITAX_FLAG)))') ,
 WITHHOLD_FICA_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WITHHOLD_FICA_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WITHHOLD_FICA_FLAG)))') ,
 WEEKLY_BENE_CAP DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENE_CAP)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENE_CAP)))') ,
 MAX_BEN_PER_CLAIM DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.MAX_BEN_PER_CLAIM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.MAX_BEN_PER_CLAIM)))') ,
 MAX_BEN_PER_CAL_YR DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.MAX_BEN_PER_CAL_YR)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.MAX_BEN_PER_CAL_YR)))') ,
 WAGE_FOR_DIS_PRD DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGE_FOR_DIS_PRD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGE_FOR_DIS_PRD)))') ,
 WAGE_FOR_CAL_YR DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGE_FOR_CAL_YR)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGE_FOR_CAL_YR)))') ,
 TAXABLE_PERCENT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.TAXABLE_PERCENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.TAXABLE_PERCENT)))') ,
 WITHHOLD_MEDICARE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WITHHOLD_MEDICARE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WITHHOLD_MEDICARE_FLAG)))') ,
 WITHHOLD_STATE_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WITHHOLD_STATE_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WITHHOLD_STATE_FLAG)))') ,
 USE_VOUCHERS_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.USE_VOUCHERS_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.USE_VOUCHERS_FLAG)))') ,
 ALT_WAIT_DIS_TYPE VARCHAR(207)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)))') ,
 ALT_WAIT_DIS_TYPE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)),1,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),1,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)),2,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),2,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)),3,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),3,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)),4,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),4,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)),5,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),5,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_6 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)),6,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),6,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_7 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)),7,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),7,\'|\'))') ,
 ALT_WAIT_DIS_TYPE_8 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)),8,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_TYPE)),8,\'|\'))') ,
 ALT_WAIT_DIS_PRD VARCHAR(39)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)))') ,
 ALT_WAIT_DIS_PRD_VAL_1 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)),1,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),1,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_2 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)),2,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),2,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_3 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)),3,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),3,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_4 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)),4,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),4,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_5 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)),5,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),5,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_6 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)),6,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),6,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_7 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)),7,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),7,\'|\'))') ,
 ALT_WAIT_DIS_PRD_VAL_8 INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)),8,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD)),8,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE VARCHAR(207)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),1,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),1,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),2,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),2,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),3,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),3,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),4,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),4,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),5,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),5,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_6 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),6,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),6,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_7 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),7,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),7,\'|\'))') ,
 ALT_WAIT_DIS_CLNDR_WRK_TYPE_8 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),8,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_CLNDR_WRK_TYPE)),8,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE VARCHAR(207)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)))') ,
 ALT_WAIT_DIS_PRD_TYPE_1 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)),1,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),1,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_2 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)),2,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),2,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_3 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)),3,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),3,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_4 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)),4,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),4,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_5 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)),5,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),5,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_6 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)),6,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),6,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_7 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)),7,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),7,\'|\'))') ,
 ALT_WAIT_DIS_PRD_TYPE_8 VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)),8,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ALT_WAIT_DIS_PRD_TYPE)),8,\'|\'))') ,
 WAGES_FROM VARCHAR(71)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_FROM)))') ,
 WAGES_FROM_1 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)),1,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_FROM)),1,\'|\'))') ,
 WAGES_FROM_2 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)),2,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_FROM)),2,\'|\'))') ,
 WAGES_FROM_3 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)),3,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_FROM)),3,\'|\'))') ,
 WAGES_FROM_4 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)),4,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_FROM)),4,\'|\'))') ,
 WAGES_FROM_5 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)),5,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_FROM)),5,\'|\'))') ,
 WAGES_FROM_6 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)),6,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_FROM)),6,\'|\'))') ,
 WAGES_FROM_7 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)),7,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_FROM)),7,\'|\'))') ,
 WAGES_FROM_8 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)),8,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_FROM)),8,\'|\'))') ,
 WAGES_TO VARCHAR(71)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_TO)))') ,
 WAGES_TO_1 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)),1,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_TO)),1,\'|\'))') ,
 WAGES_TO_2 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)),2,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_TO)),2,\'|\'))') ,
 WAGES_TO_3 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)),3,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_TO)),3,\'|\'))') ,
 WAGES_TO_4 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)),4,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_TO)),4,\'|\'))') ,
 WAGES_TO_5 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)),5,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_TO)),5,\'|\'))') ,
 WAGES_TO_6 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)),6,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_TO)),6,\'|\'))') ,
 WAGES_TO_7 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)),7,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_TO)),7,\'|\'))') ,
 WAGES_TO_8 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)),8,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WAGES_TO)),8,\'|\'))') ,
 WEEKLY_BENEFIT VARCHAR(71)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENEFIT)))') ,
 WEEKLY_BENEFIT_1 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)),1,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENEFIT)),1,\'|\'))') ,
 WEEKLY_BENEFIT_2 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)),2,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENEFIT)),2,\'|\'))') ,
 WEEKLY_BENEFIT_3 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)),3,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENEFIT)),3,\'|\'))') ,
 WEEKLY_BENEFIT_4 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)),4,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENEFIT)),4,\'|\'))') ,
 WEEKLY_BENEFIT_5 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)),5,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENEFIT)),5,\'|\'))') ,
 WEEKLY_BENEFIT_6 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)),6,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENEFIT)),6,\'|\'))') ,
 WEEKLY_BENEFIT_7 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)),7,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENEFIT)),7,\'|\'))') ,
 WEEKLY_BENEFIT_8 DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)),8,\'|\'))', "ui_pasting" = 'f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.WEEKLY_BENEFIT)),8,\'|\'))') ,
 DAY30_WORK_MONTH_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DAY30_WORK_MONTH_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.DAY30_WORK_MONTH_FLAG)))') ,
 ACTUAL_MONTH_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ACTUAL_MONTH_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.ACTUAL_MONTH_FLAG)))') ,
 UPPER_AGE_LIMIT INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.UPPER_AGE_LIMIT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.UPPER_AGE_LIMIT)))') ,
 LOWER_AGE_LIMIT INT  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.LOWER_AGE_LIMIT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.LOWER_AGE_LIMIT)))') ,
 SUPP_PERCENT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_PERCENT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.SUPP_PERCENT)))') ,
 SUPP_FLAT_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_FLAT_AMT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.SUPP_FLAT_AMT)))') ,
 SUPP_BANK_ACC_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_BANK_ACC_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.SUPP_BANK_ACC_NAME)))') ,
 SUPP_SUB_ACC_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_SUB_ACC_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.SUPP_SUB_ACC_NAME)))') ,
 SUPP_TR_TYPE_CODE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_TR_TYPE_CODE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.SUPP_TR_TYPE_CODE)))') ,
 SUPP_SEP_PAY_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_SEP_PAY_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.SUPP_SEP_PAY_FLAG)))') ,
 PENSION_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.PENSION_AMT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.PENSION_AMT)))') ,
 SS_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SS_AMT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.SS_AMT)))') ,
 OTHER_AMT DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.OTHER_AMT)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.OTHER_AMT)))') ,
 PRORATE_OFF_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.PRORATE_OFF_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.PRORATE_OFF_FLAG)))') ,
 FULLPAY_ONLY_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.FULLPAY_ONLY_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_Class.FULLPAY_ONLY_FLAG)))')  )
 AS
SELECT key_generation(DS_RMX_STAGING.DBO.DDS_STD_CLASS, 'DA_ROW_ID', 1) , $gJobId, 1, f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.CLASS_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.CLASS_DESC))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.PLAN_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ELIG_BENE_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_FROM_DT_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_WAIT_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_CLNDR_WRK_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_MAX_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DIS_MAX_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.FROM_DIS_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALLOW_EXT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.EXTEND_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.EXTEND_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.MAX_TOT_DIS_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.MAX_TOT_PRD_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ACTUAL_WORK_WEEK_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DAY7_WORK_WEEK_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DAY5_WORK_WEEK_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.OTHER_WORK_WEEK_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.OTHER_DAYS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_PRCTG_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_PER_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_FLAT_AMT_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_FLAT_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_TD_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.BENE_BASED_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WITHHOLD_FED_ITAX_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WITHHOLD_FICA_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENE_CAP))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.MAX_BEN_PER_CLAIM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.MAX_BEN_PER_CAL_YR))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGE_FOR_DIS_PRD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGE_FOR_CAL_YR))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.TAXABLE_PERCENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WITHHOLD_MEDICARE_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WITHHOLD_STATE_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.USE_VOUCHERS_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_TYPE)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_CLNDR_WRK_TYPE)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ALT_WAIT_DIS_PRD_TYPE)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_FROM)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WAGES_TO)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT))), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)), 1, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)), 2, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)), 3, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)), 4, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)), 5, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)), 6, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)), 7, '|')), f_dds_replace_quote(word_ext(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.WEEKLY_BENEFIT)), 8, '|')), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.DAY30_WORK_MONTH_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.ACTUAL_MONTH_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.UPPER_AGE_LIMIT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.LOWER_AGE_LIMIT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_PERCENT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_FLAT_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_BANK_ACC_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_SUB_ACC_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_TR_TYPE_CODE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SUPP_SEP_PAY_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.PENSION_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.SS_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.OTHER_AMT))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.PRORATE_OFF_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_Class_S3N.FULLPAY_ONLY_FLAG))) FROM DDS_Short_Term_Disability_Class_S3N 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '261', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '378', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '69', "x" = '1806', "y" = '-363')
GUID::'8acda36c-cc89-4c7e-92da-f9412188308a' LOAD TABLE DS_RMX_STAGING.DBO.DDS_STD_CLASS INPUT(Q_READ_STD_CLASS)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>341</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '313', "y" = '-647')
GUID::'9ac31f16-f4fd-43f5-a9ed-c92f208357b3' READ FILE DDS_Short_Term_Disability_Class_S3N."$gSTD_Class_ImportFile_Name" OUTPUT(DDS_Short_Term_Disability_Class_S3N)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "read_subfolders" = 'yes', "reader_capture_data_conversion_errors" = 'no', "reader_capture_file_access_errors" = 'yes', "reader_capture_row_format_errors" = 'yes', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_log_data_conversion_warnings" = 'yes', "reader_log_row_format_warnings" = 'yes', "reader_log_warnings" = 'yes', "reader_maximum_warnings_to_log" = '-99', "reader_skip_empty_files" = 'yes', "reader_skip_error_handling" = 'no', "reader_write_error_rows_to_file" = 'no', "table_weight" = '0', "transfer_custom" = 'no');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:56 2017', "ActaValue_3" = 'Mon Sep 25 18:49:38 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_STD_PLAN::'e7cd86df-062a-4e75-b0a0-c49b931bbc7c'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '277', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "x" = '1942', "y" = '-858')
GUID::'ed20a1a7-6b3e-4a46-92f6-ec19d966d9d4' LOAD TABLE DS_RMX_STAGING.DBO.DDS_STD_PLAN INPUT(Q_READ_STD_PLAN)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '608', "Output_Width_Name" = '215', "Output_Width_Type" = '79', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>369</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'DDS_Short_Term_Disability_plan', "ui_display_name" = 'Q_READ_STD_PLAN', "x" = '948', "y" = '-751')
GUID::'e9c9ec59-9171-465b-9303-93ea8af7a8da' CREATE VIEW Q_READ_STD_PLAN( DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'key_generation(DS_RMX_STAGING.DBO.DDS_STD_PLAN, \'DA_ROW_ID\', 1)') ,
 JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1') ,
 PLAN_NUMBER VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PLAN_NUMBER)))') ,
 PLAN_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PLAN_NAME)))') ,
 PLAN_DESCRIPTION VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PLAN_DESCRIPTION)))') ,
 PLAN_STATUS VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PLAN_STATUS)))') ,
 PREMIUM DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PREMIUM)))') ,
 BANK_ACCOUNT_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.BANK_ACCOUNT_NUM)))') ,
 EFFECTIVE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.EFFECTIVE_DATE)))') ,
 EXPIRATION_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.EXPIRATION_DATE)))') ,
 ISSUE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.ISSUE_DATE)))') ,
 REVIEW_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.REVIEW_DATE)))') ,
 RENEWAL_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.RENEWAL_DATE)))') ,
 CANCEL_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.CANCEL_DATE)))') ,
 PREF_DAY_PAY_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PREF_DAY_PAY_TYPE)))') ,
 PREF_PAY_SCHEDULE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PREF_PAY_SCHEDULE_TYPE)))') ,
 COMMENTS VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.COMMENTS)))') ,
 START_PAY_PERIOD VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.START_PAY_PERIOD)))') ,
 PRINT_BEFORE_END_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PRINT_BEFORE_END_FLAG)))') ,
 BANK_SUB_ACCNT_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.BANK_SUB_ACCNT_NUM)))') ,
 INSURED_EID VARCHAR(207)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.INSURED_EID)))') ,
 INSURED_HIER_LEVEL VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.INSURED_HIER_LEVEL)))') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long(f_dds_replace_quote(DDS_Short_Term_Disability_plan.USER_FIELD_A))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_O)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_P)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_Q)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_Y)))')  )
 AS
SELECT key_generation(DS_RMX_STAGING.DBO.DDS_STD_PLAN, 'DA_ROW_ID', 1) , $gJobId, 1, f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PLAN_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PLAN_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PLAN_DESCRIPTION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PLAN_STATUS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PREMIUM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.BANK_ACCOUNT_NUM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.EFFECTIVE_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.EXPIRATION_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.ISSUE_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.REVIEW_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.RENEWAL_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.CANCEL_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PREF_DAY_PAY_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PREF_PAY_SCHEDULE_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.COMMENTS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.START_PAY_PERIOD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.PRINT_BEFORE_END_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.BANK_SUB_ACCNT_NUM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.INSURED_EID))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.INSURED_HIER_LEVEL))), varchar_to_long(f_dds_replace_quote(DDS_Short_Term_Disability_plan.USER_FIELD_A)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan.USER_FIELD_Y))) FROM DDS_Short_Term_Disability_plan 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>331</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gSTD_Plan_ImportFile_Name"(DDS_Short_Term_Disability_plan)', "x" = '400', "y" = '-703')
GUID::'23dc48a3-9378-4669-a44b-a238f715a64e' READ FILE DDS_Short_Term_Disability_plan."$gSTD_Plan_ImportFile_Name" OUTPUT(DDS_Short_Term_Disability_plan)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "root_dir" = '$gFileDirectory', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:56 2017', "ActaValue_3" = 'Mon Sep 25 18:58:56 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_READ_FILE_STD_PLAN_S3::'443fec4d-2271-4802-a5e5-5c149e46e3f0'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '608', "Output_Width_Name" = '215', "Output_Width_Type" = '79', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>369</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "ui_acta_from_schema_0" = 'DDS_Short_Term_Disability_plan_S3', "ui_display_name" = 'Q_READ_STD_PLAN', "x" = '632', "y" = '-269')
GUID::'a9af0ed6-7560-456c-95b7-a54f5431e35e' CREATE VIEW Q_READ_STD_PLAN( DA_ROW_ID INT  KEY  SET( "ui_mapping_text" = 'key_generation(DS_RMX_STAGING.DBO.DDS_STD_PLAN, \'DA_ROW_ID\', 1)', "ui_pasting" = 'key_generation(DS_RMX_STAGING.DBO.DDS_STD_PLAN, \'DA_ROW_ID\', 1)') ,
 JOBID INT  KEY  SET( "ui_mapping_text" = '$gJobId', "ui_pasting" = '$gJobId') ,
 INVALID_ROW INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 PLAN_NUMBER VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PLAN_NUMBER)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.PLAN_NUMBER)))') ,
 PLAN_NAME VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PLAN_NAME)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.PLAN_NAME)))') ,
 PLAN_DESCRIPTION VARCHAR(50)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PLAN_DESCRIPTION)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.PLAN_DESCRIPTION)))') ,
 PLAN_STATUS VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PLAN_STATUS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.PLAN_STATUS)))') ,
 PREMIUM DOUBLE  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PREMIUM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.PREMIUM)))') ,
 BANK_ACCOUNT_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.BANK_ACCOUNT_NUM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.BANK_ACCOUNT_NUM)))') ,
 EFFECTIVE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.EFFECTIVE_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.EFFECTIVE_DATE)))') ,
 EXPIRATION_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.EXPIRATION_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.EXPIRATION_DATE)))') ,
 ISSUE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.ISSUE_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.ISSUE_DATE)))') ,
 REVIEW_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.REVIEW_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.REVIEW_DATE)))') ,
 RENEWAL_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.RENEWAL_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.RENEWAL_DATE)))') ,
 CANCEL_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.CANCEL_DATE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.CANCEL_DATE)))') ,
 PREF_DAY_PAY_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PREF_DAY_PAY_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.PREF_DAY_PAY_TYPE)))') ,
 PREF_PAY_SCHEDULE_TYPE VARCHAR(25)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PREF_PAY_SCHEDULE_TYPE)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.PREF_PAY_SCHEDULE_TYPE)))') ,
 COMMENTS VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.COMMENTS)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.COMMENTS)))') ,
 START_PAY_PERIOD VARCHAR(8)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.START_PAY_PERIOD)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.START_PAY_PERIOD)))') ,
 PRINT_BEFORE_END_FLAG VARCHAR(1)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PRINT_BEFORE_END_FLAG)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.PRINT_BEFORE_END_FLAG)))') ,
 BANK_SUB_ACCNT_NUM VARCHAR(20)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.BANK_SUB_ACCNT_NUM)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.BANK_SUB_ACCNT_NUM)))') ,
 INSURED_EID VARCHAR(207)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.INSURED_EID)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.INSURED_EID)))') ,
 INSURED_HIER_LEVEL VARCHAR(15)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.INSURED_HIER_LEVEL)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.INSURED_HIER_LEVEL)))') ,
 USER_FIELD_A LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long(f_dds_replace_quote(DDS_Short_Term_Disability_plan_S3.USER_FIELD_A))', "ui_pasting" = 'varchar_to_long(f_dds_replace_quote(Short_Term_Disability_plan.USER_FIELD_A))') ,
 USER_FIELD_B VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_B)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_B)))') ,
 USER_FIELD_C VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_C)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_C)))') ,
 USER_FIELD_D VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_D)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_D)))') ,
 USER_FIELD_E VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_E)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_E)))') ,
 USER_FIELD_F VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_F)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_F)))') ,
 USER_FIELD_G VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_G)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_G)))') ,
 USER_FIELD_H VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_H)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_H)))') ,
 USER_FIELD_I VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_I)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_I)))') ,
 USER_FIELD_J VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_J)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_J)))') ,
 USER_FIELD_K VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_K)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_K)))') ,
 USER_FIELD_L VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_L)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_L)))') ,
 USER_FIELD_M VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_M)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_M)))') ,
 USER_FIELD_N VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_N)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_N)))') ,
 USER_FIELD_O VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_O)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_O)))') ,
 USER_FIELD_P VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_P)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_P)))') ,
 USER_FIELD_Q VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_Q)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_Q)))') ,
 USER_FIELD_R VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_R)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_R)))') ,
 USER_FIELD_S VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_S)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_S)))') ,
 USER_FIELD_T VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_T)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_T)))') ,
 USER_FIELD_U VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_U)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_U)))') ,
 USER_FIELD_V VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_V)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_V)))') ,
 USER_FIELD_W VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_W)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_W)))') ,
 USER_FIELD_X VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_X)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_X)))') ,
 USER_FIELD_Y VARCHAR(255)  SET( "ui_mapping_text" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_Y)))', "ui_pasting" = 'f_dds_replace_quote(ltrim_blanks(rtrim_blanks(Short_Term_Disability_plan.USER_FIELD_Y)))')  )
 AS
SELECT key_generation(DS_RMX_STAGING.DBO.DDS_STD_PLAN, 'DA_ROW_ID', 1) , $gJobId, 1, f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PLAN_NUMBER))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PLAN_NAME))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PLAN_DESCRIPTION))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PLAN_STATUS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PREMIUM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.BANK_ACCOUNT_NUM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.EFFECTIVE_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.EXPIRATION_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.ISSUE_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.REVIEW_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.RENEWAL_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.CANCEL_DATE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PREF_DAY_PAY_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PREF_PAY_SCHEDULE_TYPE))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.COMMENTS))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.START_PAY_PERIOD))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.PRINT_BEFORE_END_FLAG))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.BANK_SUB_ACCNT_NUM))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.INSURED_EID))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.INSURED_HIER_LEVEL))), varchar_to_long(f_dds_replace_quote(DDS_Short_Term_Disability_plan_S3.USER_FIELD_A)), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_B))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_C))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_D))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_E))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_F))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_G))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_H))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_I))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_J))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_K))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_L))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_M))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_N))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_O))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_P))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_Q))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_R))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_S))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_T))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_U))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_V))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_W))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_X))), f_dds_replace_quote(ltrim_blanks(rtrim_blanks(DDS_Short_Term_Disability_plan_S3.USER_FIELD_Y))) FROM DDS_Short_Term_Disability_plan_S3 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '29', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '277', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '66', "x" = '1626', "y" = '-376')
GUID::'37204855-4257-465c-ab47-325ea4c57671' LOAD TABLE DS_RMX_STAGING.DBO.DDS_STD_PLAN INPUT(Q_READ_STD_PLAN)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>331</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gSTD_Plan_ImportFile_Name"(DDS_Short_Term_Disability_plan_S3)', "x" = '409', "y" = '-569')
GUID::'da6415d0-d328-4fd7-a79d-98a347667b9a' READ FILE DDS_Short_Term_Disability_plan_S3."$gSTD_Plan_ImportFile_Name" OUTPUT(DDS_Short_Term_Disability_plan_S3)
SET("cache" = 'yes', "connection_port" = 'no', "file_location" = 'local', "name" = 'UNNAMED', "reader_filename_col" = 'DI_FILENAME', "reader_filename_col_size" = '100', "reader_filename_only" = 'no', "reader_include_filename" = 'no', "reader_maximum_warnings_to_log" = '-99', "table_weight" = '0');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Fri Jun 03 12:19:16 2016', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_TRY_CATCH_ERROR::'66a7fac9-b40e-478b-8f54-c5aeb2c4b3bb'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>397</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '50', "ui_display_name" = 'RG_CREATE_ERROR_ROW', "x" = '325', "y" = '-650')
GUID::'002048b8-b274-462b-9c61-7a54ca0ea870' CALL TRANSFORM Row_Generation() OUTPUT(RG_CREATE_ERROR_ROW( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '30', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '173', "Output_Width_Name" = '245', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>397</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '50', "ui_acta_from_schema_0" = 'RG_CREATE_ERROR_ROW', "ui_display_name" = 'Q_GET_ERROR_DATA', "x" = '770', "y" = '-651')
GUID::'bdb8dd4e-af9b-4a90-a1e9-2e1afa7b9821' CREATE VIEW Q_GET_ERROR_DATA( ERR_LOG_ROW_ID INT  SET( "ui_mapping_text" = '0') ,
 JOBID INT  SET( "ui_mapping_text" = '$gJobId') ,
 MODULE_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'job_name( )') ,
 ERROR_PROC_NAME LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long(\'System Error\')') ,
 ERROR_TIME VARCHAR(14)  SET( "ui_mapping_text" = '$gErrorTime') ,
 ERROR_DESC LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'varchar_to_long($gErrorMessage)') ,
 IS_VALIDATION INT  SET( "ui_mapping_text" = '0') ,
 ERROR_COLUMNS LONG  SET( "Long Type" = 'CLOB', "ui_mapping_text" = 'null')  )
 AS
SELECT 0, $gJobId, job_name(), varchar_to_long('System Error'), $gErrorTime, varchar_to_long($gErrorMessage), 0,  NULL  FROM RG_CREATE_ERROR_ROW 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '39', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '280', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '61', "x" = '1878', "y" = '-651')
GUID::'a11cf76b-03b8-4d0d-9d9d-3019c15b3c28' LOAD TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG INPUT(KG_CREATE_ERROR_ID)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMX_STAGING_DBO_DDS_ERROR_LOG.txt</loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMX_STAGING', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '34', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '53', "ui_display_name" = 'KG_CREATE_ERROR_ID', "x" = '1264', "y" = '-650')
GUID::'fb7de7c9-7063-43f3-b050-ecae4fbc363e' CALL TRANSFORM Key_Generation() INPUT(Q_GET_ERROR_DATA) OUTPUT(KG_CREATE_ERROR_ID()
)
SET("database_datastore" = 'DS_RMX_STAGING', "generated_key_column" = 'ERR_LOG_ROW_ID', "increment_value" = '1', "table_name" = 'DDS_ERROR_LOG', "table_owner" = 'DBO', "table_schema" = '');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 17:55:10 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_ADJUSTERS::'8c7eccf5-fa60-42de-880e-4495e291f1ec'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '82', "y" = '-958')
GUID::'43f03e7a-0a03-4769-b3a0-c7866acec3bf' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '598', "Output_Width_Name" = '154', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '328', "y" = '-553')
GUID::'dbe7fc65-caea-41fc-9a28-ca7469324837' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '329', "y" = '-1471')
GUID::'3b28151c-2b69-414f-b766-557bfde76392' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '620', "y" = '-967')
GUID::'770d6174-4df5-4f40-8654-9c2611e6a8df' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1043', "y" = '-879')
GUID::'9174a327-2043-4bd6-b12b-ce42b3d3d66c' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gErrorLogFileNameAdjuster"(DDS_ErrorLog_Info)', "x" = '1431', "y" = '-1313')
GUID::'0aebaf14-4b7d-4588-ae32-e324f8e97145' LOAD FILE DDS_ErrorLog_Info."$gErrorLogFileNameAdjuster" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "root_dir" = '$gFileDirectory', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 19:03:45 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_ADJUSTERS_S3::'12a3068a-44a9-4459-bf60-fbb13c16149d'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '961', "y" = '-326')
GUID::'2c044708-2af5-4cc8-ae72-d8be7fbfa139' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE', "ui_pasting" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '538', "y" = '-414')
GUID::'9d528dc5-95eb-43a3-91e5-81aaf6a963a1' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '247', "y" = '-918')
GUID::'83eab7b5-e8ad-463f-a113-14542443e2ad' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'', "ui_pasting" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '598', "Output_Width_Name" = '154', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '246', "y" = '0')
GUID::'a7921214-6e16-4219-beef-03a18e490b13' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'', "ui_pasting" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '0', "y" = '-405')
GUID::'28ec3fd7-c26f-4157-a6e9-d724b666efff' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameAdjuster"(DDS_ErrorLog_Info_S3)', "x" = '1206', "y" = '-1203')
GUID::'9c659ce9-6ece-4f48-b092-21b84421f2e9' LOAD FILE DDS_ErrorLog_Info_S3."$gErrorLogFileNameAdjuster" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameAdjuster', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 18:34:45 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_CLASS::'a9d7880a-b603-45a4-8a96-96a56714e37d'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '82', "y" = '-958')
GUID::'954d847c-9892-4d16-a344-b0db8ad83e05' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '598', "Output_Width_Name" = '154', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '328', "y" = '-553')
GUID::'bcd0fc93-ea55-4124-b2ac-5700bfec8448' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '329', "y" = '-1471')
GUID::'ae217ab2-9851-4889-aba2-9f9648b10906' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '620', "y" = '-967')
GUID::'0e197ee2-0f33-4642-8837-45fe908f8e9b' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1043', "y" = '-879')
GUID::'54bd7c81-bfbf-4e1b-97ea-2eab706f8aa8' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gErrorLogFileNameSTDClass"(DDS_ErrorLog_Info)', "x" = '1494', "y" = '-1234')
GUID::'b465d1f1-097c-4d09-8844-dfb0b900c127' LOAD FILE DDS_ErrorLog_Info."$gErrorLogFileNameSTDClass" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "root_dir" = '$gFileDirectory', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 17:55:10 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_PLAN::'1a7e34ed-dfd5-4753-a6a2-716fed88884c'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '82', "y" = '-958')
GUID::'55005347-79ef-49f9-b1cc-c3ba570bdb61' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '598', "Output_Width_Name" = '154', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '328', "y" = '-553')
GUID::'4811d32d-8c97-46d8-aaaf-1bb70d79bebe' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '329', "y" = '-1471')
GUID::'21fcb175-9c8b-4b7a-9349-809cb746582e' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '620', "y" = '-967')
GUID::'845f91c8-283b-408d-a5c5-7cf4944af869' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '1043', "y" = '-879')
GUID::'46e8de41-5719-41e4-9092-2069775e7a26' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"$gErrorLogFileNameSTDPlan"(DDS_ErrorLog_Info)', "x" = '1616', "y" = '-1188')
GUID::'4cbe12f3-96ac-4d54-982e-106759324326' LOAD FILE DDS_ErrorLog_Info."$gErrorLogFileNameSTDPlan" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "root_dir" = '$gFileDirectory', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 19:03:45 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_PLAN_S3::'e78fe33b-5767-4639-8730-0a8948ebccd1'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '961', "y" = '-326')
GUID::'16489612-9996-4f46-b6ba-9150585d2d07' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE', "ui_pasting" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '247', "y" = '-918')
GUID::'75e0e1e9-31aa-4b03-98fc-10258f164939' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'', "ui_pasting" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '598', "Output_Width_Name" = '154', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '246', "y" = '0')
GUID::'d381dd73-0e4d-4811-821e-08873a6b0536' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'', "ui_pasting" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '0', "y" = '-405')
GUID::'62b6e629-05b1-4a00-af39-ae68133bc61f' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '538', "y" = '-414')
GUID::'cd8db176-8b8e-455a-9210-18d64f769306' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameSTDPlan"(DDS_ErrorLog_Info_S3)', "x" = '1600', "y" = '-997')
GUID::'f3bf9786-d91c-4630-a82e-4d07fb1b1ba1' LOAD FILE DDS_ErrorLog_Info_S3."$gErrorLogFileNameSTDPlan" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameSTDPlan', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 18:35:38 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_WRITE_ERROR_LOG_META::'626de22f-5573-480e-8e7b-69703a5622e6'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_COUNT_INVALID_ROWS', "ui_where_text" = 'DDS_ERROR_LOG.IS_VALIDATION = 1 and DDS_ERROR_LOG.JOBID=$gJobid

', "x" = '672', "y" = '-123')
GUID::'b2d03822-2f71-4016-a03c-8d3564515618' CREATE VIEW Q_COUNT_INVALID_ROWS( INVALID_DATA_ROWS INT  SET( "ui_mapping_text" = 'COUNT(DDS_ERROR_LOG.ERR_LOG_ROW_ID)')  )
 AS
SELECT count(DDS_ERROR_LOG.ERR_LOG_ROW_ID) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.IS_VALIDATION = 1) AND
   (DDS_ERROR_LOG.JOBID = $gJobid))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '157', "Output_Width_Name" = '192', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>444</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_COUNT_SYSTEM_ERRORS', "ui_where_text" = 'DDS_ERROR_LOG.IS_VALIDATION = 0 and DDS_ERROR_LOG.JOBID=$gJobid

', "x" = '706', "y" = '-743')
GUID::'a4b96890-0626-4291-9f87-dc6e50b518c5' CREATE VIEW Q_COUNT_SYSTEM_ERRORS( SYSTEM_ERRORS INT  SET( "ui_mapping_text" = '#count(DDS_ERROR_LOG.ERR_LOG_ROW_ID)
COUNT(DDS_ERROR_LOG.ERR_LOG_ROW_ID)')  )
 AS
SELECT count(DDS_ERROR_LOG.ERR_LOG_ROW_ID) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.IS_VALIDATION = 0) AND
   (DDS_ERROR_LOG.JOBID = $gJobid))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '205', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>400</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Q_COUNT_SYSTEM_ERRORS', "ui_acta_from_schema_1" = 'Q_COUNT_INVALID_ROWS', "ui_display_name" = 'Q_Generate_Meta_Message', "x" = '1286', "y" = '-388')
GUID::'cdea9d57-d563-4fbd-8bbd-0b0794567738' CREATE VIEW Q_Generate_Meta_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job Totals: \' || Q_COUNT_SYSTEM_ERRORS.SYSTEM_ERRORS || \' system errors and \'  || Q_COUNT_INVALID_ROWS.INVALID_DATA_ROWS || \' validation errors.\'')  )
 AS
SELECT (((('Job Totals: ' || Q_COUNT_SYSTEM_ERRORS.SYSTEM_ERRORS) || ' system errors and ') || Q_COUNT_INVALID_ROWS.INVALID_DATA_ROWS) || ' validation errors.') FROM Q_COUNT_INVALID_ROWS , Q_COUNT_SYSTEM_ERRORS 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '49', "x" = '191', "y" = '-415')
GUID::'86932f66-894c-4185-b7d2-5d03d01bd51b' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>378</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '32', "ui_display_name" = '"ErrorLog_Metadata.txt"(DDS_ErrorLog_Info)', "x" = '784', "y" = '-1366')
GUID::'727417d8-614b-4473-acee-adc52222f1af' LOAD FILE DDS_ErrorLog_Info."ErrorLog_Metadata.txt" INPUT(Q_Generate_Meta_Message)
SET("connection_port" = 'no', "file_location" = 'local', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "root_dir" = '$gFileDirectory', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_modified', "ActaName_3" = 'RDate_created', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 18:48:28 2017', "ActaValue_3" = 'Mon Sep 25 16:25:57 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_WRITE_ERROR_LOG_META_S3::'f6f68251-5690-4220-98c8-717e22525adc'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Description', "Input_2nd_Column_Name" = 'Type', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>394</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '49', "x" = '128', "y" = '-439')
GUID::'7e677b8c-02c0-44a6-97b4-5b1d6c513d75' READ TABLE DS_RMX_STAGING.DBO.DDS_ERROR_LOG OUTPUT(DDS_ERROR_LOG)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '205', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>400</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Q_COUNT_SYSTEM_ERRORS', "ui_acta_from_schema_1" = 'Q_COUNT_INVALID_ROWS', "ui_display_name" = 'Q_Generate_Meta_Message', "x" = '1223', "y" = '-412')
GUID::'21585f46-c6d8-4e7e-80b0-40ca6e2b3d01' CREATE VIEW Q_Generate_Meta_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job Totals: \' || Q_COUNT_SYSTEM_ERRORS.SYSTEM_ERRORS || \' system errors and \'  || Q_COUNT_INVALID_ROWS.INVALID_DATA_ROWS || \' validation errors.\'', "ui_pasting" = '\'Job Totals: \' || Q_COUNT_SYSTEM_ERRORS.SYSTEM_ERRORS || \' system errors and \'  || Q_COUNT_INVALID_ROWS.INVALID_DATA_ROWS || \' validation errors.\'')  )
 AS
SELECT (((('Job Totals: ' || Q_COUNT_SYSTEM_ERRORS.SYSTEM_ERRORS) || ' system errors and ') || Q_COUNT_INVALID_ROWS.INVALID_DATA_ROWS) || ' validation errors.') FROM Q_COUNT_INVALID_ROWS , Q_COUNT_SYSTEM_ERRORS 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '157', "Output_Width_Name" = '192', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>444</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_COUNT_SYSTEM_ERRORS', "ui_where_text" = 'DDS_ERROR_LOG.IS_VALIDATION = 0 and DDS_ERROR_LOG.JOBID=$gJobid



', "x" = '643', "y" = '-767')
GUID::'b4b1f081-f962-43ca-a4a7-4394e1c4a1bb' CREATE VIEW Q_COUNT_SYSTEM_ERRORS( SYSTEM_ERRORS INT  SET( "ui_mapping_text" = '#count(DDS_ERROR_LOG.ERR_LOG_ROW_ID)
COUNT(DDS_ERROR_LOG.ERR_LOG_ROW_ID)', "ui_pasting" = '#count(DDS_ERROR_LOG.ERR_LOG_ROW_ID)
COUNT(DDS_ERROR_LOG.ERR_LOG_ROW_ID)')  )
 AS
SELECT count(DDS_ERROR_LOG.ERR_LOG_ROW_ID) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.IS_VALIDATION = 0) AND
   (DDS_ERROR_LOG.JOBID = $gJobid))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'DDS_ERROR_LOG', "ui_display_name" = 'Q_COUNT_INVALID_ROWS', "ui_where_text" = 'DDS_ERROR_LOG.IS_VALIDATION = 1 and DDS_ERROR_LOG.JOBID=$gJobid



', "x" = '609', "y" = '-147')
GUID::'0661566a-68c8-46f6-aabf-9924da2e26d6' CREATE VIEW Q_COUNT_INVALID_ROWS( INVALID_DATA_ROWS INT  SET( "ui_mapping_text" = 'COUNT(DDS_ERROR_LOG.ERR_LOG_ROW_ID)', "ui_pasting" = 'COUNT(DDS_ERROR_LOG.ERR_LOG_ROW_ID)')  )
 AS
SELECT count(DDS_ERROR_LOG.ERR_LOG_ROW_ID) FROM DDS_ERROR_LOG  WHERE ((DDS_ERROR_LOG.IS_VALIDATION = 1) AND
   (DDS_ERROR_LOG.JOBID = $gJobid))
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogMetadata"(DDS_ErrorLog_Info_S3)', "x" = '1416', "y" = '-725')
GUID::'4d0e426c-9011-4077-bf0b-dc81406c68b3' LOAD FILE DDS_ErrorLog_Info_S3."$gErrorLogMetadata" INPUT(Q_Generate_Meta_Message)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogMetadata', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Sep 29 13:59:20 2017', "ActaValue_3" = 'Tue Oct 03 14:59:36 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_WRITE_FINAL_DIARY::'a8889ffd-e329-4335-9b1b-9b11177ab146'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '28', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '375', "Output_Width_Name" = '225', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>272</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '74', "ui_acta_from_schema_0" = 'Q_Get_LoginName_1', "ui_display_name" = 'Q_Write_Diary', "x" = '1281', "y" = '-962')
GUID::'e6ecd4ad-7142-44af-8fbd-fe39f06abb15' CREATE VIEW Q_Write_Diary( ENTRY_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'Q_Get_LoginName_1.OPTIONSET_NAME') ,
 ENTRY_NOTES VARCHAR(2000)  SET( "ui_mapping_text" = '\'The \' || $gJobName || \' job is done. \' || chr(13)||chr(10) || $gDiaryStatistics') ,
 CREATE_DATE VARCHAR(14)  SET( "ui_mapping_text" = 'cast(print (substr(replace_substr(sysdate( ), \'.\', \'\'), 0, 8)), \'varchar(8)\') || to_char( systime(),\'hh24miss\')') ,
 COMPLETE_TIME VARCHAR(8)  SET( "ui_mapping_text" = 'substr(replace_substr(sysdate( ), \':\', \'\'),12 , 20)') ,
 COMPLETE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'cast(print (substr(replace_substr(sysdate( ), \'.\', \'\'), 0, 8)), \'varchar(8)\')') ,
 PRIORITY INT  SET( "ui_mapping_text" = '1') ,
 STATUS_OPEN INT  SET( "ui_mapping_text" = '1') ,
 AUTO_CONFIRM INT  SET( "ui_mapping_text" = '0') ,
 RESPONSE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'NULL') ,
 RESPONSE VARCHAR(200)  SET( "ui_mapping_text" = 'NULL') ,
 ASSIGNED_USER VARCHAR(50)  SET( "ui_mapping_text" = 'cast(Q_Get_LoginName_1.LOGIN_NAME, \'VARCHAR(50)\')') ,
 ASSIGNING_USER VARCHAR(8)  SET( "ui_mapping_text" = '\'DA \' || $gJobName') ,
 ASSIGNED_GROUP VARCHAR(10)  SET( "ui_mapping_text" = '\'NA\'') ,
 IS_ATTACHED INT  SET( "ui_mapping_text" = '0') ,
 ATTACH_TABLE VARCHAR(18)  SET( "ui_mapping_text" = 'NULL') ,
 ATTACH_RECORDID INT  SET( "ui_mapping_text" = 'NULL') ,
 REGARDING VARCHAR(70)  SET( "ui_mapping_text" = '$gJobName|| \' Job\'') ,
 TE_TRACKED INT  SET( "ui_mapping_text" = '0') ,
 TE_START_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'NULL') ,
 TE_END_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'NULL') ,
 TE_TOTAL_HOURS DOUBLE  SET( "ui_mapping_text" = 'NULL') ,
 TE_EXPENSES DOUBLE  SET( "ui_mapping_text" = 'NULL') ,
 ATT_FORM_CODE INT  SET( "ui_mapping_text" = '0') ,
 ATT_SEC_REC_ID INT  SET( "ui_mapping_text" = '0') ,
 ATT_PARENT_CODE INT  SET( "ui_mapping_text" = '0') ,
 DIARY_VOID INT  SET( "ui_mapping_text" = '0') ,
 DIARY_DELETED INT  SET( "ui_mapping_text" = '0') ,
 ATT_FORM_SCRTY INT  SET( "ui_mapping_text" = '0') ,
 ESTIMATE_TIME DOUBLE  SET( "ui_mapping_text" = 'NULL') ,
 AUTO_ID INT  SET( "ui_mapping_text" = '0') ,
 NOTIFY_FLAG INT  SET( "ui_mapping_text" = '0') ,
 ROUTE_FLAG INT  SET( "ui_mapping_text" = '0') ,
 f_getNextUID AL_RFC_SCHEMA_GROUP ("$p_NextUID" INT )  )
 AS
SELECT Q_Get_LoginName_1.OPTIONSET_NAME, ((((('The ' || $gJobName) || ' job is done. ') || chr(13)) || chr(10)) || $gDiaryStatistics), (cast(print(substr(replace_substr(sysdate(), '.', ''), 0, 8)), 'varchar(8)') || to_char(systime(), 'hh24miss')), substr(replace_substr(sysdate(), ':', ''), 12, 20), cast(print(substr(replace_substr(sysdate(), '.', ''), 0, 8)), 'varchar(8)'), 1, 1, 0,  NULL ,  NULL , cast(Q_Get_LoginName_1.LOGIN_NAME, 'VARCHAR(50)'), ('DA ' || $gJobName), 'NA', 0,  NULL ,  NULL , ($gJobName || ' Job'), 0,  NULL ,  NULL ,  NULL ,  NULL , 0, 0, 0, 0, 0, 0,  NULL , 0, 0, 0, __AL_SCRIPT_FUNCTION f_getNextUID["$p_NextUID"]('WPA_DIARY_ENTRY', 1)["$p_TableName","$p_AddedRows"] FROM Q_Get_LoginName_1 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '42', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '85', "x" = '1915', "y" = '-950')
GUID::'a4380109-248c-4e6e-8539-18ebb1e59f8a' LOAD TABLE DS_RMDB.DBO.WPA_DIARY_ENTRY INPUT(Q_SET_ENTRY_ID)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="ODBC" database_version="ODBC">
<odbc_database_type>OTHER</odbc_database_type>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<netezza_bulk_ldr_all_type>File</netezza_bulk_ldr_all_type>
<netezza_bulk_ldr_col_delimiter>|</netezza_bulk_ldr_col_delimiter>
<netezza_bulk_ldr_commit_size>0</netezza_bulk_ldr_commit_size>
<netezza_bulk_ldr_escape></netezza_bulk_ldr_escape>
<netezza_bulk_ldr_mode>append</netezza_bulk_ldr_mode>
<netezza_bulk_ldr_update_method>delete-insert</netezza_bulk_ldr_update_method>
<odbc_database_type>OTHER</odbc_database_type>
<overflow_file_format>write_data</overflow_file_format>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 10g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMDB', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '42', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '152', "Output_Width_Name" = '246', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>328</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '79', "ui_acta_from_schema_0" = 'Q_Write_Diary', "ui_display_name" = 'Q_SET_ENTRY_ID', "x" = '1566', "y" = '-936')
GUID::'787258e3-2e74-4fd4-9f0f-66f560a1c1d5' CREATE VIEW Q_SET_ENTRY_ID( ENTRY_ID INT  SET( "ui_mapping_text" = 'Q_Write_Diary."$p_NextUID"') ,
 ENTRY_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'Q_Write_Diary.ENTRY_NAME') ,
 ENTRY_NOTES VARCHAR(2000)  SET( "ui_mapping_text" = 'Q_Write_Diary.ENTRY_NOTES') ,
 CREATE_DATE VARCHAR(14)  SET( "ui_mapping_text" = 'Q_Write_Diary.CREATE_DATE') ,
 COMPLETE_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'Q_Write_Diary.COMPLETE_TIME') ,
 COMPLETE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'Q_Write_Diary.COMPLETE_DATE') ,
 PRIORITY INT  SET( "ui_mapping_text" = 'Q_Write_Diary.PRIORITY') ,
 STATUS_OPEN INT  SET( "ui_mapping_text" = 'Q_Write_Diary.STATUS_OPEN') ,
 AUTO_CONFIRM INT  SET( "ui_mapping_text" = 'Q_Write_Diary.AUTO_CONFIRM') ,
 RESPONSE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'Q_Write_Diary.RESPONSE_DATE') ,
 RESPONSE VARCHAR(200)  SET( "ui_mapping_text" = 'Q_Write_Diary.RESPONSE') ,
 ASSIGNED_USER VARCHAR(50)  SET( "ui_mapping_text" = 'Q_Write_Diary.ASSIGNED_USER') ,
 ASSIGNING_USER VARCHAR(8)  SET( "ui_mapping_text" = 'Q_Write_Diary.ASSIGNING_USER') ,
 ASSIGNED_GROUP VARCHAR(10)  SET( "ui_mapping_text" = 'Q_Write_Diary.ASSIGNED_GROUP') ,
 IS_ATTACHED INT  SET( "ui_mapping_text" = 'Q_Write_Diary.IS_ATTACHED') ,
 ATTACH_TABLE VARCHAR(18)  SET( "ui_mapping_text" = 'Q_Write_Diary.ATTACH_TABLE') ,
 ATTACH_RECORDID INT  SET( "ui_mapping_text" = 'Q_Write_Diary.ATTACH_RECORDID') ,
 REGARDING VARCHAR(70)  SET( "ui_mapping_text" = 'Q_Write_Diary.REGARDING') ,
 TE_TRACKED INT  SET( "ui_mapping_text" = 'Q_Write_Diary.TE_TRACKED') ,
 TE_START_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'Q_Write_Diary.TE_START_TIME') ,
 TE_END_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'Q_Write_Diary.TE_END_TIME') ,
 TE_TOTAL_HOURS DOUBLE  SET( "ui_mapping_text" = 'Q_Write_Diary.TE_TOTAL_HOURS') ,
 TE_EXPENSES DOUBLE  SET( "ui_mapping_text" = 'Q_Write_Diary.TE_EXPENSES') ,
 ATT_FORM_CODE INT  SET( "ui_mapping_text" = 'Q_Write_Diary.ATT_FORM_CODE') ,
 ATT_SEC_REC_ID INT  SET( "ui_mapping_text" = 'Q_Write_Diary.ATT_SEC_REC_ID') ,
 ATT_PARENT_CODE INT  SET( "ui_mapping_text" = 'Q_Write_Diary.ATT_PARENT_CODE') ,
 DIARY_VOID INT  SET( "ui_mapping_text" = 'Q_Write_Diary.DIARY_VOID') ,
 DIARY_DELETED INT  SET( "ui_mapping_text" = 'Q_Write_Diary.DIARY_DELETED') ,
 ATT_FORM_SCRTY INT  SET( "ui_mapping_text" = 'Q_Write_Diary.ATT_FORM_SCRTY') ,
 ESTIMATE_TIME DOUBLE  SET( "ui_mapping_text" = 'Q_Write_Diary.ESTIMATE_TIME') ,
 AUTO_ID INT  SET( "ui_mapping_text" = 'Q_Write_Diary.AUTO_ID') ,
 NOTIFY_FLAG INT  SET( "ui_mapping_text" = 'Q_Write_Diary.NOTIFY_FLAG') ,
 ROUTE_FLAG INT  SET( "ui_mapping_text" = 'Q_Write_Diary.ROUTE_FLAG')  )
 AS
SELECT Q_Write_Diary."$p_NextUID", Q_Write_Diary.ENTRY_NAME, Q_Write_Diary.ENTRY_NOTES, Q_Write_Diary.CREATE_DATE, Q_Write_Diary.COMPLETE_TIME, Q_Write_Diary.COMPLETE_DATE, Q_Write_Diary.PRIORITY, Q_Write_Diary.STATUS_OPEN, Q_Write_Diary.AUTO_CONFIRM, Q_Write_Diary.RESPONSE_DATE, Q_Write_Diary.RESPONSE, Q_Write_Diary.ASSIGNED_USER, Q_Write_Diary.ASSIGNING_USER, Q_Write_Diary.ASSIGNED_GROUP, Q_Write_Diary.IS_ATTACHED, Q_Write_Diary.ATTACH_TABLE, Q_Write_Diary.ATTACH_RECORDID, Q_Write_Diary.REGARDING, Q_Write_Diary.TE_TRACKED, Q_Write_Diary.TE_START_TIME, Q_Write_Diary.TE_END_TIME, Q_Write_Diary.TE_TOTAL_HOURS, Q_Write_Diary.TE_EXPENSES, Q_Write_Diary.ATT_FORM_CODE, Q_Write_Diary.ATT_SEC_REC_ID, Q_Write_Diary.ATT_PARENT_CODE, Q_Write_Diary.DIARY_VOID, Q_Write_Diary.DIARY_DELETED, Q_Write_Diary.ATT_FORM_SCRTY, Q_Write_Diary.ESTIMATE_TIME, Q_Write_Diary.AUTO_ID, Q_Write_Diary.NOTIFY_FLAG, Q_Write_Diary.ROUTE_FLAG FROM Q_Write_Diary 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '75', "x" = '231', "y" = '-874')
GUID::'60651b21-bc83-4060-8bdf-ea7818fb2925' READ TABLE DS_RMX_STAGING.DBO.DDS_OPTIONSET OUTPUT(DDS_OPTIONSET_1)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '51', "ui_acta_from_schema_0" = 'DDS_OPTIONSET_1', "ui_display_name" = 'Q_Get_LoginName_1', "ui_where_text" = '(DDS_OPTIONSET_1.JOBID = $gJobId)', "x" = '576', "y" = '-869')
GUID::'7dbdf5b7-60d5-4b2b-a9b5-d3cb795fc6e3' CREATE VIEW Q_Get_LoginName_1( JOBID INT  KEY  SET( "ui_mapping_text" = 'DDS_OPTIONSET_1.JOBID', "ui_pasting" = 'DDS_OPTIONSET_1.JOBID') ,
 LOGIN_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'DDS_OPTIONSET_1.DIARY_TO_USERS', "ui_pasting" = 'DDS_OPTIONSET_1.DIARY_TO_USERS') ,
 OPTIONSET_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'DDS_OPTIONSET_1.OPTIONSET_NAME', "ui_pasting" = 'DDS_OPTIONSET_1.OPTIONSET_NAME')  )
 AS
SELECT DDS_OPTIONSET_1.JOBID, DDS_OPTIONSET_1.DIARY_TO_USERS, DDS_OPTIONSET_1.OPTIONSET_NAME FROM DDS_OPTIONSET_1  WHERE (DDS_OPTIONSET_1.JOBID = $gJobId)
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Sep 29 13:59:20 2017', "ActaValue_3" = 'Fri Jun 03 10:37:05 2016', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_DDS_WRITE_VERIFY_DIARY::'73c39e3b-039d-4757-9b4f-c4e0be6dc103'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '42', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '244', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '186', "Output_Width_Name" = '184', "Output_Width_Type" = '114', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>335</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '50', "ui_acta_from_schema_0" = 'DDS_OPTIONSET', "ui_display_name" = 'Q_Get_LoginName', "ui_where_text" = 'DDS_OPTIONSET.JOBID = $gJobId', "x" = '660', "y" = '-278')
GUID::'38e9cbc1-477d-4a87-a98a-37cadf773066' CREATE VIEW Q_Get_LoginName( JOBID INT  KEY  SET( "ui_mapping_text" = 'DDS_OPTIONSET.JOBID') ,
 LOGIN_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'DDS_OPTIONSET.DIARY_TO_USERS') ,
 OPTIONSET_NAME VARCHAR(50)  SET( "ui_mapping_text" = 'DDS_OPTIONSET.OPTIONSET_NAME') ,
 f_getNextUID AL_RFC_SCHEMA_GROUP ("$p_NextUID" INT ) ,
 DIARY_NAME VARCHAR(4000)  SET( "ui_mapping_text" = '\'User Verification: \' || DDS_OPTIONSET.OPTIONSET_NAME || \':\'')  )
 AS
SELECT DDS_OPTIONSET.JOBID, DDS_OPTIONSET.DIARY_TO_USERS, DDS_OPTIONSET.OPTIONSET_NAME, __AL_SCRIPT_FUNCTION f_getNextUID["$p_NextUID"]('WPA_DIARY_ENTRY', 1)["$p_TableName","$p_AddedRows"], (('User Verification: ' || DDS_OPTIONSET.OPTIONSET_NAME) || ':') FROM DDS_OPTIONSET  WHERE (DDS_OPTIONSET.JOBID = $gJobId)
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '37', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '153', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '241', "Output_Width_Name" = '196', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>369</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '55', "ui_acta_from_schema_0" = 'Q_Get_LoginName', "ui_display_name" = 'Q_Get_Diary_Details', "x" = '1101', "y" = '-350')
GUID::'5a4d0395-e526-43e9-81c8-8c0f8ebe4405' CREATE VIEW Q_Get_Diary_Details( JOBID INT  KEY  SET( "ui_mapping_text" = 'Q_Get_LoginName.JOBID') ,
 ATT_FORM_CODE INT  SET( "ui_mapping_text" = '0') ,
 ATT_FORM_SCRTY INT  SET( "ui_mapping_text" = '0') ,
 ATT_PARENT_CODE INT  SET( "ui_mapping_text" = '0') ,
 ATT_SEC_REC_ID INT  SET( "ui_mapping_text" = '0') ,
 AUTO_ID INT  SET( "ui_mapping_text" = '0') ,
 DIARY_DELETED INT  SET( "ui_mapping_text" = '0') ,
 DIARY_VOID INT  SET( "ui_mapping_text" = '0') ,
 ESTIMATE_TIME DOUBLE  SET( "ui_mapping_text" = 'NULL') ,
 NOTIFY_FLAG INT  SET( "ui_mapping_text" = '0') ,
 ROUTE_FLAG INT  SET( "ui_mapping_text" = '0') ,
 ENTRY_ID INT  SET( "ui_mapping_text" = 'Q_Get_LoginName."$p_NextUID"') ,
 ENTRY_NAME VARCHAR(50)  SET( "ui_mapping_text" = '\'User Verification: \' || Q_Get_LoginName.OPTIONSET_NAME || \':\' || to_char( systime( ),\'hh24:mi:ss\' )') ,
 ENTRY_NOTES VARCHAR(2000)  SET( "ui_mapping_text" = 'NULL') ,
 CREATE_DATE VARCHAR(14)  SET( "ui_mapping_text" = 'cast(print (substr(replace_substr(sysdate( ), \'.\', \'\'), 0, 8)), \'varchar(8)\') || to_char( systime(),\'hh24miss\')') ,
 COMPLETE_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'substr(replace_substr(sysdate( ), \':\', \'\'),12 , 20)') ,
 COMPLETE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'cast(print (substr(replace_substr(sysdate( ), \'.\', \'\'), 0, 8)), \'varchar(8)\')') ,
 PRIORITY INT  SET( "ui_mapping_text" = '1') ,
 STATUS_OPEN INT  SET( "ui_mapping_text" = '-1') ,
 AUTO_CONFIRM INT  SET( "ui_mapping_text" = '0') ,
 RESPONSE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'NULL') ,
 RESPONSE VARCHAR(200)  SET( "ui_mapping_text" = 'NULL') ,
 ASSIGNED_USER VARCHAR(50)  SET( "ui_mapping_text" = 'Q_Get_LoginName.LOGIN_NAME') ,
 ASSIGNING_USER VARCHAR(50)  SET( "ui_mapping_text" = 'Q_Get_LoginName.LOGIN_NAME') ,
 ASSIGNED_GROUP VARCHAR(10)  SET( "ui_mapping_text" = '\'NA\'') ,
 IS_ATTACHED INT  SET( "ui_mapping_text" = '1') ,
 ATTACH_TABLE VARCHAR(18)  SET( "ui_mapping_text" = '\'DDS\'') ,
 ATTACH_RECORDID INT  SET( "ui_mapping_text" = 'Q_Get_LoginName.JOBID') ,
 REGARDING VARCHAR(70)  SET( "ui_mapping_text" = 'NULL') ,
 TE_TRACKED INT  SET( "ui_mapping_text" = '0') ,
 TE_START_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'NULL') ,
 TE_END_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'NULL') ,
 TE_TOTAL_HOURS DOUBLE  SET( "ui_mapping_text" = 'NULL') ,
 TE_EXPENSES DOUBLE  SET( "ui_mapping_text" = 'NULL') ,
 f_diary_status AL_RFC_SCHEMA_GROUP (count INT )  )
 AS
SELECT Q_Get_LoginName.JOBID, 0, 0, 0, 0, 0, 0, 0,  NULL , 0, 0, Q_Get_LoginName."$p_NextUID", ((('User Verification: ' || Q_Get_LoginName.OPTIONSET_NAME) || ':') || to_char(systime(), 'hh24:mi:ss')),  NULL , (cast(print(substr(replace_substr(sysdate(), '.', ''), 0, 8)), 'varchar(8)') || to_char(systime(), 'hh24miss')), substr(replace_substr(sysdate(), ':', ''), 12, 20), cast(print(substr(replace_substr(sysdate(), '.', ''), 0, 8)), 'varchar(8)'), 1, -1, 0,  NULL ,  NULL , Q_Get_LoginName.LOGIN_NAME, Q_Get_LoginName.LOGIN_NAME, 'NA', 1, 'DDS', Q_Get_LoginName.JOBID,  NULL , 0,  NULL ,  NULL ,  NULL ,  NULL , __AL_SCRIPT_FUNCTION f_diary_status[AL_SP_RETURN](Q_Get_LoginName.DIARY_NAME)["$Diary_name"] FROM Q_Get_LoginName 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '42', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Name" = '159', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '187', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '72', "ui_acta_from_schema_0" = 'Q_Get_Diary_Details', "ui_display_name" = 'Q_WRITE_DIARY', "ui_where_text" = '(Q_Get_Diary_Details.JOBID = $gJobId)', "x" = '1490', "y" = '-381')
GUID::'2e61bdee-5d2c-4397-ba49-f8758100276a' CREATE VIEW Q_WRITE_DIARY( ATT_FORM_CODE INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ATT_FORM_CODE') ,
 ATT_FORM_SCRTY INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ATT_FORM_SCRTY') ,
 ATT_PARENT_CODE INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ATT_PARENT_CODE') ,
 ATT_SEC_REC_ID INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ATT_SEC_REC_ID') ,
 AUTO_ID INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.AUTO_ID') ,
 DIARY_DELETED INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.DIARY_DELETED') ,
 DIARY_VOID INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.DIARY_VOID') ,
 ESTIMATE_TIME DOUBLE  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ESTIMATE_TIME') ,
 NOTIFY_FLAG INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.NOTIFY_FLAG') ,
 ROUTE_FLAG INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ROUTE_FLAG') ,
 ENTRY_ID INT  KEY  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ENTRY_ID') ,
 ENTRY_NAME VARCHAR(200)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ENTRY_NAME') ,
 ENTRY_NOTES VARCHAR(2000)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ENTRY_NOTES') ,
 CREATE_DATE VARCHAR(14)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.CREATE_DATE') ,
 COMPLETE_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.COMPLETE_TIME') ,
 COMPLETE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.COMPLETE_DATE') ,
 PRIORITY INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.PRIORITY') ,
 STATUS_OPEN INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.STATUS_OPEN') ,
 AUTO_CONFIRM INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.AUTO_CONFIRM') ,
 RESPONSE_DATE VARCHAR(8)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.RESPONSE_DATE') ,
 RESPONSE VARCHAR(200)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.RESPONSE') ,
 ASSIGNED_USER VARCHAR(50)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ASSIGNED_USER') ,
 ASSIGNING_USER VARCHAR(50)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ASSIGNING_USER') ,
 ASSIGNED_GROUP VARCHAR(50)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ASSIGNED_GROUP') ,
 IS_ATTACHED INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.IS_ATTACHED') ,
 ATTACH_TABLE VARCHAR(18)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ATTACH_TABLE') ,
 ATTACH_RECORDID INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.ATTACH_RECORDID') ,
 REGARDING VARCHAR(70)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.REGARDING') ,
 TE_TRACKED INT  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.TE_TRACKED') ,
 TE_START_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.TE_START_TIME') ,
 TE_END_TIME VARCHAR(6)  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.TE_END_TIME') ,
 TE_TOTAL_HOURS DOUBLE  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.TE_TOTAL_HOURS') ,
 TE_EXPENSES DOUBLE  SET( "ui_mapping_text" = 'Q_Get_Diary_Details.TE_EXPENSES')  )
 AS
SELECT Q_Get_Diary_Details.ATT_FORM_CODE, Q_Get_Diary_Details.ATT_FORM_SCRTY, Q_Get_Diary_Details.ATT_PARENT_CODE, Q_Get_Diary_Details.ATT_SEC_REC_ID, Q_Get_Diary_Details.AUTO_ID, Q_Get_Diary_Details.DIARY_DELETED, Q_Get_Diary_Details.DIARY_VOID, Q_Get_Diary_Details.ESTIMATE_TIME, Q_Get_Diary_Details.NOTIFY_FLAG, Q_Get_Diary_Details.ROUTE_FLAG, Q_Get_Diary_Details.ENTRY_ID, Q_Get_Diary_Details.ENTRY_NAME, Q_Get_Diary_Details.ENTRY_NOTES, Q_Get_Diary_Details.CREATE_DATE, Q_Get_Diary_Details.COMPLETE_TIME, Q_Get_Diary_Details.COMPLETE_DATE, Q_Get_Diary_Details.PRIORITY, Q_Get_Diary_Details.STATUS_OPEN, Q_Get_Diary_Details.AUTO_CONFIRM, Q_Get_Diary_Details.RESPONSE_DATE, Q_Get_Diary_Details.RESPONSE, Q_Get_Diary_Details.ASSIGNED_USER, Q_Get_Diary_Details.ASSIGNING_USER, Q_Get_Diary_Details.ASSIGNED_GROUP, Q_Get_Diary_Details.IS_ATTACHED, Q_Get_Diary_Details.ATTACH_TABLE, Q_Get_Diary_Details.ATTACH_RECORDID, Q_Get_Diary_Details.REGARDING, Q_Get_Diary_Details.TE_TRACKED, Q_Get_Diary_Details.TE_START_TIME, Q_Get_Diary_Details.TE_END_TIME, Q_Get_Diary_Details.TE_TOTAL_HOURS, Q_Get_Diary_Details.TE_EXPENSES FROM Q_Get_Diary_Details  WHERE (Q_Get_Diary_Details.JOBID = $gJobId)
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Description', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '10', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Name" = '179', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '69', "x" = '1938', "y" = '-393')
GUID::'bfcddc07-6b6f-4262-bd4d-618ef6b797ab' LOAD TABLE DS_RMDB.DBO.WPA_DIARY_ENTRY INPUT(Q_WRITE_DIARY)
SET("LDRLiveLoad" = 'no', "Table_Type" = 'TABLE', "connection_port" = 'no', "ldr_configuration_enabled" = 'yes', "ldr_configurations" = '<?xml version="1.0" encoding="UTF-8"?>
<LDRConfigurations>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2008">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMDB_DBO_WPA_DIARY_ENTRY.txt</loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 12c">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMDB_DBO_WPA_DIARY_ENTRY.txt</loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 11g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMDB_DBO_WPA_DIARY_ENTRY.txt</loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Oracle" database_version="Oracle 10g">
<bulk_col_delimiter>/127</bulk_col_delimiter>
<bulk_ldr_cleanup>yes</bulk_ldr_cleanup>
<bulk_ldr_control_file_name></bulk_ldr_control_file_name>
<bulk_ldr_direct></bulk_ldr_direct>
<bulk_ldr_direct_api></bulk_ldr_direct_api>
<bulk_ldr_generate_files_only></bulk_ldr_generate_files_only>
<bulk_ldr_max_bind_array>100000</bulk_ldr_max_bind_array>
<bulk_ldr_max_discards>10</bulk_ldr_max_discards>
<bulk_ldr_mode>append</bulk_ldr_mode>
<bulk_ldr_recoverable></bulk_ldr_recoverable>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<bulk_ldr_trailing_nullcols></bulk_ldr_trailing_nullcols>
<bulk_ldr_use_control_file></bulk_ldr_use_control_file>
<column_delimiter>,</column_delimiter>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_insert_select_commit_size>yes</loader_insert_select_commit_size>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMDB_DBO_WPA_DIARY_ENTRY.txt</loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<newdb_table_type>column_store</newdb_table_type>
<oracle_auto_correct_using_merge>yes</oracle_auto_correct_using_merge>
<oracle_bulk_ldr_all_method>None</oracle_bulk_ldr_all_method>
<oracle_bulk_ldr_file_method>None</oracle_bulk_ldr_file_method>
<oracle_bulk_ldr_method>None</oracle_bulk_ldr_method>
<oracle_bulk_ldr_method_api>API</oracle_bulk_ldr_method_api>
<oracle_bulk_ldr_method_file>File</oracle_bulk_ldr_method_file>
<oracle_bulk_ldr_method_none>None</oracle_bulk_ldr_method_none>
<oracle_bulk_ldr_mode_api>append</oracle_bulk_ldr_mode_api>
<oracle_bulk_ldr_use_local_index_for_pkey>no</oracle_bulk_ldr_use_local_index_for_pkey>
<oracle_sqlldr_version></oracle_sqlldr_version>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<text_delimiter></text_delimiter>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2000">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>yes</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file></loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2012">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMDB_DBO_WPA_DIARY_ENTRY.txt</loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2014">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMDB_DBO_WPA_DIARY_ENTRY.txt</loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>4</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
<LDRConfiguration database_type="Microsoft_SQL_Server" database_version="Microsoft SQL Server 2005">
<auto_correct_using_merge>yes</auto_correct_using_merge>
<bulk_ldr_all_rows></bulk_ldr_all_rows>
<bulk_ldr_max_errors></bulk_ldr_max_errors>
<bulk_ldr_rows_per_commit>1000</bulk_ldr_rows_per_commit>
<enable_partitioning>no</enable_partitioning>
<ignore_column_case>yes</ignore_column_case>
<ignore_columns_null>no</ignore_columns_null>
<ignore_columns_value></ignore_columns_value>
<loader_auto_correct>no</loader_auto_correct>
<loader_bulk_load></loader_bulk_load>
<loader_compare_column>compare_by_name</loader_compare_column>
<loader_delete_map></loader_delete_map>
<loader_drop_and_create_table>no</loader_drop_and_create_table>
<loader_insert_map></loader_insert_map>
<loader_load_choice>append</loader_load_choice>
<loader_num_parallel_loaders>1</loader_num_parallel_loaders>
<loader_overflow_file>DS_RMDB_DBO_WPA_DIARY_ENTRY.txt</loader_overflow_file>
<loader_post_load1></loader_post_load1>
<loader_pre_load1></loader_pre_load1>
<loader_quote_names>0</loader_quote_names>
<loader_transactional>no</loader_transactional>
<loader_transactional_order>0</loader_transactional_order>
<loader_update_key_columns>no</loader_update_key_columns>
<loader_update_map></loader_update_map>
<loader_use_user_defined_keys>no</loader_use_user_defined_keys>
<loader_xact_size>1000</loader_xact_size>
<mssql_bulk_ldr_mode>append</mssql_bulk_ldr_mode>
<mssql_bulk_ldr_packet_size>0</mssql_bulk_ldr_packet_size>
<mssql_ldr_identity_insert>off</mssql_ldr_identity_insert>
<overflow_file_format>write_data</overflow_file_format>
<overriding_substitution_parameter_for_tablename></overriding_substitution_parameter_for_tablename>
<use_overflow_file>no</use_overflow_file>
<use_unicode_varchar>no</use_unicode_varchar>
<sql_text></sql_text>
</LDRConfiguration>
</LDRConfigurations>', "loader_template_table" = 'no', "name" = 'DS_RMDB', "use_unicode_varchar" = 'no');

ALGUIComment ("InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>372</CX><CY>-183</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '50', "x" = '191', "y" = '-302')
GUID::'03879e7c-3abe-4c1a-95ad-769358fb44ad' READ TABLE DS_RMX_STAGING.DBO.DDS_OPTIONSET OUTPUT(DDS_OPTIONSET)
SET("Initial_Load" = 'no', "array_fetch_size" = '1000', "cache" = 'yes', "connection_port" = 'no', "enable_partitioning" = 'no', "name" = 'DS_RMX_STAGING', "package_size" = '0', "parallel_sap_connections" = '0', "reader_is_DB2CDC_table" = 'no', "reader_overflow_file" = 'overflow_file', "reader_template_table" = 'no', "reader_use_overflow_file" = 'no', "reader_use_trex_transaction" = 'no', "table_weight" = '0', "teradata_bulk_rdr_cleanup" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = '0', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:57 2017', "ActaValue_3" = 'Mon Sep 25 19:03:45 2017', "x" = '-1', "y" = '-1')
CREATE  DATAFLOW DF_WRITE_ERROR_LOG_HEADER_CLASS_S3::'5935230b-9c0b-4eac-a1c1-8cff545b96bf'
BEGIN

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '226', "Output_Width_Name" = '207', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Merge', "ui_display_name" = 'Q_Output_Message', "x" = '961', "y" = '-326')
GUID::'057c7b49-6a8d-4286-89db-4b58d95575cc' CREATE VIEW Q_Output_Message( MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = 'Merge.MESSAGE', "ui_pasting" = 'Merge.MESSAGE')  )
 AS
SELECT Merge.MESSAGE FROM Merge  ORDER BY Merge.SEQNUM ASC 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>238</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '538', "y" = '-414')
GUID::'f3e98fcd-da42-4bd3-8103-a9bfaa111cde' CALL TRANSFORM Merge() INPUT(Q_First_Row, Q_Second_Row) OUTPUT(Merge()
);

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '453', "Output_Width_Name" = '199', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>303</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_Second_Row', "x" = '247', "y" = '-918')
GUID::'cf8c45d7-cd5a-4906-8342-a4934ac48388' CREATE VIEW Q_Second_Row( SEQNUM INT  SET( "ui_mapping_text" = '2', "ui_pasting" = '2') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'', "ui_pasting" = '\'Job started at \' || sysdate()  || \' using optionset ID \' || $gOptionSet_Id || \'.\'')  )
 AS
SELECT 2, (((('Job started at ' || sysdate()) || ' using optionset ID ') || $gOptionSet_Id) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '598', "Output_Width_Name" = '154', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>253</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_acta_from_schema_0" = 'Row_Generation', "ui_display_name" = 'Q_First_Row', "x" = '246', "y" = '0')
GUID::'080f62b3-5ea9-45d3-b7e8-9ed696dee8eb' CREATE VIEW Q_First_Row( SEQNUM INT  SET( "ui_mapping_text" = '1', "ui_pasting" = '1') ,
 MESSAGE VARCHAR(255)  SET( "ui_mapping_text" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'', "ui_pasting" = '\'Data Error Log for \' || f_getNumberPlace($gPass_Count) || \' execution of Job #\' || $gJobId || \' \' ||  job_name( ) || \'.\'')  )
 AS
SELECT 1, (((((('Data Error Log for ' || f_getnumberplace($gPass_Count)) || ' execution of Job #') || $gJobId) || ' ') || job_name()) || '.') FROM Row_Generation 
SET("distinct_run_as_separate_process" = 'no', "group_by_run_as_separate_process" = 'no', "join_run_as_separate_process" = 'no', "order_by_run_as_separate_process" = 'no', "run_as_separate_process" = 'no')
;

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = '', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>266</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-174</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UpperContainer_HeightProp" = '48', "x" = '0', "y" = '-405')
GUID::'de908530-a170-4fd4-8d2e-0ea7e71d40f1' CALL TRANSFORM Row_Generation() OUTPUT(Row_Generation( DI_ROW_ID INT  SET( "Description" = 'The integer type is automatically generated by the Row_Generation transform')  )
)
SET("cache" = 'no', "row_count" = '1', "starting_row_number" = '0', "table_weight" = '0');

ALGUIComment ("InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Description', "Output_3rd_Column_Name" = 'Content_Type', "Output_Column_Name_4" = 'Business_Name', "Output_Column_Name_5" = 'Description', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>353</CX><CY>-164</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-175</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "UI_PASSTHRU_VSPLIT_PCT" = '50', "UpperContainer_HeightProp" = '48', "ui_display_name" = '"$gErrorLogFileNameSTDClass"(DDS_ErrorLog_Info_S3)', "x" = '1091', "y" = '-913')
GUID::'242d944d-f879-4441-8d51-639f1556dd7b' LOAD FILE DDS_ErrorLog_Info_S3."$gErrorLogFileNameSTDClass" INPUT(Q_Output_Message)
SET("connection_port" = 'no', "file_location" = 'local', "fl_file_name" = '$gErrorLogFileNameSTDClass', "isstreamdebugfile" = 'no', "loader_load_choice" = 'replace', "name" = 'UNNAMED', "validate_decimal_data" = 'yes');

END
 SET ("Cache_type" = 'pageable_cache', "Parallelism_degree" = 'default', "allows_both_input_and_output" = 'yes', "dataflow_loader_bulk_load" = 'no', "dataflow_loader_commit_size" = 'default', "dataflow_loader_row_size_bytes" = '0', "dataflow_number_of_loaders" = '0', "run_once" = 'no', "use_dataflow_links" = 'no', "use_datastore_links" = 'yes', "validation_xform_exists" = 'no', "validation_xform_stats" = 'no')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaName_4" = 'RWeb_Service_Enabled', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Apr 17 07:18:15 2020', "ActaValue_3" = 'Fri May  1 05:29:05 2020', "ActaValue_4" = 'YES', "x" = '-1', "y" = '-1')
CREATE SESSION J_DDS::'7d703518-9fff-4ca6-ae93-df392786316f'( )
DECLARE
     GLOBAL $gJobId INT ;
     GLOBAL $gOptionSet_Id INT ;
     GLOBAL $gFileDirectory VARCHAR(255) ;
     GLOBAL $gEvents_Available INT ;
     GLOBAL $gClaims_Available INT ;
     GLOBAL $gPayments_Available INT ;
     GLOBAL $gAdjusters_Available INT ;
     GLOBAL $gEnhancedNotes_Available INT ;
     GLOBAL $gMedWatch_Available INT ;
     GLOBAL $gShortTermDisability_Available INT ;
     GLOBAL $gEvents_ImportFile_Name VARCHAR(255) ;
     GLOBAL $gClaims_ImportFile_Name VARCHAR(255) ;
     GLOBAL $gPayments_ImportFile_Name VARCHAR(255) ;
     GLOBAL $gAdjusters_ImportFile_Name VARCHAR(255) ;
     GLOBAL $gMedWatch_ImportFile_Name VARCHAR(255) ;
     GLOBAL $gEnhNotes_ImportFile_Name VARCHAR(255) ;
     GLOBAL $gSTD_Plan_ImportFile_Name VARCHAR(255) ;
     GLOBAL $gSTD_Class_ImportFile_Name VARCHAR(255) ;
     GLOBAL $gATLVersionNumber VARCHAR(255) ;
     GLOBAL $gVerification_Flag INT ;
     GLOBAL $gValidate_Supplementals INT ;
     GLOBAL $gDiary_To_Users VARCHAR(100) ;
     GLOBAL $gDBName VARCHAR(255) ;
     GLOBAL $Temp INT ;
     GLOBAL $gSecondaryDelimiter VARCHAR(1) ;
     GLOBAL $gStage INT ;
     GLOBAL $gPass_Count INT ;
     GLOBAL $gJobName VARCHAR(10) ;
     GLOBAL $gDiaryStatistics VARCHAR(255) ;
     GLOBAL $gErrorCount INT ;
     GLOBAL $gSuppError INT ;
     GLOBAL $gStopVerify INT ;
     GLOBAL $gErrorTime VARCHAR(14) ;
     GLOBAL $gErrorMessage VARCHAR(4000) ;
     GLOBAL $gErrorNumber INT ;
     GLOBAL $gErrorLogFileName VARCHAR(100) ;
     GLOBAL $gFileName VARCHAR(100) ;
     GLOBAL $gUserId INT ;
     GLOBAL $gErrorLogFileNameEvent VARCHAR(100) ;
     GLOBAL $gErrorLogFileNameClaim VARCHAR(100) ;
     GLOBAL $gErrorLogFileNamePayment VARCHAR(100) ;
     GLOBAL $gErrorLogFileNameEnhNotes VARCHAR(100) ;
     GLOBAL $gErrorLogFileNameSTDPlan VARCHAR(100) ;
     GLOBAL $gErrorLogFileNameSTDClass VARCHAR(100) ;
     GLOBAL $gErrorLogFileNameMedWatch VARCHAR(100) ;
     GLOBAL $gErrorLogFileNameAdjuster VARCHAR(100) ;
     GLOBAL $gS3FileLocationFlag INT ;
     GLOBAL $gErrorLogMetadata VARCHAR(100) ;
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>216</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'T_DDS', "x" = '243', "y" = '-489')
TRY
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '591', "y" = '-684')
CALL PLAN WF_DDS_READ_OPTIONSET::'3c2f4b09-73dd-49ae-94f2-420f0a2007cd'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '930', "y" = '-819')
CALL PLAN WF_DDS_READ_DATA::'e4b4fc03-9022-46cf-a36f-72bbbca5939a'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1304', "y" = '-963')
CALL PLAN WF_DDS_VALIDATE_IMPORT_DATA::'6b6aa3be-6a1d-49d4-8f70-a93075f53908'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1618', "y" = '-1093')
CALL PLAN WF_DDS_AFTER_IMPORT::'e1620b74-a364-4605-95a6-f9cd0bbc799f'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>216</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS', "x" = '1966', "y" = '-1250')
CATCH (1001,1002,1003,1004,1005,1006,1007,1008,1010)
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'SC_SET_ERROR_VARIABLES', "ui_script_text" = '$gErrorTime = to_char(error_timestamp(),\'YYYYMMDDHH24MISS\');
$gErrorNumber = error_number();
$gErrorMessage = error_message();
', "x" = '628', "y" = '-150')
BEGIN_SCRIPT
$gErrorTime = to_char(error_timestamp(), 'YYYYMMDDHH24MISS');$gErrorNumber = error_number();$gErrorMessage = error_message();END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>450</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '982', "y" = '-345')
CALL PLAN WF_DDS_TRY_CATCH_ERROR::'bc3e747d-2c5b-44e7-80df-5403c8a5d0c0'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1501', "y" = '-425')
CALL PLAN WF_DDS_WRITE_ERROR_LOG::'0b3f7874-d3b0-40a4-8c5b-07a28de41d76'();
END

END_TRY
END
 SET ("job_GV_$gATLVersionNumber" = '\'SQL | ORACLE | DA DDS | Compatible with RMA 16.1 and onwards | CMD 2020.09 |\'', "job_GV_$gS3FileLocationFlag" = '0', "job_GV_$gSecondaryDelimiter" = '\'|\'', "job_checkpoint_enabled" = 'no', "job_collect_statistics" = 'no', "job_collect_statistics_monitor" = 'no', "job_create_debug_package" = 'no', "job_enable_assemblers" = 'yes', "job_enable_audit" = 'yes', "job_enable_dataquality" = 'yes', "job_export_repo" = 'no', "job_export_reports" = 'no', "job_guid" = '7d703518-9fff-4ca6-ae93-df392786316f', "job_isrecoverable" = 'no', "job_mode" = 'Multi-Process', "job_monitor_sample_rate" = '1000', "job_monitor_timer_rate" = '5', "job_name" = 'J_DDS', "job_print_version" = 'no', "job_testmode_enabled" = 'no', "job_trace_abapquery" = 'no', "job_trace_all" = 'no', "job_trace_ascomm" = 'no', "job_trace_assemblers" = 'no', "job_trace_audit" = 'no', "job_trace_dataflow" = 'yes', "job_trace_idoc_file" = 'no', "job_trace_memory_loader" = 'no', "job_trace_memory_reader" = 'no', "job_trace_optimized_dataflow" = 'no', "job_trace_parallel_execution" = 'no', "job_trace_rfc_function" = 'no', "job_trace_row" = 'no', "job_trace_script" = 'no', "job_trace_session" = 'yes', "job_trace_sql_only" = 'no', "job_trace_sqlfunctions" = 'no', "job_trace_sqlloaders" = 'no', "job_trace_sqlreaders" = 'no', "job_trace_sqltransforms" = 'no', "job_trace_stored_procedure" = 'no', "job_trace_table" = 'no', "job_trace_table_reader" = 'no', "job_trace_transform" = 'no', "job_trace_userfunction" = 'no', "job_trace_usertransform" = 'no', "job_trace_workflow" = 'yes', "job_type" = 'batch', "job_use_statistics" = 'yes', "locale_codepage" = '<default>', "locale_language" = '<default>', "locale_territory" = '<default>')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue May 31 11:24:52 2016', "ActaValue_3" = 'Fri May 06 19:19:07 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_AFTER_IMPORT::'e1620b74-a364-4605-95a6-f9cd0bbc799f'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>422</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '616', "y" = '-672')
CALL PLAN WF_DDS_WRITE_FINAL_DIARY::'7fb28fd2-5173-43ad-ac32-163d54916784'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1097', "y" = '-979')
CALL PLAN WF_DDS_WRITE_ERROR_LOG::'0b3f7874-d3b0-40a4-8c5b-07a28de41d76'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1584', "y" = '-1188')
CALL PLAN WF_DDS_WRITE_PROCESS_LOG::'615af7aa-482c-4692-8ccc-90c7f8550b06'();
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Wed Jan 27 22:01:57 2016', "ActaValue_3" = 'Mon Dec 08 12:39:51 2014', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_POPULATE_UV::'6d3e936f-6cb6-423c-8f39-6a2eb35e0d5b'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '744', "y" = '-719')
CALL DATAFLOW DF_DDS_POPULATE_UV::'9f843da8-2178-4a0a-9a31-fcdf5fca32aa'();
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Mar 22 18:53:45 2018', "ActaValue_3" = 'Thu Mar 22 19:01:23 2018', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_READ_DATA::'e4b4fc03-9022-46cf-a36f-72bbbca5939a'( )
DECLARE
     $lEnhReadCount INT ;
     $lEventReadCount INT ;
     $lSTDPlanReadCount INT ;
     $lSTDClassReadCount INT ;
     $lClaimReadCount INT ;
     $lPayReadCount INT ;
     $lMedwatchReadCount INT ;
     $lAdjusterReadCount INT ;
BEGIN
 AlGUIComment ("If_condition" = '$gEvents_Available = 1 AND $gStage = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_IMPORT_FILE_EVENTS', "x" = '115', "y" = '-346')
IF ((($gEvents_Available = 1) AND
   ($gStage = 1)) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '297', "y" = '-491')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '900', "y" = '-356')
CALL DATAFLOW DF_DDS_READ_FILE_EVENTS_S3::'e8fbe99a-b140-4287-a031-0dea80bcfd50'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '184', "y" = '-169')
CALL DATAFLOW DF_DDS_READ_FILE_EVENTS::'e7dc1edb-4d18-46fc-84a5-1606a55f3541'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_EVENT_PROCESS_LOG', "ui_script_text" = '#Job Running status on UI


$lEventReadCount=sql(\'DS_RMX_STAGING\',\'SELECT COUNT(*) FROM DDS_EVENT WHERE JOBID = \' || $gJobID);


sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Total Number of Records read in EVENT :\'||$lEventReadCount||\'\\\',\\\'EVENT\\\',\\\'DDS_EVENT\\\',-11)\');


', "x" = '1115', "y" = '-338')
BEGIN_SCRIPT
$lEventReadCount = sql('DS_RMX_STAGING', ('SELECT COUNT(*) FROM DDS_EVENT WHERE JOBID = ' || $gJobID));sql('DS_RMX_STAGING', (((('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Total Number of Records read in EVENT :') || $lEventReadCount) || '\',\'EVENT\',\'DDS_EVENT\',-11)'));END
END
 AlGUIComment ("If_condition" = '$gShortTermDisability_Available = 1 AND $gSTD_Plan_ImportFile_Name IS NOT NULL AND $gStage = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_IMPORT_FILE_PLAN', "x" = '490', "y" = '-244')
IF (((($gShortTermDisability_Available = 1) AND
   ($gSTD_Plan_ImportFile_Name IS NOT  NULL )) AND
   ($gStage = 1)) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '638', "y" = '-206')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '635', "y" = '-237')
CALL DATAFLOW DF_DDS_READ_FILE_STD_PLAN_S3::'443fec4d-2271-4802-a5e5-5c149e46e3f0'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '947', "y" = '-306')
CALL DATAFLOW DF_DDS_READ_FILE_STD_PLAN::'e7cd86df-062a-4e75-b0a0-c49b931bbc7c'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_STD_PLAN_PROCESS_LOG', "ui_script_text" = '#Job Running status on UI


$lSTDPlanReadCount=sql(\'DS_RMX_STAGING\',\'SELECT COUNT(*) FROM DDS_STD_PLAN WHERE JOBID = \' || $gJobID);


sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Total Number of Records read in STD PLAN :\'||$lSTDPlanReadCount||\'\\\',\\\'STD_PLAN\\\',\\\'DDS_STD_PLAN\\\',-11)\');


', "x" = '1081', "y" = '-300')
BEGIN_SCRIPT
$lSTDPlanReadCount = sql('DS_RMX_STAGING', ('SELECT COUNT(*) FROM DDS_STD_PLAN WHERE JOBID = ' || $gJobID));sql('DS_RMX_STAGING', (((('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Total Number of Records read in STD PLAN :') || $lSTDPlanReadCount) || '\',\'STD_PLAN\',\'DDS_STD_PLAN\',-11)'));END
END
 AlGUIComment ("If_condition" = '$gShortTermDisability_Available = 1 AND $gSTD_Class_ImportFile_Name IS NOT NULL AND $gStage = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_IMPORT_FILE_CLASS', "x" = '791', "y" = '-385')
IF (((($gShortTermDisability_Available = 1) AND
   ($gSTD_Class_ImportFile_Name IS NOT  NULL )) AND
   ($gStage = 1)) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '116', "y" = '-281')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1025', "y" = '-366')
CALL DATAFLOW DF_DDS_READ_FILE_STD_CLASS_S3::'260a0276-56fc-467e-a723-ce785cebda5e'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '663', "y" = '-228')
CALL DATAFLOW DF_DDS_READ_FILE_STD_CLASS::'ebbb9a18-79b1-47ed-9395-e7e3536f6d82'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_STD_CLASS_PROCESS_LOG', "ui_script_text" = '#Job Running status on UI


$lSTDClassReadCount=sql(\'DS_RMX_STAGING\',\'SELECT COUNT(*) FROM DDS_STD_CLASS WHERE JOBID = \' || $gJobID);


sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Total Number of Records read in STD CLASS :\'||$lSTDClassReadCount||\'\\\',\\\'STD_CLASS\\\',\\\'DDS_STD_CLASS\\\',-11)\');


', "x" = '894', "y" = '-272')
BEGIN_SCRIPT
$lSTDClassReadCount = sql('DS_RMX_STAGING', ('SELECT COUNT(*) FROM DDS_STD_CLASS WHERE JOBID = ' || $gJobID));sql('DS_RMX_STAGING', (((('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Total Number of Records read in STD CLASS :') || $lSTDClassReadCount) || '\',\'STD_CLASS\',\'DDS_STD_CLASS\',-11)'));END
END
 AlGUIComment ("If_condition" = '$gClaims_Available = 1 AND $gStage = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_IMPORT_FILE_CLAIMS', "x" = '1100', "y" = '-545')
IF ((($gClaims_Available = 1) AND
   ($gStage = 1)) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '247', "y" = '-428')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1069', "y" = '-394')
CALL DATAFLOW DF_DDS_READ_FILE_CLAIMS_S3::'5e8a719f-86b0-4bf1-8165-22454bcda3b6'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '262', "y" = '-256')
CALL DATAFLOW DF_DDS_READ_FILE_CLAIMS::'8cbeba29-2647-4556-93a2-b98422589359'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_CLAIM_PROCESS_LOG', "ui_script_text" = '#Job Running status on UI


$lClaimReadCount=sql(\'DS_RMX_STAGING\',\'SELECT COUNT(*) FROM DDS_CLAIM WHERE JOBID = \' || $gJobID);


sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID, PROCESS_DESC, MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Total Number of Records read in CLAIM :\'||$lClaimReadCount||\'\\\',\\\'CLAIM\\\',\\\'DDS_CLAIM\\\',-11)\');


', "x" = '1084', "y" = '-253')
BEGIN_SCRIPT
$lClaimReadCount = sql('DS_RMX_STAGING', ('SELECT COUNT(*) FROM DDS_CLAIM WHERE JOBID = ' || $gJobID));sql('DS_RMX_STAGING', (((('INSERT INTO DDS_PROCESS_LOG_T (JOBID, PROCESS_DESC, MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Total Number of Records read in CLAIM :') || $lClaimReadCount) || '\',\'CLAIM\',\'DDS_CLAIM\',-11)'));END
END
 AlGUIComment ("If_condition" = '$gPayments_Available = 1 AND $gStage = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_IMPORT_FILE_PAYMENTS', "x" = '1416', "y" = '-710')
IF ((($gPayments_Available = 1) AND
   ($gStage = 1)) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '819', "y" = '-168')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '991', "y" = '-263')
CALL DATAFLOW DF_DDS_READ_FILE_PAYMENTS_S3::'7045d575-338e-4269-a747-a9b2ffc61c49'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '341', "y" = '-175')
CALL DATAFLOW DF_DDS_READ_FILE_PAYMENTS::'e15855a0-f071-4c4e-b6ba-8be4a5606f03'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>444</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_PAYMENT_PROCESS_LOG', "ui_script_text" = '#Job Running status on UI


$lPayReadCount =sql(\'DS_RMX_STAGING\',\'SELECT COUNT(*) FROM DDS_PAYMENT WHERE JOBID = \' || $gJobID);


sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Total Number of Records read in PAYMENTS :\'||$lPayReadCount||\'\\\',\\\'PAYMENT\\\',\\\'DDS_PAYMENT\\\',-11)\');


', "x" = '1254', "y" = '-325')
BEGIN_SCRIPT
$lPayReadCount = sql('DS_RMX_STAGING', ('SELECT COUNT(*) FROM DDS_PAYMENT WHERE JOBID = ' || $gJobID));sql('DS_RMX_STAGING', (((('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Total Number of Records read in PAYMENTS :') || $lPayReadCount) || '\',\'PAYMENT\',\'DDS_PAYMENT\',-11)'));END
END
 AlGUIComment ("If_condition" = '$gEnhancedNotes_Available = 1 AND $gStage = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_IMPORT_FILE_ENHNOTES', "x" = '1718', "y" = '-887')
IF ((($gEnhancedNotes_Available = 1) AND
   ($gStage = 1)) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '281', "y" = '-119')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1353', "y" = '-378')
CALL DATAFLOW DF_DDS_READ_FILE_ENHNOTES_S3::'a68603fb-c594-49d6-8a3f-7ff0c9585d43'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '388', "y" = '-144')
CALL DATAFLOW DF_DDS_READ_FILE_ENHNOTES::'d61d15f0-92d4-4e2e-807b-2b14b9c712b2'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_ENH_PROCESS_LOG', "ui_script_text" = '#Job Running status on UI


$lEnhReadCount =sql(\'DS_RMX_STAGING\',\'SELECT COUNT(*) FROM DDS_ENHANCEDNOTES WHERE JOBID = \' || $gJobID);

#print (\'Count\'||$lEnhReadCount);


sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Total Number of Records read in Enhanced Notes :\'||$lEnhReadCount||\'\\\',\\\'ENHANCEDNOTES\\\',\\\'DDS_ENHANCEDNOTES\\\',-11)\');


', "x" = '1144', "y" = '-359')
BEGIN_SCRIPT
$lEnhReadCount = sql('DS_RMX_STAGING', ('SELECT COUNT(*) FROM DDS_ENHANCEDNOTES WHERE JOBID = ' || $gJobID));sql('DS_RMX_STAGING', (((('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Total Number of Records read in Enhanced Notes :') || $lEnhReadCount) || '\',\'ENHANCEDNOTES\',\'DDS_ENHANCEDNOTES\',-11)'));END
END
 AlGUIComment ("If_condition" = '$gMedWatch_Available = 1 AND $gStage = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_IMPORT_FILE_MedWatch', "x" = '2015', "y" = '-1061')
IF ((($gMedWatch_Available = 1) AND
   ($gStage = 1)) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '600', "y" = '-253')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1050', "y" = '-181')
CALL DATAFLOW DF_DDS_READ_FILE_MEDWATCH_S3::'b36950a0-2096-495b-84cd-b1a6aec3ac5a'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '268', "y" = '-213')
CALL DATAFLOW DF_DDS_READ_FILE_MEDWATCH::'a9ec853c-7712-4081-98d4-a2108ad86cbd'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>453</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_MEDWATCH_PROCESS_LOG', "ui_script_text" = '#Job Running status on UI


$lMedwatchReadCount =sql(\'DS_RMX_STAGING\',\'SELECT COUNT(*) FROM DDS_MEDWATCH WHERE JOBID = \' || $gJobID);


sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Total Number of Records read in MEDWATCH :\'||$lMedwatchReadCount||\'\\\',\\\'MEDWATCH\\\',\\\'DDS_MEDWATCH\\\',-11)\');


', "x" = '1156', "y" = '-278')
BEGIN_SCRIPT
$lMedwatchReadCount = sql('DS_RMX_STAGING', ('SELECT COUNT(*) FROM DDS_MEDWATCH WHERE JOBID = ' || $gJobID));sql('DS_RMX_STAGING', (((('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Total Number of Records read in MEDWATCH :') || $lMedwatchReadCount) || '\',\'MEDWATCH\',\'DDS_MEDWATCH\',-11)'));END
END
 AlGUIComment ("If_condition" = '$gAdjusters_Available = 1 AND $gStage = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>403</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_IMPORT_FILE_Adjuster', "x" = '2350', "y" = '-1228')
IF ((($gAdjusters_Available = 1) AND
   ($gStage = 1)) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '187', "y" = '-344')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1103', "y" = '-319')
CALL DATAFLOW DF_DDS_READ_FILE_ADJUSTER_S3::'95eee548-4278-4f16-8839-b0790e3796e9'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '485', "y" = '-184')
CALL DATAFLOW DF_DDS_READ_FILE_ADJUSTER::'db74f885-a8c8-4d60-b1aa-b243d250ad37'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_ADJUSTER_PROCESS_LOG', "ui_script_text" = '#Job Running status on UI


$lAdjusterReadCount=sql(\'DS_RMX_STAGING\',\'SELECT COUNT(*) FROM DDS_ADJUSTER WHERE JOBID = \' || $gJobID);

sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Total Number of Records read in ADJUSTER :\'||$lAdjusterReadCount||\'\\\',\\\'ADJUSTER\\\',\\\'DDS_ADJUSTER\\\',-11)\');


', "x" = '1216', "y" = '-397')
BEGIN_SCRIPT
$lAdjusterReadCount = sql('DS_RMX_STAGING', ('SELECT COUNT(*) FROM DDS_ADJUSTER WHERE JOBID = ' || $gJobID));sql('DS_RMX_STAGING', (((('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Total Number of Records read in ADJUSTER :') || $lAdjusterReadCount) || '\',\'ADJUSTER\',\'DDS_ADJUSTER\',-11)'));END
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>388</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_NEXT_STAGE', "ui_script_text" = '# MOVE TO NEXT STAGE: VALIDATION
$gStage = 2;', "x" = '2679', "y" = '-1422')
BEGIN_SCRIPT
$gStage = 2;END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Apr 17 07:18:15 2020', "ActaValue_3" = 'Thu Mar 22 19:19:58 2018', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_READ_OPTIONSET::'3c2f4b09-73dd-49ae-94f2-420f0a2007cd'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>441</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_GET_PASS_COUNT', "ui_script_text" = '############################

## Get information about the number of times this unique job id has been run to determine the starting stage.

## Default pass_count to 0 if no entries have been found in the DA_STATISTICS table for the current JobId

$gPass_Count = lookup_ext([DS_RMX_STAGING.DBO.DA_STATISTICS,\'PRE_LOAD_CACHE\',\'MAX\'], [PASS_COUNT],[0],[JOBID,\'=\',$gJobId],[],[$gStage]) SET ("run_as_separate_process"=\'no\', "output_cols_info"=\'<?xml version="1.0" encoding="UTF-8"?><output_cols_info><col index="1" expression="no"/>
</output_cols_info>\' );

## If pass_count is 1 or greater, the load stage has already occured and the job can begin at validation.
## Stage  ->  Action
##   1    ->  Load Data
##   2    ->  Validate
##   3    ->  Import

#PRINT(\'PASS COUNT 1: \');
#print($gPass_Count);

#PRINT(\'STAGE COUNT 1: \');
#print($gStage);


if ($gPass_Count = 0)
begin
	$gStage = 1;	
end
else if ($gPass_Count >= 1)
begin
	$gStage = 2;	
end

## Increment pass_count for the newest (this) execution for the current JobId.

$gPass_Count = $gPass_Count + 1;

# Stop Verify Count
$gStopVerify =lookup_ext([DS_RMX_STAGING.DBO.USER_VERIFICATION,\'PRE_LOAD_CACHE\',\'MAX\'], [STOP_VERIFICATION],[0],[JOBID,\'=\',$gJobID,OPTIONSET_ID,\'=\',$gOptionSet_Id,MODULE_NAME,\'=\',\'DDS\'],[],[$gStopVerify]) SET ("run_as_separate_process"=\'no\', "output_cols_info"=\'<?xml version="1.0" encoding="UTF-8"?><output_cols_info><col index="1" expression="no"/>
</output_cols_info>\' );

#error log file name
#file extentionchanged from csv to txt by neha
#$gErrorLogFileName = \'ErrorLog\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\';  commented by neha

#neha change start

$gErrorLogFileNameEvent = \'ErrorLogEvent\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\';
$gErrorLogFileNameClaim = \'ErrorLogClaim\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\';
$gErrorLogFileNamePayment = \'ErrorLogPayment\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\';
$gErrorLogFileNameEnhNotes = \'ErrorLogEnhNotes\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\';
$gErrorLogFileNameSTDPlan  = \'ErrorLogSTDPlan\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\';
$gErrorLogFileNameSTDClass  = \'ErrorLogSTDClass\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\';
$gErrorLogFileNameMedWatch  = \'ErrorLogMedWatch\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\';
$gErrorLogFileNameAdjuster  = \'ErrorLogAdjuster\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\';


		
#Below code is added for getting the sysdate  and systime to append them in the process log file name
$gFileName =   \'DDS_ProcessLog_\'||cast(substr(replace_substr(cast(sysdate(), \'varchar(10)\'), \'.\', \'\'), 0, 8), \'varchar(8)\')|| \'_\'||ltrim_blanks(replace_substr(substr(cast(sysdate(),\'varchar(25)\'),index(cast(sysdate(), \'varchar(25)\'),\' \', 0), 25) ,\':\',\'\')) || \'.txt\';

##JobName without the J_

$gJobName =\'DDS\';

#PRINT(\'PASS COUNT 2: \');
#print($gPass_Count);

#PRINT(\'STAGE COUNT 2: \');
#print($gStage);

#PRINT(\'STOP VERIFY : \');
#print($gStopVerify);








', "x" = '88', "y" = '-47')
BEGIN_SCRIPT
$gPass_Count = lookup_ext([DS_RMX_STAGING.DBO.DA_STATISTICS, 'PRE_LOAD_CACHE', 'MAX'], [ PASS_COUNT ], [ 0 ], [ JOBID, '=', $gJobId ], [  ], [ $gStage ]) 
SET("output_cols_info" = '<?xml version="1.0" encoding="UTF-8"?><output_cols_info><col index="1" expression="no"/>
</output_cols_info>', "run_as_separate_process" = 'no')
;IF (($gPass_Count = 0) )
BEGIN
$gStage = 1;END
ELSE
IF (($gPass_Count >= 1) )
BEGIN
$gStage = 2;END
$gPass_Count = ($gPass_Count + 1);$gStopVerify = lookup_ext([DS_RMX_STAGING.DBO.USER_VERIFICATION, 'PRE_LOAD_CACHE', 'MAX'], [ STOP_VERIFICATION ], [ 0 ], [ JOBID, '=', $gJobID, OPTIONSET_ID, '=', $gOptionSet_Id, MODULE_NAME, '=', 'DDS' ], [  ], [ $gStopVerify ]) 
SET("output_cols_info" = '<?xml version="1.0" encoding="UTF-8"?><output_cols_info><col index="1" expression="no"/>
</output_cols_info>', "run_as_separate_process" = 'no')
;$gErrorLogFileNameEvent = (('ErrorLogEvent' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt');$gErrorLogFileNameClaim = (('ErrorLogClaim' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt');$gErrorLogFileNamePayment = (('ErrorLogPayment' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt');$gErrorLogFileNameEnhNotes = (('ErrorLogEnhNotes' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt');$gErrorLogFileNameSTDPlan = (('ErrorLogSTDPlan' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt');$gErrorLogFileNameSTDClass = (('ErrorLogSTDClass' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt');$gErrorLogFileNameMedWatch = (('ErrorLogMedWatch' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt');$gErrorLogFileNameAdjuster = (('ErrorLogAdjuster' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt');$gFileName = (((('DDS_ProcessLog_' || cast(substr(replace_substr(cast(sysdate(), 'varchar(10)'), '.', ''), 0, 8), 'varchar(8)')) || '_') || ltrim_blanks(replace_substr(substr(cast(sysdate(), 'varchar(25)'), index(cast(sysdate(), 'varchar(25)'), ' ', 0), 25), ':', ''))) || '.txt');$gJobName = 'DDS';END
 AlGUIComment ("If_condition" = '$gStage = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_GET_OPTIONSET', "x" = '343', "y" = '-291')
IF (($gStage = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>422</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '984', "y" = '-329')
CALL DATAFLOW DF_DDS_GET_OPTIONSET::'9b1b9886-9e90-4dd9-b11e-eba07f305303'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_GLOBAL_VARIABLES', "ui_script_text" = 'if (upper(db_type(\'DS_RMDB\')) = \'MICROSOFT_SQL_SERVER\')
begin
     $gDBName = upper(db_database_name(\'DS_RMDB\'));
end

if (upper(db_type(\'DS_RMDB\')) = \'ORACLE\')
begin
     $gDBName = upper(db_owner(\'DS_RMDB\',\'DBO\'));	
end

$Temp = lookup_ext([DS_RMX_STAGING.DBO.DDS_OPTIONSET,\'PRE_LOAD_CACHE\',\'MAX\'], [PAYMENTS_AVAILABLE,ADJUSTER_NOTES_AVAILABLE,EVENTS_AVAILABLE,CLAIMS_AVAILABLE,STD_AVAILABLE,MED_WATCH_AVAILABLE,ENHANCED_NOTES_AVAILABLE,PERFORM_VERIFICATION,VALIDATE_SUPPLEMENTALS,DIARY_TO_USERS,EVENT_IMPORTFILE_NAME,CLAIM_IMPORTFILE_NAME,MEDWATCH_IMPORTFILE_NAME,STD_PLAN_IMPORTFILE_NAME,STD_CLASS_IMPORTFILE_NAME,ADJUSTER_IMPORTFILE_NAME,PAYMENT_IMPORTFILE_NAME,EN_IMPORTFILE_NAME],[NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL],[JOBID,\'=\',$gJobId],[],[$gPayments_Available,$gAdjusters_Available,$gEvents_Available,$gClaims_Available,$gShortTermDisability_Available,$gMedWatch_Available,$gEnhancedNotes_Available,$gVerification_Flag,$gValidate_Supplementals,$gDiary_To_Users,$gEvents_ImportFile_Name,$gClaims_ImportFile_Name,$gMedWatch_ImportFile_Name,$gSTD_Plan_ImportFile_Name,$gSTD_Class_ImportFile_Name,$gAdjusters_ImportFile_Name,$gPayments_ImportFile_Name,$gEnhNotes_ImportFile_Name]) SET ("run_as_separate_process"=\'no\', "output_cols_info"=\'<?xml version="1.0" encoding="UTF-8"?><output_cols_info><col index="1" expression="no"/>
<col index="2" expression="no"/>
<col index="3" expression="no"/>
<col index="4" expression="no"/>
<col index="5" expression="no"/>
<col index="6" expression="no"/>
<col index="7" expression="no"/>
<col index="8" expression="no"/>
<col index="9" expression="no"/>
<col index="10" expression="no"/>
<col index="11" expression="no"/>
<col index="12" expression="no"/>
<col index="13" expression="no"/>
<col index="14" expression="no"/>
<col index="15" expression="no"/>
<col index="16" expression="no"/>
<col index="17" expression="no"/>
<col index="18" expression="no"/>
</output_cols_info>\' );


$Temp = lookup_ext([DS_RMDB.DBO.DATA_INTEGRATOR,\'PRE_LOAD_CACHE\',\'MAX\'], [USER_ID],[NULL],[OPTIONSET_ID,\'=\',$gOptionSet_Id],[],[$gUserId]) SET ("run_as_separate_process"=\'no\', "output_cols_info"=\'<?xml version="1.0" encoding="UTF-8"?><output_cols_info><col index="1" expression="no"/>
</output_cols_info>\' );

#mkaur24 09/12/2017 Start S3 changes
IF( $gS3FileLocationFlag = 1)
begin

$gFileName =  $gFileName || \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;


$gErrorLogMetadata =    \'ErrorLog_Metadata.txt\' || \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;

$gErrorLogFileNameEvent = \'ErrorLogEvent\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\'|| \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;
$gErrorLogFileNameClaim = \'ErrorLogClaim\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\'|| \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;
$gErrorLogFileNamePayment = \'ErrorLogPayment\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\'|| \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;
$gErrorLogFileNameEnhNotes = \'ErrorLogEnhNotes\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\'|| \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;
$gErrorLogFileNameSTDClass  = \'ErrorLogSTDClass\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\'|| \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;
$gErrorLogFileNameMedWatch  = \'ErrorLogMedWatch\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\'|| \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;
$gErrorLogFileNameAdjuster  = \'ErrorLogAdjuster\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\'|| \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;
$gErrorLogFileNameSTDPlan  = \'ErrorLogSTDPlan\' || substr(to_char($gPass_Count, \'0000\'), 2, 4) || \'.txt\' || \'_\'	 || cast( $gJobId ,\'VARCHAR(100)\') ;


$gEvents_ImportFile_Name= $gEvents_ImportFile_Name || \'.\' || cast( $gOptionSet_Id  ,\'VARCHAR(4000)\') ;
$gAdjusters_ImportFile_Name = $gAdjusters_ImportFile_Name  || \'.\' || cast( $gOptionSet_Id  ,\'VARCHAR(4000)\') ;
$gClaims_ImportFile_Name=  $gClaims_ImportFile_Name || \'.\' ||cast( $gOptionSet_Id  ,\'VARCHAR(4000)\') ;
$gPayments_ImportFile_Name= $gPayments_ImportFile_Name || \'.\' || cast( $gOptionSet_Id  ,\'VARCHAR(4000)\') ;
$gSTD_Class_ImportFile_Name= $gSTD_Class_ImportFile_Name || \'.\' || cast( $gOptionSet_Id  ,\'VARCHAR(4000)\') ;
$gSTD_Plan_ImportFile_Name= $gSTD_Plan_ImportFile_Name || \'.\' || cast( $gOptionSet_Id  ,\'VARCHAR(4000)\') ;
$gMedWatch_ImportFile_Name= $gMedWatch_ImportFile_Name || \'.\' || cast( $gOptionSet_Id  ,\'VARCHAR(4000)\') ;
$gEnhNotes_ImportFile_Name= $gEnhNotes_ImportFile_Name|| \'.\' || cast( $gOptionSet_Id  ,\'VARCHAR(4000)\') ;

end


#mkaur24 09/12/2017  S3 changes end


', "x" = '622', "y" = '-420')
BEGIN_SCRIPT
IF ((upper(db_type('DS_RMDB')) = 'MICROSOFT_SQL_SERVER') )
BEGIN
$gDBName = upper(db_database_name('DS_RMDB'));END
IF ((upper(db_type('DS_RMDB')) = 'ORACLE') )
BEGIN
$gDBName = upper(db_owner('DS_RMDB', 'DBO'));END
$Temp = lookup_ext([DS_RMX_STAGING.DBO.DDS_OPTIONSET, 'PRE_LOAD_CACHE', 'MAX'], [ PAYMENTS_AVAILABLE, ADJUSTER_NOTES_AVAILABLE, EVENTS_AVAILABLE, CLAIMS_AVAILABLE, STD_AVAILABLE, MED_WATCH_AVAILABLE, ENHANCED_NOTES_AVAILABLE, PERFORM_VERIFICATION, VALIDATE_SUPPLEMENTALS, DIARY_TO_USERS, EVENT_IMPORTFILE_NAME, CLAIM_IMPORTFILE_NAME, MEDWATCH_IMPORTFILE_NAME, STD_PLAN_IMPORTFILE_NAME, STD_CLASS_IMPORTFILE_NAME, ADJUSTER_IMPORTFILE_NAME, PAYMENT_IMPORTFILE_NAME, EN_IMPORTFILE_NAME ], [  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL ,  NULL  ], [ JOBID, '=', $gJobId ], [  ], [ $gPayments_Available, $gAdjusters_Available, $gEvents_Available, $gClaims_Available, $gShortTermDisability_Available, $gMedWatch_Available, $gEnhancedNotes_Available, $gVerification_Flag, $gValidate_Supplementals, $gDiary_To_Users, $gEvents_ImportFile_Name, $gClaims_ImportFile_Name, $gMedWatch_ImportFile_Name, $gSTD_Plan_ImportFile_Name, $gSTD_Class_ImportFile_Name, $gAdjusters_ImportFile_Name, $gPayments_ImportFile_Name, $gEnhNotes_ImportFile_Name ]) 
SET("output_cols_info" = '<?xml version="1.0" encoding="UTF-8"?><output_cols_info><col index="1" expression="no"/>
<col index="2" expression="no"/>
<col index="3" expression="no"/>
<col index="4" expression="no"/>
<col index="5" expression="no"/>
<col index="6" expression="no"/>
<col index="7" expression="no"/>
<col index="8" expression="no"/>
<col index="9" expression="no"/>
<col index="10" expression="no"/>
<col index="11" expression="no"/>
<col index="12" expression="no"/>
<col index="13" expression="no"/>
<col index="14" expression="no"/>
<col index="15" expression="no"/>
<col index="16" expression="no"/>
<col index="17" expression="no"/>
<col index="18" expression="no"/>
</output_cols_info>', "run_as_separate_process" = 'no')
;$Temp = lookup_ext([DS_RMDB.DBO.DATA_INTEGRATOR, 'PRE_LOAD_CACHE', 'MAX'], [ USER_ID ], [  NULL  ], [ OPTIONSET_ID, '=', $gOptionSet_Id ], [  ], [ $gUserId ]) 
SET("output_cols_info" = '<?xml version="1.0" encoding="UTF-8"?><output_cols_info><col index="1" expression="no"/>
</output_cols_info>', "run_as_separate_process" = 'no')
;IF (($gS3FileLocationFlag = 1) )
BEGIN
$gFileName = (($gFileName || '_') || cast($gJobId, 'VARCHAR(100)'));$gErrorLogMetadata = (('ErrorLog_Metadata.txt' || '_') || cast($gJobId, 'VARCHAR(100)'));$gErrorLogFileNameEvent = (((('ErrorLogEvent' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt') || '_') || cast($gJobId, 'VARCHAR(100)'));$gErrorLogFileNameClaim = (((('ErrorLogClaim' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt') || '_') || cast($gJobId, 'VARCHAR(100)'));$gErrorLogFileNamePayment = (((('ErrorLogPayment' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt') || '_') || cast($gJobId, 'VARCHAR(100)'));$gErrorLogFileNameEnhNotes = (((('ErrorLogEnhNotes' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt') || '_') || cast($gJobId, 'VARCHAR(100)'));$gErrorLogFileNameSTDClass = (((('ErrorLogSTDClass' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt') || '_') || cast($gJobId, 'VARCHAR(100)'));$gErrorLogFileNameMedWatch = (((('ErrorLogMedWatch' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt') || '_') || cast($gJobId, 'VARCHAR(100)'));$gErrorLogFileNameAdjuster = (((('ErrorLogAdjuster' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt') || '_') || cast($gJobId, 'VARCHAR(100)'));$gErrorLogFileNameSTDPlan = (((('ErrorLogSTDPlan' || substr(to_char($gPass_Count, '0000'), 2, 4)) || '.txt') || '_') || cast($gJobId, 'VARCHAR(100)'));$gEvents_ImportFile_Name = (($gEvents_ImportFile_Name || '.') || cast($gOptionSet_Id, 'VARCHAR(4000)'));$gAdjusters_ImportFile_Name = (($gAdjusters_ImportFile_Name || '.') || cast($gOptionSet_Id, 'VARCHAR(4000)'));$gClaims_ImportFile_Name = (($gClaims_ImportFile_Name || '.') || cast($gOptionSet_Id, 'VARCHAR(4000)'));$gPayments_ImportFile_Name = (($gPayments_ImportFile_Name || '.') || cast($gOptionSet_Id, 'VARCHAR(4000)'));$gSTD_Class_ImportFile_Name = (($gSTD_Class_ImportFile_Name || '.') || cast($gOptionSet_Id, 'VARCHAR(4000)'));$gSTD_Plan_ImportFile_Name = (($gSTD_Plan_ImportFile_Name || '.') || cast($gOptionSet_Id, 'VARCHAR(4000)'));$gMedWatch_ImportFile_Name = (($gMedWatch_ImportFile_Name || '.') || cast($gOptionSet_Id, 'VARCHAR(4000)'));$gEnhNotes_ImportFile_Name = (($gEnhNotes_ImportFile_Name || '.') || cast($gOptionSet_Id, 'VARCHAR(4000)'));END
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1028', "y" = '-610')
CALL PLAN WF_DDS_WRITE_ERROR_LOG_HEADER::'f091dd42-a121-46f8-a762-02e68d85f2de'();
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:58 2017', "ActaValue_3" = 'Mon Sep 25 17:55:11 2017', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_TRY_CATCH_ERROR::'bc3e747d-2c5b-44e7-80df-5403c8a5d0c0'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>441</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '719', "y" = '-519')
CALL DATAFLOW DF_DDS_TRY_CATCH_ERROR::'66a7fac9-b40e-478b-8f54-c5aeb2c4b3bb'();
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Wed May 04 18:58:48 2016', "ActaValue_3" = 'Mon May 09 17:16:33 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_VALIDATE_IMPORT_Adjusters::'f503792b-f434-4890-a12c-137bceac0f8d'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>628</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_VALIDATE_IMPORT_Adjusters', "ui_script_text" = '# STATS BEFORE THE ENHANCEDNOTES VALIDATION
f_statistics(\'DDS_ADJUSTER\',0);

#1 For Microsoft_SQL_Server
if (upper( db_type( \'DS_RMX_STAGING\')) = \'MICROSOFT_SQL_SERVER\')
begin
sql(\'DS_RMX_STAGING\',\'PROCESS_ADJUSTER {$gJobId},{$gDBName}\');
end

#PENDING : User Verification Flag, DBName, 


#2 For Oracle
if (upper( db_type( \'DS_RMX_STAGING\')) = \'ORACLE\')
begin
sql(\'DS_RMX_STAGING\',\'Begin PROCESS_ADJUSTER({$gJobId},{$gDBNAME}); END;\'); 
end 

# COLLECT STATS AFTER ENHANCEDNOTES VALIDATION
f_statistics(\'DDS_ADJUSTER\',1);', "x" = '1569', "y" = '-488')
BEGIN_SCRIPT
f_statistics('DDS_ADJUSTER', 0);IF ((upper(db_type('DS_RMX_STAGING')) = 'MICROSOFT_SQL_SERVER') )
BEGIN
sql('DS_RMX_STAGING', 'PROCESS_ADJUSTER {$gJobId},{$gDBName}');END
IF ((upper(db_type('DS_RMX_STAGING')) = 'ORACLE') )
BEGIN
sql('DS_RMX_STAGING', 'Begin PROCESS_ADJUSTER({$gJobId},{$gDBNAME}); END;');END
f_statistics('DDS_ADJUSTER', 1);END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Apr 25 17:21:11 2016', "ActaValue_3" = 'Mon May 09 17:16:33 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_VALIDATE_IMPORT_CLAIMS::'041d242d-e2e8-41a0-bf5b-82e09d314521'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_VALIDATE_IMPORT_CLAIMS', "ui_script_text" = '# STATS BEFORE THE CLAIMS VALIDATION
f_statistics(\'DDS_CLAIM\',0);

#1 For Microsoft_SQL_Server
if (upper( db_type( \'DS_RMX_STAGING\')) = \'MICROSOFT_SQL_SERVER\')
begin
sql(\'DS_RMX_STAGING\',\'DDS_VALIDATE_CLAIM {$gJobId},{$gDBName},{$gUserId}\');
end


#2 For Oracle
if (upper( db_type( \'DS_RMX_STAGING\')) = \'ORACLE\')
begin
sql(\'DS_RMX_STAGING\',\'Begin DDS_VALIDATE_CLAIM({$gJobId},{$gDBName},{$gUserId}); END;\'); 
end 

# COLLECT STATS AFTER CLAIM VALIDATION
f_statistics(\'DDS_CLAIM\',1);', "x" = '878', "y" = '-528')
BEGIN_SCRIPT
f_statistics('DDS_CLAIM', 0);IF ((upper(db_type('DS_RMX_STAGING')) = 'MICROSOFT_SQL_SERVER') )
BEGIN
sql('DS_RMX_STAGING', 'DDS_VALIDATE_CLAIM {$gJobId},{$gDBName},{$gUserId}');END
IF ((upper(db_type('DS_RMX_STAGING')) = 'ORACLE') )
BEGIN
sql('DS_RMX_STAGING', 'Begin DDS_VALIDATE_CLAIM({$gJobId},{$gDBName},{$gUserId}); END;');END
f_statistics('DDS_CLAIM', 1);END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Wed Apr 27 19:40:30 2016', "ActaValue_3" = 'Mon May 09 17:16:33 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_VALIDATE_IMPORT_CLASS::'23aee25b-06a6-47cf-a5ae-2d26eab3e964'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_VALIDATE_IMPORT_CLASS', "ui_script_text" = '# STATS BEFORE THE CLAIMS VALIDATION
f_statistics(\'DDS_STD_CLASS\',0);

#1 For Microsoft_SQL_Server
if (upper( db_type( \'DS_RMX_STAGING\')) = \'MICROSOFT_SQL_SERVER\')
begin
sql(\'DS_RMX_STAGING\',\'DDS_IMPORT_STD_CLASS {$gJobId},{$gDBName},{$gUserId}\');
end


#2 For Oracle
if (upper( db_type( \'DS_RMX_STAGING\')) = \'ORACLE\')
begin
sql(\'DS_RMX_STAGING\',\'Begin DDS_IMPORT_STD_CLASS({$gJobId},{$gDBName},{$gUserId}); END;\'); 
end 

# COLLECT STATS AFTER CLAIM VALIDATION
f_statistics(\'DDS_STD_CLASS\',1);', "x" = '1372', "y" = '-988')
BEGIN_SCRIPT
f_statistics('DDS_STD_CLASS', 0);IF ((upper(db_type('DS_RMX_STAGING')) = 'MICROSOFT_SQL_SERVER') )
BEGIN
sql('DS_RMX_STAGING', 'DDS_IMPORT_STD_CLASS {$gJobId},{$gDBName},{$gUserId}');END
IF ((upper(db_type('DS_RMX_STAGING')) = 'ORACLE') )
BEGIN
sql('DS_RMX_STAGING', 'Begin DDS_IMPORT_STD_CLASS({$gJobId},{$gDBName},{$gUserId}); END;');END
f_statistics('DDS_STD_CLASS', 1);END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Jan 09 12:54:01 2017', "ActaValue_3" = 'Tue Oct 03 14:59:36 2017', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_VALIDATE_IMPORT_DATA::'6b6aa3be-6a1d-49d4-8f70-a93075f53908'( )
BEGIN
 AlGUIComment ("If_condition" = '$gEvents_Available = 1 AND $gStage = 2', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_VALIDATE_IMPORT_EVENTS', "x" = '99', "y" = '-102')
IF ((($gEvents_Available = 1) AND
   ($gStage = 2)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1103', "y" = '-525')
CALL PLAN WF_DDS_VALIDATE_IMPORT_EVENTS::'b3057823-f672-4c83-a293-b2231ebb9852'();
END
 AlGUIComment ("If_condition" = '$gShortTermDisability_Available = 1 AND $gSTD_Plan_ImportFile_Name IS NOT NULL AND $gStage = 2', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_VALIDATE_IMPORT_PLAN', "x" = '562', "y" = '-233')
IF (((($gShortTermDisability_Available = 1) AND
   ($gSTD_Plan_ImportFile_Name IS NOT  NULL )) AND
   ($gStage = 2)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>603</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1178', "y" = '-509')
CALL PLAN WF_DDS_VALIDATE_IMPORT_PLAN::'342f2ea5-eb04-4b07-a402-0d9ea52baa2b'();
END
 AlGUIComment ("If_condition" = '$gShortTermDisability_Available = 1 AND $gSTD_Class_ImportFile_Name IS NOT NULL AND $gStage = 2', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_VALIDATE_IMPORT_CLASS', "x" = '923', "y" = '-425')
IF (((($gShortTermDisability_Available = 1) AND
   ($gSTD_Class_ImportFile_Name IS NOT  NULL )) AND
   ($gStage = 2)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1781', "y" = '-797')
CALL PLAN WF_DDS_VALIDATE_IMPORT_CLASS::'23aee25b-06a6-47cf-a5ae-2d26eab3e964'();
END
 AlGUIComment ("If_condition" = '$gClaims_Available = 1 AND $gStage = 2', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_VALIDATE_IMPORT_CLAIMS', "x" = '1266', "y" = '-569')
IF ((($gClaims_Available = 1) AND
   ($gStage = 2)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1141', "y" = '-500')
CALL PLAN WF_DDS_VALIDATE_IMPORT_CLAIMS::'041d242d-e2e8-41a0-bf5b-82e09d314521'();
END
 AlGUIComment ("If_condition" = '$gPayments_Available = 1 AND $gStage = 2', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_VALIDATE_IMPORT_PAYMENTS', "x" = '1590', "y" = '-739')
IF ((($gPayments_Available = 1) AND
   ($gStage = 2)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '981', "y" = '-469')
CALL PLAN WF_DDS_VALIDATE_IMPORT_PAYMENTS::'c8726e8a-a12c-4b85-993c-b635190cfc6a'();
END
 AlGUIComment ("If_condition" = '$gEnhancedNotes_Available = 1 AND $gStage = 2', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_VALIDATE_IMPORT_ENHNOTES', "x" = '1884', "y" = '-893')
IF ((($gEnhancedNotes_Available = 1) AND
   ($gStage = 2)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1166', "y" = '-303')
CALL PLAN WF_DDS_VALIDATE_IMPORT_ENHNOTES::'5381e339-518d-4169-8c02-38c048491419'();
END
 AlGUIComment ("If_condition" = '$gMedWatch_Available = 1 AND $gStage = 2', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_VALIDATE_IMPORT_MedWatch', "x" = '2182', "y" = '-1089')
IF ((($gMedWatch_Available = 1) AND
   ($gStage = 2)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '919', "y" = '-366')
CALL PLAN WF_DDS_VALIDATE_IMPORT_MedWatch::'c6f8f885-b4cf-4652-b81e-98d13d169014'();
END
 AlGUIComment ("If_condition" = '$gAdjusters_Available = 1 AND $gStage = 2', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_VALIDATE_IMPORT_ADJUSTER', "x" = '2534', "y" = '-1200')
IF ((($gAdjusters_Available = 1) AND
   ($gStage = 2)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1516', "y" = '-300')
CALL PLAN WF_DDS_VALIDATE_IMPORT_Adjusters::'f503792b-f434-4890-a12c-137bceac0f8d'();
END
 AlGUIComment ("If_condition" = '$gverification_flag = 1 AND $gStopVerify = 0', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_VERIFY_DIARY', "x" = '2904', "y" = '-1341')
IF ((($gverification_flag = 1) AND
   ($gStopVerify = 0)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>422</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '991', "y" = '-337')
CALL PLAN WF_DDS_WRITE_VERIFY_DIARY::'8cd5b19e-61dd-42ae-bece-3d767626d23e'();
END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue Apr 26 12:32:11 2016', "ActaValue_3" = 'Mon May 09 17:16:33 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_VALIDATE_IMPORT_ENHNOTES::'5381e339-518d-4169-8c02-38c048491419'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_VALIDATE_IMPORT_ENHNOTES', "ui_script_text" = '# STATS BEFORE THE ENHANCEDNOTES VALIDATION
f_statistics(\'DDS_ENHANCEDNOTES\',0);

#1 For Microsoft_SQL_Server
if (upper( db_type( \'DS_RMX_STAGING\')) = \'MICROSOFT_SQL_SERVER\')
begin
sql(\'DS_RMX_STAGING\',\'DDS_PROCESS_ENHANCEDNOTES {$gJobId},{$gDBName}\');
end

#PENDING : User Verification Flag, DBName, 


#2 For Oracle
if (upper( db_type( \'DS_RMX_STAGING\')) = \'ORACLE\')
begin
sql(\'DS_RMX_STAGING\',\'Begin DDS_PROCESS_ENHANCEDNOTES({$gJobId},{$gDBNAME}); END;\'); 
end 

# COLLECT STATS AFTER ENHANCEDNOTES VALIDATION
f_statistics(\'DDS_ENHANCEDNOTES\',1);', "x" = '987', "y" = '-559')
BEGIN_SCRIPT
f_statistics('DDS_ENHANCEDNOTES', 0);IF ((upper(db_type('DS_RMX_STAGING')) = 'MICROSOFT_SQL_SERVER') )
BEGIN
sql('DS_RMX_STAGING', 'DDS_PROCESS_ENHANCEDNOTES {$gJobId},{$gDBName}');END
IF ((upper(db_type('DS_RMX_STAGING')) = 'ORACLE') )
BEGIN
sql('DS_RMX_STAGING', 'Begin DDS_PROCESS_ENHANCEDNOTES({$gJobId},{$gDBNAME}); END;');END
f_statistics('DDS_ENHANCEDNOTES', 1);END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Tue May 31 11:24:53 2016', "ActaValue_3" = 'Mon May 09 17:16:33 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_VALIDATE_IMPORT_EVENTS::'b3057823-f672-4c83-a293-b2231ebb9852'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_VALIDATE_IMPORT_EVENT', "ui_script_text" = '# STATS BEFORE THE CLAIMS VALIDATION

f_statistics(\'DDS_EVENT\',0);
#print  (\'BEFORE proc name1\');
#1 For Microsoft_SQL_Server
if (upper( db_type( \'DS_RMX_STAGING\')) = \'MICROSOFT_SQL_SERVER\')
begin
sql(\'DS_RMX_STAGING\',\'DA_DDS_EVENT_IMPORT {$gJobId},{$gDBName},{$gUserId}\');
end

print  (\'after proc name\');
#PENDING : User Verification Flag, DBName, 


#2 For Oracle
if (upper( db_type( \'DS_RMX_STAGING\')) = \'ORACLE\')
begin
sql(\'DS_RMX_STAGING\',\'Begin DA_DDS_EVENT_IMPORT({$gJobId},{$gDBName},{$gUserId}); END;\'); 
end 

# COLLECT STATS AFTER CLAIM VALIDATION
f_statistics(\'DDS_EVENT\',1);

', "x" = '1478', "y" = '-678')
BEGIN_SCRIPT
f_statistics('DDS_EVENT', 0);IF ((upper(db_type('DS_RMX_STAGING')) = 'MICROSOFT_SQL_SERVER') )
BEGIN
sql('DS_RMX_STAGING', 'DA_DDS_EVENT_IMPORT {$gJobId},{$gDBName},{$gUserId}');END
print('after proc name');IF ((upper(db_type('DS_RMX_STAGING')) = 'ORACLE') )
BEGIN
sql('DS_RMX_STAGING', 'Begin DA_DDS_EVENT_IMPORT({$gJobId},{$gDBName},{$gUserId}); END;');END
f_statistics('DDS_EVENT', 1);END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon May 02 16:10:06 2016', "ActaValue_3" = 'Mon Sep 18 12:32:45 2017', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_VALIDATE_IMPORT_MedWatch::'c6f8f885-b4cf-4652-b81e-98d13d169014'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_VALIDATE_IMPORT_MedWatch', "ui_script_text" = '# STATS BEFORE THE CLAIMS VALIDATION
print  (\'BEFORE proc name\');

f_statistics(\'DDS_MEDWATCH\',0);
print  (\'BEFORE proc name1\');
#1 For Microsoft_SQL_Server
if (upper( db_type( \'DS_RMX_STAGING\')) = \'MICROSOFT_SQL_SERVER\')
begin
sql(\'DS_RMX_STAGING\',\'DA_DDS_MEDWATCH_IMPORT {$gJobId},{$gDBName},{$gUserId}\');
end

print  (\'after proc name\');
#PENDING : User Verification Flag, DBName, 


#2 For Oracle
if (upper( db_type( \'DS_RMX_STAGING\')) = \'ORACLE\')
begin
sql(\'DS_RMX_STAGING\',\'Begin DA_DDS_MEDWATCH_IMPORT({$gJobId},{$gDBName},{$gUserId}); END;\'); 
end 

# COLLECT STATS AFTER CLAIM VALIDATION
f_statistics(\'DDS_MEDWATCH\',1);


print(  \'last line of script\');', "x" = '1019', "y" = '-678')
BEGIN_SCRIPT
print('BEFORE proc name');f_statistics('DDS_MEDWATCH', 0);print('BEFORE proc name1');IF ((upper(db_type('DS_RMX_STAGING')) = 'MICROSOFT_SQL_SERVER') )
BEGIN
sql('DS_RMX_STAGING', 'DA_DDS_MEDWATCH_IMPORT {$gJobId},{$gDBName},{$gUserId}');END
print('after proc name');IF ((upper(db_type('DS_RMX_STAGING')) = 'ORACLE') )
BEGIN
sql('DS_RMX_STAGING', 'Begin DA_DDS_MEDWATCH_IMPORT({$gJobId},{$gDBName},{$gUserId}); END;');END
f_statistics('DDS_MEDWATCH', 1);print('last line of script');END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Apr 25 17:21:11 2016', "ActaValue_3" = 'Mon May 09 17:16:33 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_VALIDATE_IMPORT_PAYMENTS::'c8726e8a-a12c-4b85-993c-b635190cfc6a'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_VALIDATE_IMPORT_PAYMENT', "ui_script_text" = '# STATS BEFORE THE PAYMENT VALIDATION
f_statistics(\'DDS_PAYMENT\',0);

#1 For Microsoft_SQL_Server
if (upper( db_type( \'DS_RMX_STAGING\')) = \'MICROSOFT_SQL_SERVER\')
begin
sql(\'DS_RMX_STAGING\',\'DDS_PROCESS_PAYMENTS {$gJobId},{$gDBName},{$gUserId}\');
end

#PENDING : User Verification Flag, DBName, 


#2 For Oracle
if (upper( db_type( \'DS_RMX_STAGING\')) = \'ORACLE\')
begin
sql(\'DS_RMX_STAGING\',\'Begin DDS_PROCESS_PAYMENTS({$gJobId},{$gDBNAME},{$gUserId}); END;\'); 
end 

# COLLECT STATS AFTER PAYMENT VALIDATION
f_statistics(\'DDS_PAYMENT\',1);', "x" = '956', "y" = '-588')
BEGIN_SCRIPT
f_statistics('DDS_PAYMENT', 0);IF ((upper(db_type('DS_RMX_STAGING')) = 'MICROSOFT_SQL_SERVER') )
BEGIN
sql('DS_RMX_STAGING', 'DDS_PROCESS_PAYMENTS {$gJobId},{$gDBName},{$gUserId}');END
IF ((upper(db_type('DS_RMX_STAGING')) = 'ORACLE') )
BEGIN
sql('DS_RMX_STAGING', 'Begin DDS_PROCESS_PAYMENTS({$gJobId},{$gDBNAME},{$gUserId}); END;');END
f_statistics('DDS_PAYMENT', 1);END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Wed Apr 27 19:40:30 2016', "ActaValue_3" = 'Mon May 09 18:41:47 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_VALIDATE_IMPORT_PLAN::'342f2ea5-eb04-4b07-a402-0d9ea52baa2b'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>575</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_VALIDATE_IMPORT_PLAN', "ui_script_text" = '# STATS BEFORE STD_PLAN VALIDATION
f_statistics(\'DDS_STD_PLAN\',0);

#1 For Microsoft_SQL_Server
if (upper( db_type( \'DS_RMX_STAGING\')) = \'MICROSOFT_SQL_SERVER\')
begin
sql(\'DS_RMX_STAGING\',\'DDS_IMPORT_STD_PLAN {$gJobId},{$gDBName},{$gUserId}\');
end


#2 For Oracle
if (upper( db_type( \'DS_RMX_STAGING\')) = \'ORACLE\')
begin
sql(\'DS_RMX_STAGING\',\'Begin DDS_IMPORT_STD_PLAN({$gJobId},{$gDBName},{$gUserId}); END;\'); 
end 

# COLLECT STATS AFTER STD_PLAN VALIDATION
f_statistics(\'DDS_STD_PLAN\',1);', "x" = '863', "y" = '-906')
BEGIN_SCRIPT
f_statistics('DDS_STD_PLAN', 0);IF ((upper(db_type('DS_RMX_STAGING')) = 'MICROSOFT_SQL_SERVER') )
BEGIN
sql('DS_RMX_STAGING', 'DDS_IMPORT_STD_PLAN {$gJobId},{$gDBName},{$gUserId}');END
IF ((upper(db_type('DS_RMX_STAGING')) = 'ORACLE') )
BEGIN
sql('DS_RMX_STAGING', 'Begin DDS_IMPORT_STD_PLAN({$gJobId},{$gDBName},{$gUserId}); END;');END
f_statistics('DDS_STD_PLAN', 1);END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:58 2017', "ActaValue_3" = 'Tue Oct 03 14:59:36 2017', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_WRITE_ERROR_LOG::'0b3f7874-d3b0-40a4-8c5b-07a28de41d76'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>444</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_ERROR_LOG_RUN_STAT', "ui_script_text" = 'sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Error Log file generation has been started.\\\',\\\'ERROR_LOG\\\',\\\'DDS_ERROR_LOG\\\',-11)\');




', "x" = '85', "y" = '-65')
BEGIN_SCRIPT
sql('DS_RMX_STAGING', (('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Error Log file generation has been started.\',\'ERROR_LOG\',\'DDS_ERROR_LOG\',-11)'));END
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>347</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLOCATION', "x" = '343', "y" = '-215')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '594', "y" = '-372')
CALL DATAFLOW DF_DDS_WRITE_ERROR_LOG_META_S3::'f6f68251-5690-4220-98c8-717e22525adc'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '382', "y" = '-247')
CALL DATAFLOW DF_DDS_WRITE_ERROR_LOG_META::'626de22f-5573-480e-8e7b-69703a5622e6'();
END
 AlGUIComment ("If_condition" = '$gEvents_Available = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_WRITE_ERROR_LOG_EVENTS', "x" = '780', "y" = '-322')
IF (($gEvents_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '944', "y" = '-197')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '606', "y" = '-488')
CALL DATAFLOW DF_DDS_EVENT_WRITE_ERROR_LOG_S3::'e424654b-4ebe-4f79-9ac7-c71d5a6c0a15'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '403', "y" = '-235')
CALL DATAFLOW DF_DDS_EVENT_WRITE_ERROR_LOG::'1fd229df-ff7e-47bd-a0ab-de96eaea2b98'();
END
END
 AlGUIComment ("If_condition" = '$gShortTermDisability_Available = 1 AND $gSTD_Plan_ImportFile_Name IS NOT NULL', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_WRITE_ERROR_LOG_PLAN', "x" = '324', "y" = '-596')
IF ((($gShortTermDisability_Available = 1) AND
   ($gSTD_Plan_ImportFile_Name IS NOT  NULL )) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '559', "y" = '-363')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '610', "y" = '-343')
CALL DATAFLOW DF_DDS_PLAN_WRITE_ERROR_LOG_S3::'25bd7c53-acab-4d74-a63e-caa7b2d41bb8'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '591', "y" = '-390')
CALL DATAFLOW DF_DDS_PLAN_WRITE_ERROR_LOG::'feaf0dc8-ab4b-494d-8cd4-654411cd72ab'();
END
END
 AlGUIComment ("If_condition" = '$gShortTermDisability_Available = 1 AND $gSTD_Class_ImportFile_Name IS NOT NULL', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_WRITE_ERROR_LOG_CLASS', "x" = '505', "y" = '-956')
IF ((($gShortTermDisability_Available = 1) AND
   ($gSTD_Class_ImportFile_Name IS NOT  NULL )) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '997', "y" = '-306')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1325', "y" = '-134')
CALL DATAFLOW DF_DDS_CLASS_WRITE_ERROR_LOG_S3::'d755d13a-4c75-4e4a-b4f4-7515344cb759'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '525', "y" = '-191')
CALL DATAFLOW DF_DDS_CLASS_WRITE_ERROR_LOG::'99d01465-01be-4644-a107-34e7fede94bd'();
END
END
 AlGUIComment ("If_condition" = '$gClaims_Available = 1 AND $gStage = 2', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_WRITE_ERROR_LOG_CLAIMS', "x" = '566', "y" = '-1510')
IF ((($gClaims_Available = 1) AND
   ($gStage = 2)) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '1084', "y" = '-200')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1344', "y" = '-209')
CALL DATAFLOW DF_DDS_CLAIM_WRITE_ERROR_LOG_S3::'cda7a21c-c0df-4738-8f1d-bd5d2125b68e'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '591', "y" = '-234')
CALL DATAFLOW DF_DDS_CLAIM_WRITE_ERROR_LOG::'6d4bf0d9-f4ae-418f-98ea-7be7ed255b09'();
END
END
 AlGUIComment ("If_condition" = '$gPayments_Available = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_WRITE_ERROR_LOG_PAYMENTS', "x" = '1029', "y" = '-2016')
IF (($gPayments_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '553', "y" = '-300')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '809', "y" = '-450')
CALL DATAFLOW DF_DDS_PAY_WRITE_ERROR_LOG_S3::'268b01b8-a3a1-41ac-9bce-637b5d54eb93'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '703', "y" = '-284')
CALL DATAFLOW DF_DDS_PAY_WRITE_ERROR_LOG::'4730e9d3-7d58-4f8b-b2a5-3ce5aa37b978'();
END
END
 AlGUIComment ("If_condition" = '$gAdjusters_Available = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_WRITE_ERROR_LOG_ADJUSTERS', "x" = '1495', "y" = '-2053')
IF (($gAdjusters_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '1100', "y" = '-316')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>422</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '606', "y" = '-469')
CALL DATAFLOW DF_DDS_ADJUSTER_WRITE_ERROR_LOG_S3::'4496cb78-7157-4e9e-9e16-66be1762775e'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>422</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '275', "y" = '-159')
CALL DATAFLOW DF_DDS_ADJUSTER_WRITE_ERROR_LOG::'e4f5dc38-e351-4bbe-aa22-a43a993ec5d7'();
END
END
 AlGUIComment ("If_condition" = '$gEnhancedNotes_Available = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_WRITE_ERROR_LOG_ENHANCED_NOTES', "x" = '2013', "y" = '-1679')
IF (($gEnhancedNotes_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '891', "y" = '-381')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '713', "y" = '-381')
CALL DATAFLOW DF_DDS_ENHNOTES_WRITE_ERROR_LOG_S3::'398253d9-9ad1-4b51-b744-4f8eb5120eff'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '319', "y" = '-253')
CALL DATAFLOW DF_DDS_ENHNOTES_WRITE_ERROR_LOG::'ab4b2e8d-f8f0-4327-96f0-fe5958e7862a'();
END
END
 AlGUIComment ("If_condition" = '$gMedWatch_Available = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_WRITE_ERROR_LOG_MEDWATCH', "x" = '2063', "y" = '-1063')
IF (($gMedWatch_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '778', "y" = '-438')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>441</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '803', "y" = '-391')
CALL DATAFLOW DF_DDS_MEDWATCH_WRITE_ERROR_LOG_s3::'b04ab968-fc10-46c9-804f-2951f2a1915d'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>441</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '200', "y" = '-146')
CALL DATAFLOW DF_DDS_MEDWATCH_WRITE_ERROR_LOG::'13450da1-aa10-4a53-a23b-a5633e8dfecd'();
END
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>325</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'UPDATE_STATUS', "ui_script_text" = 'sql(\'DS_RMX_STAGING\', \'UPDATE DA_STATISTICS SET STAGE = \' || $gStage || \' WHERE JOBID = \' || $gJobId);

sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Error Log file generation has been completed.\\\',\\\'ERROR_LOG\\\',\\\'DDS_ERROR_LOG\\\',-11)\');


', "x" = '2130', "y" = '-500')
BEGIN_SCRIPT
sql('DS_RMX_STAGING', ((('UPDATE DA_STATISTICS SET STAGE = ' || $gStage) || ' WHERE JOBID = ') || $gJobId));sql('DS_RMX_STAGING', (('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Error Log file generation has been completed.\',\'ERROR_LOG\',\'DDS_ERROR_LOG\',-11)'));END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Sep 25 16:25:59 2017', "ActaValue_3" = 'Mon Sep 25 17:55:11 2017', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_WRITE_ERROR_LOG_HEADER::'f091dd42-a121-46f8-a762-02e68d85f2de'( )
BEGIN
 AlGUIComment ("If_condition" = '$gEvents_Available = 1 ', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_WRITE_ERROR_LOG_HEADER_EVENTS', "x" = '87', "y" = '-56')
IF (($gEvents_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>263</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3Location', "x" = '706', "y" = '-331')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '828', "y" = '-544')
CALL DATAFLOW DF_DDS_EVENT_WRITE_ERROR_LOG_HEADER_S3::'9856aecd-1367-414b-b1c1-f57d3435d498'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>419</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '222', "y" = '-165')
CALL DATAFLOW DF_DDS_EVENT_WRITE_ERROR_LOG_HEADER::'0cacbc90-2651-43d2-aa90-3c4a79b9c58f'();
END
END
 AlGUIComment ("If_condition" = '$gShortTermDisability_Available = 1 AND $gSTD_Plan_ImportFile_Name IS NOT NULL', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_WRITE_ERROR_LOG_HEADER_PLAN', "x" = '400', "y" = '-175')
IF ((($gShortTermDisability_Available = 1) AND
   ($gSTD_Plan_ImportFile_Name IS NOT  NULL )) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>263</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3Location', "x" = '769', "y" = '-741')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '350', "y" = '-500')
CALL DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_PLAN_S3::'e78fe33b-5767-4639-8730-0a8948ebccd1'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '678', "y" = '-344')
CALL DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_PLAN::'1a7e34ed-dfd5-4753-a6a2-716fed88884c'();
END
END
 AlGUIComment ("If_condition" = '$gShortTermDisability_Available = 1 AND $gSTD_Class_ImportFile_Name IS NOT NULL', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_WRITE_ERROR_LOG_HEADER_CLASS', "x" = '737', "y" = '-321')
IF ((($gShortTermDisability_Available = 1) AND
   ($gSTD_Class_ImportFile_Name IS NOT  NULL )) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>263</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3Location', "x" = '1013', "y" = '-325')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1088', "y" = '-366')
CALL DATAFLOW DF_WRITE_ERROR_LOG_HEADER_CLASS_S3::'5935230b-9c0b-4eac-a1c1-8cff545b96bf'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '329', "y" = '-181')
CALL DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_CLASS::'a9d7880a-b603-45a4-8a96-96a56714e37d'();
END
END
 AlGUIComment ("If_condition" = '$gClaims_Available = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_WRITE_ERROR_LOG_HEADER_CLAIMS', "x" = '1015', "y" = '-487')
IF (($gClaims_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '319', "y" = '-259')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '491', "y" = '-397')
CALL DATAFLOW DF_DDS_CLAIM_WRITE_ERROR_LOG_HEADER_S3::'28126bfa-8914-4275-b71d-4f9af49e88c7'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '181', "y" = '-100')
CALL DATAFLOW DF_DDS_CLAIM_WRITE_ERROR_LOG_HEADER::'048d37ab-c00a-4287-b395-a1fcac9f8d4a'();
END
END
 AlGUIComment ("If_condition" = '$gPayments_Available = 1 ', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_WRITE_ERROR_LOG_HEADER_PAYMENTS', "x" = '1285', "y" = '-639')
IF (($gPayments_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '875', "y" = '-209')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1138', "y" = '-391')
CALL DATAFLOW DF_DDS_PAY_WRITE_ERROR_LOG_HEADER_S3::'dc9009bb-50c2-47d8-b1d9-0b5227768beb'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>432</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '309', "y" = '-172')
CALL DATAFLOW DF_DDS_PAY_WRITE_ERROR_LOG_HEADER::'961fca75-0b69-47d5-b33a-82afc17a7f23'();
END
END
 AlGUIComment ("If_condition" = '$gAdjusters_Available = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_WRITE_ERROR_LOG_HEADER_ADJUSTERS', "x" = '1586', "y" = '-806')
IF (($gAdjusters_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '700', "y" = '-297')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '638', "y" = '-288')
CALL DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_ADJUSTERS_S3::'12a3068a-44a9-4459-bf60-fbb13c16149d'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '535', "y" = '-297')
CALL DATAFLOW DF_DDS_WRITE_ERROR_LOG_HEADER_ADJUSTERS::'8c7eccf5-fa60-42de-880e-4495e291f1ec'();
END
END
 AlGUIComment ("If_condition" = '$gEnhancedNotes_Available = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_WRITE_ERROR_LOG_HEADER_ENHANCED_NOTES', "x" = '1910', "y" = '-1012')
IF (($gEnhancedNotes_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '763', "y" = '-206')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1322', "y" = '-369')
CALL DATAFLOW DF_DDS_ENHNOTES_WRITE_ERROR_LOG_HEADER_S3::'a5d29d5c-5bab-4a18-b783-ebd3a61e1f17'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>425</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '565', "y" = '-228')
CALL DATAFLOW DF_DDS_ENHNOTES_WRITE_ERROR_LOG_HEADER::'1d614f87-d88c-412e-9595-9cb21e9d2385'();
END
END
 AlGUIComment ("If_condition" = '$gMedWatch_Available = 1 ', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>435</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_WRITE_ERROR_LOG_HEADER_MEDWATCH', "x" = '2131', "y" = '-1281')
IF (($gMedWatch_Available = 1) )
BEGIN
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '288', "y" = '-341')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1175', "y" = '-341')
CALL DATAFLOW DF_DDS_MedWatch_WRITE_ERROR_LOG_HEADER_S3::'2695a0d3-8583-4872-b201-c9fa02ab57b3'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>416</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '531', "y" = '-294')
CALL DATAFLOW DF_DDS_MedWatch_WRITE_ERROR_LOG_HEADER::'37aa5b50-b9fb-4b3b-9188-646df3cc43a3'();
END
END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Sep 29 13:59:21 2017', "ActaValue_3" = 'Fri Sep 29 15:51:35 2017', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_WRITE_FINAL_DIARY::'7fb28fd2-5173-43ad-ac32-163d54916784'( )
DECLARE
     $lMaxUnique_ID VARCHAR(10) ;
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_DIARY_STAT_REPORT', "ui_script_text" = 'f_ConsolidateStats();', "x" = '385', "y" = '-293')
BEGIN_SCRIPT
f_ConsolidateStats();END
 AlGUIComment ("If_condition" = '$gStage=3 or $gStopVerify=1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>388</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_FINAL_DIARY', "x" = '966', "y" = '-403')
IF ((($gStage = 3) OR
   ($gStopVerify = 1)) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '825', "y" = '-316')
CALL DATAFLOW DF_DDS_WRITE_FINAL_DIARY::'a8889ffd-e329-4335-9b1b-9b11177ab146'();
END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Mon Jan 09 12:54:01 2017', "ActaValue_3" = 'Mon Sep 18 12:32:45 2017', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_WRITE_PROCESS_LOG::'615af7aa-482c-4692-8ccc-90c7f8550b06'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>444</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_PROCESS_LOG_RUN_STAT', "ui_script_text" = 'sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Process Log file generation has been started.\\\',\\\'PROCESS_LOG\\\',\\\'DDS_PROCESS_LOG_T\\\',-11)\');
', "x" = '322', "y" = '-249')
BEGIN_SCRIPT
sql('DS_RMX_STAGING', (('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Process Log file generation has been started.\',\'PROCESS_LOG\',\'DDS_PROCESS_LOG_T\',-11)'));END
 AlGUIComment ("If_condition" = '$gS3FileLocationFlag = 1', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>313</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_S3FileLocation', "x" = '647', "y" = '-881')
IF (($gS3FileLocationFlag = 1) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '688', "y" = '-272')
CALL DATAFLOW DF_DDS_PROCESS_LOG_S3::'8beef8aa-4e8d-4fdf-8095-bf3f78930a7b'();
END
ELSE
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '791', "y" = '-453')
CALL DATAFLOW DF_DDS_PROCESS_LOG::'8b4a9a7d-d43a-4876-91da-ee0228a5ed5a'();
END
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>444</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_PROCESS_LOG_RUN_END', "ui_script_text" = 'sql(\'DS_RMX_STAGING\',\'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (\'||
$gJobID || \',\\\'Process Log file generation has been completed.\\\',\\\'PROCESS_LOG\\\',\\\'DDS_PROCESS_LOG_T\\\',-11)\');



', "x" = '1487', "y" = '-1016')
BEGIN_SCRIPT
sql('DS_RMX_STAGING', (('INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES (' || $gJobID) || ',\'Process Log file generation has been completed.\',\'PROCESS_LOG\',\'DDS_PROCESS_LOG_T\',-11)'));END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Fri Sep 29 13:59:21 2017', "ActaValue_3" = 'Fri Sep 29 15:48:03 2017', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_WRITE_UV_DIARY::'478dd5f9-d44c-459b-88b5-648123f7c8e5'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '1266', "y" = '-756')
CALL DATAFLOW DF_DDS_WRITE_VERIFY_DIARY::'73c39e3b-039d-4757-9b4f-c4e0be6dc103'();
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RSavedAfterCheckOut', "ActaName_2" = 'RDate_created', "ActaName_3" = 'RDate_modified', "ActaValue_1" = 'YES', "ActaValue_2" = 'Thu Jan 21 18:08:34 2016', "ActaValue_3" = 'Thu Jan 28 18:14:24 2016', "x" = '-1', "y" = '-1')
CREATE PLAN WF_DDS_WRITE_VERIFY_DIARY::'8cd5b19e-61dd-42ae-bece-3d767626d23e'( )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>413</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'S_DDS_CHECK_ERROR', "ui_script_text" = '$gErrorCount = sql(\'DS_RMX_STAGING\', \'SELECT COUNT(ERR_LOG_ROW_ID) FROM DDS_ERROR_LOG WHERE JOBID= \' || $gJobId);

#$gSuppError = sql(\'DS_RMX_STAGING\', \'SELECT COUNT(*) FROM DDS_ERROR_LOG WHERE ERROR_TABLE_TO_CHECK LIKE \\\'%_SUPP\\\' AND JOBID= \' || $gJobId);', "x" = '434', "y" = '-441')
BEGIN_SCRIPT
$gErrorCount = sql('DS_RMX_STAGING', ('SELECT COUNT(ERR_LOG_ROW_ID) FROM DDS_ERROR_LOG WHERE JOBID= ' || $gJobId));END
 AlGUIComment ("If_condition" = '$gErrorCount > 0', "UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>428</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "ui_display_name" = 'C_DDS_SEND_UV_DIARY', "x" = '944', "y" = '-716')
IF (($gErrorCount > 0) )
BEGIN
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>441</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '291', "y" = '-59')
CALL PLAN WF_DDS_POPULATE_UV::'6d3e936f-6cb6-423c-8f39-6a2eb35e0d5b'();
 AlGUIComment ("UI_DATA_XML" = '<UIDATA><MAINICON><LOCATION><X>0</X><Y>0</Y></LOCATION><SIZE><CX>438</CX><CY>-179</CY></SIZE></MAINICON><DESCRIPTION><LOCATION><X>0</X><Y>-190</Y></LOCATION><SIZE><CX>200</CX><CY>200</CY></SIZE><VISIBLE>0</VISIBLE></DESCRIPTION></UIDATA>', "x" = '809', "y" = '-303')
CALL PLAN WF_DDS_WRITE_UV_DIARY::'478dd5f9-d44c-459b-88b5-648123f7c8e5'();
END
END
 SET ("run_once" = 'no', "unit_of_recovery" = 'no', "workflow_type" = 'Regular')
 AlGUIComment ("ActaName_1" = 'RActa_user_func_category', "ActaName_2" = 'RSavedAfterCheckOut', "ActaName_3" = 'RDate_created', "ActaName_4" = 'RDate_modified', "ActaValue_1" = 'User_Script_Function', "ActaValue_2" = 'YES', "ActaValue_3" = 'Tue May 31 11:24:53 2016', "ActaValue_4" = 'Thu Jun 02 18:17:50 2016', "InputSchema_WidthProp" = '34', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '45', "ui_script_text" = '$tSQL = \' FROM DA_STATISTICS WHERE JOBID = \' || $gJobID || \' AND PASS_COUNT = \' || $gPass_Count;


$tSQL2 = \'SELECT SUM(INPUT_ROW_COUNT)\' || $tSQL;
$tRowCount  = sql( \'DS_RMX_STAGING\' , $tSQL2 );
if ($tRowCount is null)
	$tRowCount = \'0\';

$tSQL2 = \'SELECT SUM(START_VALID_ROW_COUNT)\' || $tSQL;
$tStartValid = sql( \'DS_RMX_STAGING\' , $tSQL2 );
if ($tStartValid is null)
	$tStartValid = \'0\';

$tSQL2 = \'SELECT SUM(START_INVALID_ROW_COUNT)\' || $tSQL;
$tStartInvalid = sql( \'DS_RMX_STAGING\' , $tSQL2 );
if ($tStartInvalid is null)
	$tStartInvalid = \'0\';

$tSQL2 = \'SELECT SUM(END_VALID_ROW_COUNT)\' || $tSQL;
$tEndValid = sql( \'DS_RMX_STAGING\' , $tSQL2 );
if ($tEndValid is null)
	$tEndValid = \'0\';

$tSQL2 = \'SELECT SUM(END_INVALID_ROW_COUNT)\' || $tSQL;
$tEndInvalid = sql( \'DS_RMX_STAGING\' , $tSQL2 );
if ($tEndInvalid is null)
	$tEndInvalid = \'0\';

##neha added stage variable for final diary starts
if ($tEndInvalid =\'0\')
$gStage=3;
#print ($gStage);
##neha added stage variable for final diary ends

$tSQL2 = \'SELECT SUM(END_UPDATE_ROW_COUNT)\' || $tSQL;
$tEndUpdate = sql( \'DS_RMX_STAGING\' , $tSQL2 );
if ($tEndUpdate is null)
	$tEndUpdate = \'0\';

$tSQL2 = \'SELECT SUM(TOTAL_FAILED_VALIDATIONS)\' || $tSQL;
$tTotalValidationErrors = sql( \'DS_RMX_STAGING\' , $tSQL2 );
if ($tTotalValidationErrors is null)
	$tTotalValidationErrors = \'0\';

$gDiaryStatistics = \'Job completed with the following record totals: \'||   chr(13)||chr(10) ||
					\'Total processed input records\' || chr(9) || \': \' || $tRowCount || chr(13)||chr(10) ||
					\'Pre-validation valid rows\' || chr(9) || \': \' || $tStartValid || chr(13)||Chr(10) ||
					\'Pre-validation invalid rows\' || chr(9) || \': \' || $tStartInvalid || chr(13)||Chr(10) ||
					\'Post-validation valid rows\' || chr(9) || \': \' || $tEndValid || chr(13)||Chr(10) ||
					\'Post-validation invalid rows\' || chr(9) || \': \' || $tEndInvalid || chr(13)||Chr(10) ||
					\'Total failed validations\' || chr(9) || \': \' || $tTotalValidationErrors || chr(13)||Chr(10);

Return 0;


', "x" = '-1', "y" = '-1')
CREATE FUNCTION f_ConsolidateStats( )
RETURNS  INT 
DECLARE
     $tSQL VARCHAR(400) ;
     $tRowCount INT ;
     $tStartValid INT ;
     $tStartInvalid INT ;
     $tEndValid INT ;
     $tEndInvalid INT ;
     $tEndUpdate INT ;
     $tTotalValidationErrors INT ;
     $tSQL2 VARCHAR(400) ;
BEGIN
$tSQL = (((' FROM DA_STATISTICS WHERE JOBID = ' || $gJobID) || ' AND PASS_COUNT = ') || $gPass_Count);$tSQL2 = ('SELECT SUM(INPUT_ROW_COUNT)' || $tSQL);$tRowCount = sql('DS_RMX_STAGING', $tSQL2);IF (($tRowCount IS  NULL ) )
$tRowCount = '0';$tSQL2 = ('SELECT SUM(START_VALID_ROW_COUNT)' || $tSQL);$tStartValid = sql('DS_RMX_STAGING', $tSQL2);IF (($tStartValid IS  NULL ) )
$tStartValid = '0';$tSQL2 = ('SELECT SUM(START_INVALID_ROW_COUNT)' || $tSQL);$tStartInvalid = sql('DS_RMX_STAGING', $tSQL2);IF (($tStartInvalid IS  NULL ) )
$tStartInvalid = '0';$tSQL2 = ('SELECT SUM(END_VALID_ROW_COUNT)' || $tSQL);$tEndValid = sql('DS_RMX_STAGING', $tSQL2);IF (($tEndValid IS  NULL ) )
$tEndValid = '0';$tSQL2 = ('SELECT SUM(END_INVALID_ROW_COUNT)' || $tSQL);$tEndInvalid = sql('DS_RMX_STAGING', $tSQL2);IF (($tEndInvalid IS  NULL ) )
$tEndInvalid = '0';IF (($tEndInvalid = '0') )
$gStage = 3;$tSQL2 = ('SELECT SUM(END_UPDATE_ROW_COUNT)' || $tSQL);$tEndUpdate = sql('DS_RMX_STAGING', $tSQL2);IF (($tEndUpdate IS  NULL ) )
$tEndUpdate = '0';$tSQL2 = ('SELECT SUM(TOTAL_FAILED_VALIDATIONS)' || $tSQL);$tTotalValidationErrors = sql('DS_RMX_STAGING', $tSQL2);IF (($tTotalValidationErrors IS  NULL ) )
$tTotalValidationErrors = '0';$gDiaryStatistics = (((((((((((((((((((((((((((((((((((((('Job completed with the following record totals: ' || chr(13)) || chr(10)) || 'Total processed input records') || chr(9)) || ': ') || $tRowCount) || chr(13)) || chr(10)) || 'Pre-validation valid rows') || chr(9)) || ': ') || $tStartValid) || chr(13)) || chr(10)) || 'Pre-validation invalid rows') || chr(9)) || ': ') || $tStartInvalid) || chr(13)) || chr(10)) || 'Post-validation valid rows') || chr(9)) || ': ') || $tEndValid) || chr(13)) || chr(10)) || 'Post-validation invalid rows') || chr(9)) || ': ') || $tEndInvalid) || chr(13)) || chr(10)) || 'Total failed validations') || chr(9)) || ': ') || $tTotalValidationErrors) || chr(13)) || chr(10));RETURN 0;
END
 AlGUIComment ("ActaName_1" = 'RActa_user_func_category', "ActaName_2" = 'RSavedAfterCheckOut', "ActaName_3" = 'RDate_created', "ActaName_4" = 'RDate_modified', "ActaValue_1" = 'User_Script_Function', "ActaValue_2" = 'YES', "ActaValue_3" = 'Thu Feb 18 16:38:40 2016', "ActaValue_4" = 'Mon Jan 18 20:27:12 2016', "InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '86', "ui_script_text" = '################################################################
## f_statistics                                               ##
## Create or update a DA_STATISTICS row for the given table.  ##
################################################################
## USAGE                                                      ##
## f_statistics( $sTableName varchar(50), $bUpdate int)       ##
## $sTableName - string containg the name of the table to     ##
##               process a record for.  For Oracle support    ##				
##               this field must be considered case-sensitive ##
## $bUdate     - int indicating if this is an update to an    ##
##               existing DA_STATISTICS row for the current   ##
##               pass count of the current job id.            ##
##				 0 = new row, nonzero = update row            ##
## Returns nothing.                                           ##
################################################################


if ($bUpdate = 0)
	begin
		$tSQL = \'DELETE FROM DA_STATISTICS WHERE JOBID = \' || $gJobId  || \' AND PASS_COUNT = \' || $gPass_Count || \' AND TABLE_NAME = \\\'\' || $sTableName || \'\\\'\';
		$lOut = sql( \'DS_RMX_STAGING\', $tSQL );
		$sSQL = \'INSERT INTO DA_STATISTICS (JOBID, PASS_COUNT,IS_VALIDATION,IMPORT_MODULE_NAME,TABLE_NAME,INPUT_ROW_COUNT,START_VALID_ROW_COUNT,START_INVALID_ROW_COUNT,END_VALID_ROW_COUNT,END_INVALID_ROW_COUNT,END_UPDATE_ROW_COUNT,TOTAL_ROWS,TOTAL_FAILED_VALIDATIONS,START_TIME,END_TIME) VALUES (\';	
		$sSQL2 = \'\';
	end
else 
	begin
		$sSQL =  \'UPDATE DA_STATISTICS SET \';
		$sSQL2 = \' WHERE \';
	end
	

#JOBID
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || $gJobId || \', \';	
	end
else 
	begin
		$sSQL2 = $sSQL2 || \'JOBID = \' || $gJobId || \' AND \';
	end

#PASS_COUNT
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || $gPass_Count || \', \';	
	end
else 
	begin
		$sSQL2 = $sSQL2 || \'PASS_COUNT = \' || $gPass_Count || \' AND \';
	end

#IS_VALIDATION
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || \'0, \';
	end
#else  nothing to update

#IMPORT_MODULE_NAME
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || \'\\\'\' || $sTableName || \'\\\', \';
	end 
#else  nothing to update

#TABLE_NAME
if ($bUpdate = 0)
	$sSQL = $sSQL || \'\\\'\' || $sTableName || \'\\\', \';
else 
	$sSQL2 = $sSQL2 || \'TABLE_NAME = \\\'\' || $sTableName || \'\\\'\';

#INPUT_ROW_COUNT
if ($bUpdate = 0)
	begin
		$tSQL = \'SELECT COUNT(DA_ROW_ID) FROM \' || $sTableName || \' WHERE JOBID = \' || $gJobId; 
		$lOut = sql( \'DS_RMX_STAGING\', $tSQL );
		if ($lOut is null)
			$lOut = \'0\';
		$sSQL = $sSQL || $lOut || \', \';
	end
#else  nothing to update

#START_VALID_ROW_COUNT

if ($bUpdate = 0)
	begin
		$tSQL = \'SELECT COUNT(DA_ROW_ID) FROM \' || $sTableName || \' WHERE JOBID = \' || $gJobId || \' AND INVALID_ROW = 0\'; 
		$lOut = sql( \'DS_RMX_STAGING\', $tSQL );
		if ($lOut is null)
			$lOut = \'0\';
		$sSQL = $sSQL || $lOut || \', \';
	end 
#else  nothing to update

#START_INVALID_ROW_COUNT

if ($bUpdate = 0)
	begin
		$tSQL = \'SELECT COUNT(DA_ROW_ID) FROM \' || $sTableName || \' WHERE JOBID = \' || $gJobId || \' AND INVALID_ROW != 0\'; 
		$lOut = sql( \'DS_RMX_STAGING\', $tSQL );
		if ($lOut is null)
			$lOut = \'0\';
		$sSQL = $sSQL || $lOut || \', \';
	end 
#else  nothing to update

#END_VALID_ROW_COUNT
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || \'-1, \';
	end
else 
	begin	
		$tSQL = \'SELECT COUNT(DA_ROW_ID) FROM \' || $sTableName || \' WHERE JOBID = \' || $gJobId || \' AND INVALID_ROW = 0\'; 
		$lOut = sql( \'DS_RMX_STAGING\', $tSQL );
		$lStartCount  = $lOut;
		if ($lOut is null)
			$lOut = \'0\';
		$sSQL = $sSQL || \'END_VALID_ROW_COUNT = \' || $lOut || \', \';
	end

#END_INVALID_ROW_COUNT
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || \'-1, \';
	end
else 
	begin
		$tSQL = \'SELECT COUNT(DA_ROW_ID) FROM \' || $sTableName || \' WHERE JOBID = \' || $gJobId || \' AND INVALID_ROW != 0\'; 
		$lOut = sql( \'DS_RMX_STAGING\', $tSQL );
		if ($lOut is null)
			$lOut = \'0\';
		$sSQL = $sSQL || \'END_INVALID_ROW_COUNT = \' || $lOut || \', \';
	end

#END_UPDATE_ROW_COUNT
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || \'-1, \';
	end
else 
	begin

		$sSQL = $sSQL || \'END_UPDATE_ROW_COUNT = \' || $lStartCount || \', \';
	end

#TOTAL_ROWS
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || \'0, \';
	end 
#else  nothing to update

#TOTAL_FAILED_VALIDATIONS
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || \'-1, \';
	end 
else 
	begin
		$tSQL = \'SELECT SUM(INVALID_ROW) FROM \' || $sTableName || \' WHERE JOBID = \' || $gJobId || \' AND INVALID_ROW != 0\'; 
		$lOut = sql( \'DS_RMX_STAGING\', $tSQL );
		if ($lOut is null)
			$lOut = \'0\';
		$sSQL = $sSQL || \'TOTAL_FAILED_VALIDATIONS = \' || $lOut || \', \';	
	end


#START_TIME
#END_TIME
if ($bUpdate = 0)
	begin
		$sSQL = $sSQL || to_char( sysdate(), \'YYYYMMDDhh24miss\') || \', \\\'\\\')\';	
	end
else 
	begin
		$sSQL = $sSQL || \'END_TIME = \' || to_char( sysdate(), \'YYYYMMDDhh24miss\');
	end 

$lCompleteSql = $sSQL || $sSQL2;
print($lCompleteSql);

$lOut = sql( \'DS_RMX_STAGING\', $lCompleteSql );

Return 0;', "x" = '-1', "y" = '-1')
CREATE FUNCTION f_Statistics($sTableName VARCHAR(50)  IN, $bUpdate INT  IN )
RETURNS  INT 
DECLARE
     $lOut VARCHAR(50) ;
     $sSQL VARCHAR(400) ;
     $sSQL2 VARCHAR(400) ;
     $tSQL VARCHAR(400) ;
     $lCompleteSql VARCHAR(1000) ;
     $lStartCount INT ;
     $lEndCount INT ;
BEGIN
IF (($bUpdate = 0) )
BEGIN
$tSQL = (((((('DELETE FROM DA_STATISTICS WHERE JOBID = ' || $gJobId) || ' AND PASS_COUNT = ') || $gPass_Count) || ' AND TABLE_NAME = \'') || $sTableName) || '\'');$lOut = sql('DS_RMX_STAGING', $tSQL);$sSQL = 'INSERT INTO DA_STATISTICS (JOBID, PASS_COUNT,IS_VALIDATION,IMPORT_MODULE_NAME,TABLE_NAME,INPUT_ROW_COUNT,START_VALID_ROW_COUNT,START_INVALID_ROW_COUNT,END_VALID_ROW_COUNT,END_INVALID_ROW_COUNT,END_UPDATE_ROW_COUNT,TOTAL_ROWS,TOTAL_FAILED_VALIDATIONS,START_TIME,END_TIME) VALUES (';$sSQL2 = '';END
ELSE
BEGIN
$sSQL = 'UPDATE DA_STATISTICS SET ';$sSQL2 = ' WHERE ';END
IF (($bUpdate = 0) )
BEGIN
$sSQL = (($sSQL || $gJobId) || ', ');END
ELSE
BEGIN
$sSQL2 = ((($sSQL2 || 'JOBID = ') || $gJobId) || ' AND ');END
IF (($bUpdate = 0) )
BEGIN
$sSQL = (($sSQL || $gPass_Count) || ', ');END
ELSE
BEGIN
$sSQL2 = ((($sSQL2 || 'PASS_COUNT = ') || $gPass_Count) || ' AND ');END
IF (($bUpdate = 0) )
BEGIN
$sSQL = ($sSQL || '0, ');END
IF (($bUpdate = 0) )
BEGIN
$sSQL = ((($sSQL || '\'') || $sTableName) || '\', ');END
IF (($bUpdate = 0) )
$sSQL = ((($sSQL || '\'') || $sTableName) || '\', ');ELSE
$sSQL2 = ((($sSQL2 || 'TABLE_NAME = \'') || $sTableName) || '\'');IF (($bUpdate = 0) )
BEGIN
$tSQL = ((('SELECT COUNT(DA_ROW_ID) FROM ' || $sTableName) || ' WHERE JOBID = ') || $gJobId);$lOut = sql('DS_RMX_STAGING', $tSQL);IF (($lOut IS  NULL ) )
$lOut = '0';$sSQL = (($sSQL || $lOut) || ', ');END
IF (($bUpdate = 0) )
BEGIN
$tSQL = (((('SELECT COUNT(DA_ROW_ID) FROM ' || $sTableName) || ' WHERE JOBID = ') || $gJobId) || ' AND INVALID_ROW = 0');$lOut = sql('DS_RMX_STAGING', $tSQL);IF (($lOut IS  NULL ) )
$lOut = '0';$sSQL = (($sSQL || $lOut) || ', ');END
IF (($bUpdate = 0) )
BEGIN
$tSQL = (((('SELECT COUNT(DA_ROW_ID) FROM ' || $sTableName) || ' WHERE JOBID = ') || $gJobId) || ' AND INVALID_ROW != 0');$lOut = sql('DS_RMX_STAGING', $tSQL);IF (($lOut IS  NULL ) )
$lOut = '0';$sSQL = (($sSQL || $lOut) || ', ');END
IF (($bUpdate = 0) )
BEGIN
$sSQL = ($sSQL || '-1, ');END
ELSE
BEGIN
$tSQL = (((('SELECT COUNT(DA_ROW_ID) FROM ' || $sTableName) || ' WHERE JOBID = ') || $gJobId) || ' AND INVALID_ROW = 0');$lOut = sql('DS_RMX_STAGING', $tSQL);$lStartCount = $lOut;IF (($lOut IS  NULL ) )
$lOut = '0';$sSQL = ((($sSQL || 'END_VALID_ROW_COUNT = ') || $lOut) || ', ');END
IF (($bUpdate = 0) )
BEGIN
$sSQL = ($sSQL || '-1, ');END
ELSE
BEGIN
$tSQL = (((('SELECT COUNT(DA_ROW_ID) FROM ' || $sTableName) || ' WHERE JOBID = ') || $gJobId) || ' AND INVALID_ROW != 0');$lOut = sql('DS_RMX_STAGING', $tSQL);IF (($lOut IS  NULL ) )
$lOut = '0';$sSQL = ((($sSQL || 'END_INVALID_ROW_COUNT = ') || $lOut) || ', ');END
IF (($bUpdate = 0) )
BEGIN
$sSQL = ($sSQL || '-1, ');END
ELSE
BEGIN
$sSQL = ((($sSQL || 'END_UPDATE_ROW_COUNT = ') || $lStartCount) || ', ');END
IF (($bUpdate = 0) )
BEGIN
$sSQL = ($sSQL || '0, ');END
IF (($bUpdate = 0) )
BEGIN
$sSQL = ($sSQL || '-1, ');END
ELSE
BEGIN
$tSQL = (((('SELECT SUM(INVALID_ROW) FROM ' || $sTableName) || ' WHERE JOBID = ') || $gJobId) || ' AND INVALID_ROW != 0');$lOut = sql('DS_RMX_STAGING', $tSQL);IF (($lOut IS  NULL ) )
$lOut = '0';$sSQL = ((($sSQL || 'TOTAL_FAILED_VALIDATIONS = ') || $lOut) || ', ');END
IF (($bUpdate = 0) )
BEGIN
$sSQL = (($sSQL || to_char(sysdate(), 'YYYYMMDDhh24miss')) || ', \'\')');END
ELSE
BEGIN
$sSQL = (($sSQL || 'END_TIME = ') || to_char(sysdate(), 'YYYYMMDDhh24miss'));END
$lCompleteSql = ($sSQL || $sSQL2);print($lCompleteSql);$lOut = sql('DS_RMX_STAGING', $lCompleteSql);RETURN 0;
END
 AlGUIComment ("ActaName_1" = 'RActa_user_func_category', "ActaName_2" = 'RDescription', "ActaName_3" = 'RParallelizable', "ActaName_4" = 'RisScriptValidationFunction', "ActaName_5" = 'RSavedAfterCheckOut', "ActaName_6" = 'RDate_created', "ActaName_7" = 'RDate_modified', "ActaValue_1" = 'User_Script_Function', "ActaValue_2" = 'This function is used to replace single quote with double quote', "ActaValue_3" = 'no', "ActaValue_4" = 'no', "ActaValue_5" = 'NO', "ActaValue_6" = 'Tue Mar 15 19:04:59 2016', "ActaValue_7" = 'Tue Mar 22 19:00:02 2016', "InputSchema_WidthProp" = '40', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '86', "ui_script_text" = '
$temp1  = replace_substr($str, \'\\\'\', \'\\\'\\\'\');
$temp1  = ifthenelse( $temp1 =\'\',NULL,$temp1);
return $temp1 ;', "x" = '-1', "y" = '-1')
CREATE FUNCTION f_dds_replace_quote($str VARCHAR(32000)  IN )
RETURNS  VARCHAR(32000) 
DECLARE
     $temp1 VARCHAR(32000) ;
BEGIN
$temp1 = replace_substr($str, '\'', '\'\'');$temp1 = ifthenelse(($temp1 = ''),  NULL , $temp1);RETURN $temp1;
END
 AlGUIComment ("ActaName_1" = 'RActa_user_func_category', "ActaName_2" = 'RParallelizable', "ActaName_3" = 'RisScriptValidationFunction', "ActaName_4" = 'RSavedAfterCheckOut', "ActaName_5" = 'RDate_created', "ActaName_6" = 'RDate_modified', "ActaValue_1" = 'User_Script_Function', "ActaValue_2" = 'no', "ActaValue_3" = 'no', "ActaValue_4" = 'YES', "ActaValue_5" = 'Tue Feb 07 16:04:17 2017', "ActaValue_6" = 'Mon Feb 06 16:36:24 2017', "InputSchema_WidthProp" = '34', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '53', "ui_script_text" = '$Count=sql(\'DS_RMDB\',\'SELECT COUNT(ENTRY_ID) FROM WPA_DIARY_ENTRY WHERE ATTACH_RECORDID =\\\'\'||$gJobid||\'\\\'\');

if($Count >0)
begin
$Sysdate=to_char( sysdate(),\'YYYYMMDD\');
sql( \'DS_RMDB\',\'UPDATE WPA_DIARY_ENTRY SET STATUS_OPEN=0 ,COMPLETE_DATE=\\\'\'||$Sysdate||\'\\\' WHERE ATTACH_RECORDID =\\\'\'||$gJobid||\'\\\'\');
end

Return $Count ;
', "x" = '-1', "y" = '-1')
CREATE FUNCTION f_diary_status($Diary_name VARCHAR(1000)  IN )
RETURNS  INT 
DECLARE
     $Count INT ;
     $SQL VARCHAR(4000) ;
     $Sysdate VARCHAR(8) ;
BEGIN
$Count = sql('DS_RMDB', (('SELECT COUNT(ENTRY_ID) FROM WPA_DIARY_ENTRY WHERE ATTACH_RECORDID =\'' || $gJobid) || '\''));IF (($Count > 0) )
BEGIN
$Sysdate = to_char(sysdate(), 'YYYYMMDD');sql('DS_RMDB', (((('UPDATE WPA_DIARY_ENTRY SET STATUS_OPEN=0 ,COMPLETE_DATE=\'' || $Sysdate) || '\' WHERE ATTACH_RECORDID =\'') || $gJobid) || '\''));END
RETURN $Count;
END
 AlGUIComment ("ActaName_1" = 'RActa_user_func_category', "ActaName_2" = 'RParallelizable', "ActaName_3" = 'RisScriptValidationFunction', "ActaName_4" = 'RSavedAfterCheckOut', "ActaName_5" = 'RDate_created', "ActaName_6" = 'RDate_modified', "ActaValue_1" = 'User_Script_Function', "ActaValue_2" = 'no', "ActaValue_3" = 'no', "ActaValue_4" = 'YES', "ActaValue_5" = 'Mon Sep 25 15:32:28 2017', "ActaValue_6" = 'Mon Sep 25 20:24:11 2017', "InputSchema_WidthProp" = '44', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '51', "ui_script_text" = '$lix = lookup_ext([DS_RMDB.DBO.GLOSSARY,\'PRE_LOAD_CACHE\',\'MAX\'], [NEXT_UNIQUE_ID],[NULL],[SYSTEM_TABLE_NAME,\'=\',$p_TableName],[],[$l_NextUID]) SET ("run_as_separate_process"=\'no\');

print(\'m_NextUID\'||$l_NextUID );
$l_NextUID	 = ifthenelse($l_NextUID IS NULL, 1, $l_NextUID);
$p_NextUID = $l_NextUID;

$l_NextUID 	 = $l_NextUID + ifthenelse($p_AddedRows = 0, 0, $p_AddedRows - 1);


#print(\'TableName\'||$p_TableName );
#print(\'a_NextUID\'||$l_NextUID );
#print(\'p_AddedRows\'||$p_AddedRows );
## UPDATES GLOSSARY RESERVING ALL THE ADDED IDs
sql(\'DS_RMDB\', \'UPDATE GLOSSARY SET NEXT_UNIQUE_ID = \' ||  $l_NextUID + 1 || \' WHERE SYSTEM_TABLE_NAME =  \\\'\' || $p_TableName || \'\\\'\');



return $l_NextUID;', "x" = '-1', "y" = '-1')
CREATE FUNCTION f_getNextUID($p_TableName VARCHAR(25)  IN, $p_AddedRows INT  IN, $p_NextUID INT  OUT )
RETURNS  INT 
DECLARE
     $l_NextUID INT ;
     $lix INT ;
BEGIN
$lix = lookup_ext([DS_RMDB.DBO.GLOSSARY, 'PRE_LOAD_CACHE', 'MAX'], [ NEXT_UNIQUE_ID ], [  NULL  ], [ SYSTEM_TABLE_NAME, '=', $p_TableName ], [  ], [ $l_NextUID ]) 
SET("run_as_separate_process" = 'no')
;print(('m_NextUID' || $l_NextUID));$l_NextUID = ifthenelse(($l_NextUID IS  NULL ), 1, $l_NextUID);$p_NextUID = $l_NextUID;$l_NextUID = ($l_NextUID + ifthenelse(($p_AddedRows = 0), 0, ($p_AddedRows - 1)));sql('DS_RMDB', (((('UPDATE GLOSSARY SET NEXT_UNIQUE_ID = ' || ($l_NextUID + 1)) || ' WHERE SYSTEM_TABLE_NAME =  \'') || $p_TableName) || '\''));RETURN $l_NextUID;
END
 AlGUIComment ("ActaName_1" = 'RActa_user_func_category', "ActaName_2" = 'RParallelizable', "ActaName_3" = 'RisScriptValidationFunction', "ActaName_4" = 'RSavedAfterCheckOut', "ActaName_5" = 'RDate_created', "ActaName_6" = 'RDate_modified', "ActaValue_1" = 'User_Script_Function', "ActaValue_2" = 'no', "ActaValue_3" = 'no', "ActaValue_4" = 'YES', "ActaValue_5" = 'Tue Nov 18 11:30:23 2014', "ActaValue_6" = 'Mon Dec 08 12:39:25 2014', "InputSchema_WidthProp" = '51', "Input_1st_Column_Name" = 'Type', "Input_2nd_Column_Name" = 'Description', "Input_Column_Name_3" = 'Content_Type', "Input_Column_Name_4" = 'Business_Name', "Input_Column_Width_3" = '100', "Input_Column_Width_4" = '100', "Input_Width_Description" = '130', "Input_Width_Type" = '85', "Output_1st_Column_Name" = 'Type', "Output_2nd_Column_Name" = 'Mapping', "Output_3rd_Column_Name" = 'Description', "Output_Column_Name_4" = 'Content_Type', "Output_Column_Name_5" = 'Business_Name', "Output_Column_Width_4" = '100', "Output_Column_Width_5" = '100', "Output_Width_Decsription" = '130', "Output_Width_Mapping" = '85', "Output_Width_Type" = '80', "UpperContainer_HeightProp" = '69', "ui_script_text" = 'if (trunc($iNumber/10, 0) <> 1)
	begin
	
		if (mod($iNumber, 10) = 1)
			$lEnding = \'st\';

		if (mod($iNumber, 10) = 2)
			$lEnding = \'nd\';

		if (mod($iNumber, 10) = 3)
			$lEnding = \'rd\';
	end
else 
	begin	
		$lEnding = \'th\';
	end

Return $iNumber || $lEnding;
', "x" = '-1', "y" = '-1')
CREATE FUNCTION f_getNumberPlace($iNumber INT  IN )
RETURNS  VARCHAR(12) 
DECLARE
     $lEnding VARCHAR(12) ;
BEGIN
IF ((trunc(($iNumber / 10), 0) != 1) )
BEGIN
IF ((mod($iNumber, 10) = 1) )
$lEnding = 'st';IF ((mod($iNumber, 10) = 2) )
$lEnding = 'nd';IF ((mod($iNumber, 10) = 3) )
$lEnding = 'rd';END
ELSE
BEGIN
$lEnding = 'th';END
RETURN ($iNumber || $lEnding);
END
