IF OBJECT_ID('DDS_USER_VERIFICATION', 'P') IS NOT NULL
    DROP PROCEDURE DDS_USER_VERIFICATION;
GO

CREATE PROCEDURE DDS_USER_VERIFICATION 
(
@P_MODULENAME VARCHAR(100), 
@P_TABLENAME VARCHAR(100), 
@P_IMPORTAREA  VARCHAR(100),
@P_JOBID INT, 
@P_DATAOPTION VARCHAR(10),
@PageIndex INT
) 
 WITH EXECUTE AS CALLER
AS
DECLARE @PAGESIZE INT=50;
DECLARE @V_SQL NVARCHAR(MAX);-- = N'';
DECLARE @V_COLUMN_NAME VARCHAR(50);-- = N'';
DECLARE @V_CURSOR_SQL NVARCHAR(MAX);
DECLARE @V_SQL_CNT NVARCHAR(MAX);
DECLARE @RecordCount VARCHAR(100);
SET @V_CURSOR_SQL='DECLARE CUR_DDS_TABLES CURSOR FOR SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = @V_TABLE_NAME_P AND ISNULL(CHARACTER_MAXIMUM_LENGTH,0) <> -1
UNION
SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @V_TABLE_NAME_P
and COLUMN_NAME IN (''USER_FIELD_A'',''NOTE_MEMO'', ''TEST_LAB_TEST_1''	, ''TEST_LAB_TEST_2'', ''TEST_LAB_TEST_3''	, ''TEST_LAB_TEST_4''	
, ''TEST_LAB_TEST_5'' , ''TEST_RESULT_1'' , ''TEST_RESULT_2'' 	, ''TEST_RESULT_3'' , ''TEST_RESULT_4'' , ''TEST_RESULT_5'' ) 
EXCEPT
SELECT COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @V_TABLE_NAME_P
and COLUMN_NAME IN (''ALT_WAIT_DIS_TYPE'',''ALT_WAIT_DIS_PRD'', ''ALT_WAIT_DIS_CLNDR_WRK_TYPE''	, ''ALT_WAIT_DIS_PRD_TYPE'', ''WAGES_FROM''	, ''WAGES_TO''	
, ''WEEKLY_BENEFIT'' ) 
';

Exec sp_Executesql @V_CURSOR_SQL,
N'@V_TABLE_NAME_P VARCHAR(50)',
@V_TABLE_NAME_P=@p_tablename;


BEGIN
IF @P_MODULENAME='DDS'
BEGIN
         -- PRINT @p_tablename;
	IF @P_DATAOPTION = 'V'
    BEGIN
  	  SET @V_SQL_CNT =  'SELECT  @P_CNT = COUNT(DA_ROW_ID) FROM ' + @P_TABLENAME  + ' WHERE JOBID = @V_JOBID_P';   
	  EXECUTE SP_EXECUTESQL @V_SQL_CNT,
	  N' @P_CNT int OUTPUT,@V_JOBID_P INT',
	  @P_CNT = @RecordCount OUTPUT,
	  @V_JOBID_P = @P_JOBID;               
	END    
    ELSE IF @P_DATAOPTION = 'E'
    BEGIN
     SET @V_SQL_CNT =  'SELECT  @P_CNT = COUNT(EL.DA_ROW_ID) FROM ' + @P_TABLENAME ;   
     SET  @V_SQL_CNT=@V_SQL_CNT +' INNER JOIN DDS_ERROR_LOG EL ON '+ @P_TABLENAME + '.'+'DA_ROW_ID = EL.DA_ROW_ID WHERE EL.JOBID = '+ @P_TABLENAME + '.' +'JOBID AND '+ @P_TABLENAME + '.' + 'JOBID = '+ CAST(@P_JOBID AS VARCHAR) + ' 
     AND ERROR_TABLE_TO_CHECK = @TABLENAME_P';
     
     EXECUTE SP_EXECUTESQL @V_SQL_CNT,
	  N' @P_CNT int OUTPUT,
	  @V_JOBID_P INT,
	  @TABLENAME_P VARCHAR(100)',
	  @P_CNT = @RecordCount OUTPUT,
	  @V_JOBID_P = @P_JOBID,      
	  @TABLENAME_P = @P_TABLENAME;
      PRINT @V_SQL_CNT;
    END    
               
      OPEN CUR_DDS_TABLES                       
      FETCH NEXT FROM CUR_DDS_TABLES INTO @V_COLUMN_NAME
      WHILE @@Fetch_status = 0
      BEGIN
      --PRINT 'KK1';
      --PRINT @V_COLUMN_NAME;
            IF @V_SQL IS NULL
            BEGIN
                  SET  @V_SQL= 'SELECT  *  FROM ( SELECT ROW_NUMBER() OVER ( ORDER BY '+@P_TABLENAME +'.'+'DA_ROW_ID ) AS [ROW_NUMBER], '+ cast(@RecordCount as varchar) +' AS [TOTAL_CNT],' + @P_TABLENAME + '.' + @V_COLUMN_NAME +' ,';
            END
            ELSE
            BEGIN
                  SET @V_SQL = @V_SQL + @P_TABLENAME + '.' + @V_COLUMN_NAME+' ,';
            END       
      
       FETCH NEXT FROM CUR_DDS_TABLES INTO @V_COLUMN_NAME                               
      END
      CLOSE CUR_DDS_TABLES
      DEALLOCATE CUR_DDS_TABLES
      SET NOCOUNT OFF
      SET @V_SQL = (SELECT LEFT(@V_SQL, NULLIF(LEN(@V_SQL)-1,-1)) + ' FROM ' +@P_TABLENAME);
      

   IF @P_DATAOPTION = 'V'
    BEGIN
     SET  @V_SQL=@V_SQL + ' WHERE JOBID = @JOBID_P ) AS RowNum
      WHERE [ROW_NUMBER] BETWEEN (@PageIndex_P - 1) * @PageSize_P  + 1 
      AND((( @PageIndex_P -1) * @PageSize_P + 1) + @PageSize_P) - 1
      ORDER BY [ROW_NUMBER]' ;
      
      SET @V_SQL=@V_SQL;
      PRINT @V_SQL_CNT;
	  EXECUTE SP_EXECUTESQL @V_SQL,
	  N' @JOBID_P INT,
	  @PageIndex_P INT,
	  @PageSize_P INT',
	  @JOBID_P = @P_JOBID,
	  @PageIndex_P = @PageIndex,
	  @PageSize_P = @PageSize;        
      
      --PRINT @V_SQL;
    END    
   ELSE IF @P_DATAOPTION = 'E'
   BEGIN
     SET  @V_SQL=@V_SQL +' INNER JOIN DDS_ERROR_LOG EL ON '+ @P_TABLENAME + '.'+'DA_ROW_ID = EL.DA_ROW_ID 
     WHERE EL.JOBID = '+ @P_TABLENAME + '.' +'JOBID AND '+ @P_TABLENAME + '.' + 
     'JOBID = @JOBID_P  AND ERROR_TABLE_TO_CHECK = @TABLENAME_P) AS RowNum
      WHERE [ROW_NUMBER] BETWEEN (@PageIndex_P - 1) * @PageSize_P  + 1 
      AND((( @PageIndex_P -1) * @PageSize_P + 1) + @PageSize_P) - 1
      ORDER BY [ROW_NUMBER]' ;

SET @V_SQL=@V_SQL;	
PRINT @V_SQL_CNT;	  
	  EXECUTE SP_EXECUTESQL @V_SQL,
	  N' @JOBID_P INT,
	  @TABLENAME_P VARCHAR(100),
	  @PageIndex_P INT,
	  @PageSize_P INT',
	  @JOBID_P = @P_JOBID,
	  @TABLENAME_P = @P_TABLENAME,
	  @PageIndex_P = @PageIndex,
	  @PageSize_P = @PageSize;        

   END   
   
--PRINT @V_SQL_CNT;
   
END 
--SET @V_SQL=@V_SQL;
--EXEC(@V_SQL);
--SET NOCOUNT OFF;
END
