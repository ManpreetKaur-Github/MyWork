IF OBJECT_ID('DDS_IMPORT_STD_CLASS','P') IS NOT NULL
	DROP PROCEDURE DDS_IMPORT_STD_CLASS
GO
CREATE PROCEDURE [dbo].[DDS_IMPORT_STD_CLASS]
@P_JOBID	INT ,
@P_DBNAME	VARCHAR(255),
@P_USER_ID INT
WITH EXECUTE AS CALLER 
AS 
BEGIN ----BEGIN MAIN
BEGIN TRY  ----BEGIN MAIN TRY`
	SET NOCOUNT ON

	-- Variables for selected Options
	DECLARE @CheckCreateNewCodes SMALLINT,
	@CONFIG_ID SMALLINT,
	@ForceCreateEntity SMALLINT = 0,
	@Valid_Start_Date VARCHAR(8),
	@Valid_End_Date VARCHAR(8)

	-- Variables for STD_CLASS Record Fields
	DECLARE 
	@V_DA_ROW_ID INT ,
	@V_INVALID_ROW INT,
	@V_CLASS_NAME VARCHAR(20),
	@V_CLASS_DESC VARCHAR(50),
	@V_PLAN_NUMBER VARCHAR(20),
	@V_ELIG_BENE_PRD INT,
	@V_BENE_PRD_TYPE VARCHAR(25),
	@V_BENE_FROM_DT_TYPE VARCHAR(25),
	@V_DIS_WAIT_PRD INT,
	@V_DIS_CLNDR_WRK_TYPE VARCHAR(25),
	@V_DIS_PRD_TYPE VARCHAR(25),
	@V_DIS_MAX_PRD INT,
	@V_DIS_MAX_PRD_TYPE VARCHAR(25),
	@V_FROM_DIS_PRD_TYPE VARCHAR(25),
	@V_ALLOW_EXT VARCHAR(1),
	@V_EXTEND_PRD INT,
	@V_EXTEND_PRD_TYPE VARCHAR(25),
	@V_MAX_TOT_DIS_PRD INT,
	@V_MAX_TOT_PRD_TYPE VARCHAR(25),
	@V_ACTUAL_WORK_WEEK_FLAG VARCHAR(1),
	@V_DAY7_WORK_WEEK_FLAG VARCHAR(1),
	@V_DAY5_WORK_WEEK_FLAG VARCHAR(1),
	@V_OTHER_WORK_WEEK_FLAG VARCHAR(1),
	@V_OTHER_DAYS INT,
	@V_BENE_PRCTG_FLAG VARCHAR(1),
	@V_BENE_PER_AMT DECIMAL(20,2),
	@V_BENE_FLAT_AMT_FLAG VARCHAR(1),
	@V_BENE_FLAT_AMT DECIMAL(20,2),
	@V_BENE_TD_FLAG VARCHAR(1),
	@V_BENE_BASED_TYPE VARCHAR(25),
	@V_WITHHOLD_FED_ITAX_FLAG VARCHAR(1),
	@V_WITHHOLD_FICA_FLAG VARCHAR(1),
	@V_WEEKLY_BENE_CAP DECIMAL(20,2),
	@V_MAX_BEN_PER_CLAIM DECIMAL(20,2),
	@V_MAX_BEN_PER_CAL_YR DECIMAL(20,2),
	@V_WAGE_FOR_DIS_PRD DECIMAL(20,2),
	@V_WAGE_FOR_CAL_YR  DECIMAL(20,2),
	@V_TAXABLE_PERCENT  DECIMAL(20,2),
	@V_WITHHOLD_MEDICARE_FLAG VARCHAR(1),
	@V_WITHHOLD_STATE_FLAG VARCHAR(1),
	@V_USE_VOUCHERS_FLAG VARCHAR(1),
	@V_ALT_WAIT_DIS_TYPE VARCHAR(207),
	@V_ALT_WAIT_DIS_TYPE_1 VARCHAR(25),
	@V_ALT_WAIT_DIS_TYPE_2 VARCHAR(25),
	@V_ALT_WAIT_DIS_TYPE_3 VARCHAR(25),
	@V_ALT_WAIT_DIS_TYPE_4 VARCHAR(25),
	@V_ALT_WAIT_DIS_TYPE_5 VARCHAR(25),
	@V_ALT_WAIT_DIS_TYPE_6 VARCHAR(25),
	@V_ALT_WAIT_DIS_TYPE_7 VARCHAR(25),
	@V_ALT_WAIT_DIS_TYPE_8 VARCHAR(25),
	@V_ALT_WAIT_DIS_PRD VARCHAR(39),
	@V_ALT_WAIT_DIS_PRD_VAL INT,
	@V_ALT_WAIT_DIS_PRD_VAL_1 INT,
	@V_ALT_WAIT_DIS_PRD_VAL_2 INT,
	@V_ALT_WAIT_DIS_PRD_VAL_3 INT,
	@V_ALT_WAIT_DIS_PRD_VAL_4 INT,
	@V_ALT_WAIT_DIS_PRD_VAL_5 INT,
	@V_ALT_WAIT_DIS_PRD_VAL_6 INT,
	@V_ALT_WAIT_DIS_PRD_VAL_7 INT,
	@V_ALT_WAIT_DIS_PRD_VAL_8 INT,
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE VARCHAR(207),
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_1 VARCHAR(25),
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_2 VARCHAR(25),
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_3 VARCHAR(25),
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_4 VARCHAR(25),
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_5 VARCHAR(25),
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_6 VARCHAR(25),
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_7 VARCHAR(25),
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_8 VARCHAR(25),
	@V_ALT_WAIT_DIS_PRD_TYPE VARCHAR(207),
	@V_ALT_WAIT_DIS_PRD_TYPE_1 VARCHAR(25),
	@V_ALT_WAIT_DIS_PRD_TYPE_2 VARCHAR(25),
	@V_ALT_WAIT_DIS_PRD_TYPE_3 VARCHAR(25),
	@V_ALT_WAIT_DIS_PRD_TYPE_4 VARCHAR(25),
	@V_ALT_WAIT_DIS_PRD_TYPE_5 VARCHAR(25),
	@V_ALT_WAIT_DIS_PRD_TYPE_6 VARCHAR(25),
	@V_ALT_WAIT_DIS_PRD_TYPE_7 VARCHAR(25),
	@V_ALT_WAIT_DIS_PRD_TYPE_8 VARCHAR(25),
	@V_WAGES_FROM VARCHAR(175),
	@V_WAGES_FROM_1 DECIMAL(20,2),		
	@V_WAGES_FROM_2 DECIMAL(20,2),
	@V_WAGES_FROM_3 DECIMAL(20,2),
	@V_WAGES_FROM_4 DECIMAL(20,2),
	@V_WAGES_FROM_5 DECIMAL(20,2),
	@V_WAGES_FROM_6 DECIMAL(20,2),
	@V_WAGES_FROM_7 DECIMAL(20,2),
	@V_WAGES_FROM_8 DECIMAL(20,2),
	@V_WAGES_TO VARCHAR(175),
	@V_WAGES_TO_1 DECIMAL(20,2),
	@V_WAGES_TO_2 DECIMAL(20,2),
	@V_WAGES_TO_3 DECIMAL(20,2),
	@V_WAGES_TO_4 DECIMAL(20,2),
	@V_WAGES_TO_5 DECIMAL(20,2),
	@V_WAGES_TO_6 DECIMAL(20,2),
	@V_WAGES_TO_7 DECIMAL(20,2),
	@V_WAGES_TO_8 DECIMAL(20,2),
	@V_WEEKLY_BENEFIT VARCHAR(175),
	@V_WEEKLY_BENEFIT_1 DECIMAL(20,2),
	@V_WEEKLY_BENEFIT_2 DECIMAL(20,2),
	@V_WEEKLY_BENEFIT_3 DECIMAL(20,2),
	@V_WEEKLY_BENEFIT_4 DECIMAL(20,2),
	@V_WEEKLY_BENEFIT_5 DECIMAL(20,2),
	@V_WEEKLY_BENEFIT_6 DECIMAL(20,2),
	@V_WEEKLY_BENEFIT_7 DECIMAL(20,2),
	@V_WEEKLY_BENEFIT_8 DECIMAL(20,2),		
	@V_DAY30_WORK_MONTH_FLAG VARCHAR(1),
	@V_ACTUAL_MONTH_FLAG VARCHAR(1),
	@V_UPPER_AGE_LIMIT INT,
	@V_LOWER_AGE_LIMIT INT,
	@V_SUPP_PERCENT DECIMAL(20,2),	
	@V_SUPP_FLAT_AMT DECIMAL(20,2),	
	@V_SUPP_BANK_ACC_NAME VARCHAR(50),
	@V_SUPP_SUB_ACC_NAME VARCHAR(50),
	@V_SUPP_TR_TYPE_CODE VARCHAR(25),
	@V_SUPP_SEP_PAY_FLAG VARCHAR(1),
	@V_PENSION_AMT DECIMAL(20,2),	
	@V_SS_AMT DECIMAL(20,2),	
	@V_OTHER_AMT DECIMAL(20,2),	
	@V_PRORATE_OFF_FLAG VARCHAR(1),
	@V_FULLPAY_ONLY_FLAG VARCHAR(1)

	-- CODE_ID VARIABLES
	DECLARE 
	@V_BENE_PRD_TYPE_ID INT,
	@V_BENE_FROM_DT_TYPE_ID INT,
	@V_DIS_CLNDR_WRK_TYPE_ID INT,
	@V_DIS_PRD_TYPE_ID INT,
	@V_DIS_MAX_PRD_TYPE_ID INT,
	@V_FROM_DIS_PRD_TYPE_ID INT,
	@V_EXTEND_PRD_TYPE_ID INT,
	@V_MAX_TOT_PRD_TYPE_ID INT,
	@V_BENE_BASED_TYPE_ID INT,
	@V_SUPP_TR_TYPE_CODE_ID INT,

	@V_ALT_WAIT_DIS_TYPE_ID_1 INT,
	@V_ALT_WAIT_DIS_TYPE_ID_2 INT,
	@V_ALT_WAIT_DIS_TYPE_ID_3 INT,
	@V_ALT_WAIT_DIS_TYPE_ID_4 INT,
	@V_ALT_WAIT_DIS_TYPE_ID_5 INT,
	@V_ALT_WAIT_DIS_TYPE_ID_6 INT,
	@V_ALT_WAIT_DIS_TYPE_ID_7 INT,
	@V_ALT_WAIT_DIS_TYPE_ID_8 INT,

	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_1 INT,
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_2 INT,
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_3 INT,
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_4 INT,
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_5 INT,
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_6 INT,
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_7 INT,
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_8 INT,

	@V_ALT_WAIT_DIS_PRD_TYPE_ID_1 INT,
	@V_ALT_WAIT_DIS_PRD_TYPE_ID_2 INT,
	@V_ALT_WAIT_DIS_PRD_TYPE_ID_3 INT,
	@V_ALT_WAIT_DIS_PRD_TYPE_ID_4 INT,
	@V_ALT_WAIT_DIS_PRD_TYPE_ID_5 INT,
	@V_ALT_WAIT_DIS_PRD_TYPE_ID_6 INT,
	@V_ALT_WAIT_DIS_PRD_TYPE_ID_7 INT,
	@V_ALT_WAIT_DIS_PRD_TYPE_ID_8 INT,
	
	@V_ALT_WAIT_DIS_TYPE_ID INT,
	@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID INT,
	@V_ALT_WAIT_DIS_PRD_TYPE_ID INT,
				
	----FLAG ID VARIABLES
	@V_ALLOW_EXT_FLAG_ID INT,
	@V_ACTUAL_WORK_WEEK_FLAG_ID INT,
	@V_DAY7_WORK_WEEK_FLAG_ID INT,
	@V_DAY5_WORK_WEEK_FLAG_ID INT,
	@V_OTHER_WORK_WEEK_FLAG_ID INT,
	@V_BENE_PRCTG_FLAG_ID INT,
	@V_BENE_FLAT_AMT_FLAG_ID INT,
	@V_BENE_TD_FLAG_ID INT,
	@V_WITHHOLD_FED_ITAX_FLAG_ID INT,
	@V_WITHHOLD_FICA_FLAG_ID INT,
	@V_WITHHOLD_MEDICARE_FLAG_ID INT,
	@V_WITHHOLD_STATE_FLAG_ID INT,
	@V_USE_VOUCHERS_FLAG_ID INT,
	@V_DAY30_WORK_MONTH_FLAG_ID INT,
	@V_ACTUAL_MONTH_FLAG_ID INT,
	@V_SUPP_SEP_PAY_FLAG_ID INT,
	@V_PRORATE_OFF_FLAG_ID INT,
	@V_FULLPAY_ONLY_FLAG_ID INT,

	--- Other Local Variables
	@V_ERRORLOC VARCHAR(20),
	@V_CLASSROW_ID  INT = 0,
	@V_PLAN_ID  INT,
	@V_TAXFLAGS  INT,
	@V_DIS_TYPE_ID INT,
	@V_INSERTPLANINFO INT = 0,
	@V_EMP_PERSON INT = 0,
	@V_TABLE_ID INT = 0,
	@V_ROW_ID INT = 0

	DECLARE @V_ROWCOUNT  INT = 0 ,
	@V_CODE_ID_R INT  = 0 ,
	@V_CODE_ID_RMDB INT = 0,
	@V_MODULENAME VARCHAR(100) = 'STD_CLASS',
	@V_DBNAME  VARCHAR(255),
	@V_ERRORLOCATION NVARCHAR(MAX),
	@V_SQL  NVARCHAR(MAX),
	@V_PROCNAME  VARCHAR(30) = 'DDS_STD_CLASS',
	@V_TABLE_NAME  VARCHAR(30) = 'DDS_STD_CLASS',
	@V_DDSUSER  VARCHAR(6) = 'DA DDS',
	@V_ERRORCOUNT  INT = 0 ,
	@V_ENTITY_ID  INT = 0 ,
	@V_DEPT_ID  INT = 0 ,
	@V_ENTITY_TABLE_ID  INT = 0 ,
	@V_ABBREVIATION  VARCHAR(25) = NULL,
	@V_DELETED_FLAG  INT = 0 ,
	@V_SYS_TABLE_NAME  VARCHAR(30) = NULL,
	@VSQLINSERT NVARCHAR(MAX),
	@VSQLUPDATE NVARCHAR(MAX),
	@V_DATETIME VARCHAR(14),
	@V_ERROR_MESSAGE NVARCHAR(MAX),
	@V_PARM_NAME VARCHAR(255),
	@TOTALROWS INT,
	@V_CODEFIELDS VARCHAR(MAX),
	@V_SYSTEMTABLENAME VARCHAR(MAX),
	@V_TABLENAME VARCHAR(30),
	@V_SUPP_ERROR_COUNT INT = 0,
	@V_BANK_ACC_ID INT = 0,
	@V_SUB_ACC_ROW_ID INT = 0,
	@V_PREF_DAY_OF_M_CODE_ID INT = 0,
	@V_TYPE_OF_MONTH_PAY INT = 0,
	@vReqColumns  VARCHAR(MAX),
	@vReqColumns1  VARCHAR(MAX),
	@vReqColumns2  VARCHAR(MAX),
	@vReqColumns3  VARCHAR(MAX),
	@ILEN  INT = 0,
	@vColName	  VARCHAR(100),
	@vColName1	  VARCHAR(100),
	@vColName2	  VARCHAR(100),
	@vColName3	  VARCHAR(100),
	@vColName4	  VARCHAR(100),
	@V_VAL		  VARCHAR(MAX),
	@V_INSURED_EID_RMDB INT = 0,
	@V_NEWINSURED INT = 0,
	@V_CHECK_DIS_CLASS_WAIT INT = 0,
	@V_CHECK_DIS_CLASS_TD INT = 0,
	@V_FLAG_ID INT = 0,
	@V_CLAIM_LOB INT = 844,
	@V_CLASS_ROW_ID INT = 0,
	@V_NEWCLASS INT = 0,
	@V_WAIT_ROW_ID INT = 0,
	@V_WAGES_FROM_VAL DECIMAL(20,2),
	@V_WAGES_TO_VAL DECIMAL(20,2),
	@V_WEEKLY_BENEFIT_VAL DECIMAL(20,2),
	@V_TD_ROW_ID INT = 0,
	--neha JIRA 33658 starts
	@iRunStatCnt int=1, 
	@vProcessMsg varchar(100),  
	@iRunCnt int=0,
	@iTotalRows int=0
	--neha JIRA 33658 ends 

	BEGIN TRY ---- FETCHING VALUES FROM DDS_OPTIONSET
		------------------------- FOR SQL db name has to be suffixed by dbo -----------------------------------------
		IF @P_DBName IS NOT NULL 
		BEGIN
		   SET @V_DBNAME = '[' + @P_DBNAME + '].DBO.';
		END
		----------------------------- Storing Values into Optionset variables ---------------------------------------
		SET @V_ERRORLOC = 'Z001'
			
		SET @V_SQL = 'SELECT @CheckCreateNewCodes = ALLOW_NEW_CODES, @CONFIG_ID = CONFIG_ID, @Valid_Start_Date = VALID_START_DATE, '
		SET @V_SQL = @V_SQL + '@Valid_End_Date = VALID_END_DATE '
		SET @V_SQL = @V_SQL + 'FROM DDS_OPTIONSET WHERE JOBID = @P_JOBID'

		Exec sp_Executesql @V_SQL,
		N'@CheckCreateNewCodes INT OUTPUT,
		@CONFIG_ID INT OUTPUT,	
		@Valid_Start_Date VARCHAR(8) OUTPUT, 
		@Valid_End_Date VARCHAR(8) OUTPUT, 
		@P_JOBID INT',
		@CheckCreateNewCodes = @CheckCreateNewCodes OUTPUT,
		@CONFIG_ID = @CONFIG_ID OUTPUT,	
		@Valid_Start_Date = @Valid_Start_Date OUTPUT, 
		@Valid_End_Date = @Valid_End_Date OUTPUT, 
		@P_JOBID = @P_JOBID;


		IF @Valid_Start_Date IS NULL 
		BEGIN
			EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,
			'Please select Valid Date Range from Optionset screen.','JOB_ID', 'DDS_OPTIONSET', 'JOB_ID', @P_JOBID, 1
			GOTO ENDMAIN
		END
		
	END TRY
	BEGIN CATCH
		SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
		EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,@V_ERROR_MESSAGE,'EXCEPTION', @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,0
		SET @V_ROWCOUNT = @V_ROWCOUNT + 1;
	END CATCH
	
	BEGIN TRY ---- FETCHING TOTAL ROWS FROM DDS_STD_PLAN
		SET @V_ERRORLOC = 'Z002'
		SET @V_SQL = 'SELECT @TOTALROWS = COUNT(DA_ROW_ID) FROM DDS_STD_CLASS WHERE JOBID = @P_JOBID AND INVALID_ROW = 1'; 

		Exec sp_Executesql @V_SQL,
		N' @TOTALROWS INT OUTPUT,
		@P_JOBID INT',
		@TOTALROWS = @TOTALROWS OUTPUT,
		@P_JOBID = @P_JOBID;
		
		----PRINT '@TOTALROWS: ' + CAST (@TOTALROWS AS VARCHAR(10));
	END TRY
	BEGIN CATCH
		SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
		EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME, @V_ERROR_MESSAGE,'EXCEPTION', @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,0
		SET @V_ROWCOUNT = @V_ROWCOUNT + 1;
	END CATCH

	SET @iTotalRows=@TOTALROWS --neha 33658
	----------------------------- Fetching PLAN Records For Validation----------------------------------------------------
	SET @V_ERRORLOC = 'Z003'		

	DECLARE DDS_STD_CLASS_CUR CURSOR FOR  ------ DECLARING CURSOR	
	SELECT * 
	FROM DDS_STD_CLASS
	WHERE JOBID = @P_JOBID AND INVALID_ROW = 1 ; 

	OPEN DDS_STD_CLASS_CUR;  ---- OPENING CURSOR

	FETCH NEXT FROM DDS_STD_CLASS_CUR
	INTO 	
@V_DA_ROW_ID,
@P_JOBID,
@V_INVALID_ROW,	
@V_CLASS_NAME,
@V_CLASS_DESC,
@V_PLAN_NUMBER,
@V_ELIG_BENE_PRD,
@V_BENE_PRD_TYPE,
@V_BENE_FROM_DT_TYPE,
@V_DIS_WAIT_PRD,
@V_DIS_CLNDR_WRK_TYPE,
@V_DIS_PRD_TYPE,
@V_DIS_MAX_PRD,
@V_DIS_MAX_PRD_TYPE,
@V_FROM_DIS_PRD_TYPE,
@V_ALLOW_EXT,
@V_EXTEND_PRD,
@V_EXTEND_PRD_TYPE,
@V_MAX_TOT_DIS_PRD,
@V_MAX_TOT_PRD_TYPE,
@V_ACTUAL_WORK_WEEK_FLAG,
@V_DAY7_WORK_WEEK_FLAG,
@V_DAY5_WORK_WEEK_FLAG,
@V_OTHER_WORK_WEEK_FLAG,
@V_OTHER_DAYS,
@V_BENE_PRCTG_FLAG,
@V_BENE_PER_AMT,
@V_BENE_FLAT_AMT_FLAG,
@V_BENE_FLAT_AMT,
@V_BENE_TD_FLAG,
@V_BENE_BASED_TYPE,
@V_WITHHOLD_FED_ITAX_FLAG,
@V_WITHHOLD_FICA_FLAG,
@V_WEEKLY_BENE_CAP,
@V_MAX_BEN_PER_CLAIM,
@V_MAX_BEN_PER_CAL_YR,
@V_WAGE_FOR_DIS_PRD,
@V_WAGE_FOR_CAL_YR ,
@V_TAXABLE_PERCENT ,
@V_WITHHOLD_MEDICARE_FLAG,
@V_WITHHOLD_STATE_FLAG,
@V_USE_VOUCHERS_FLAG,
@V_ALT_WAIT_DIS_TYPE,
@V_ALT_WAIT_DIS_TYPE_1,
@V_ALT_WAIT_DIS_TYPE_2,
@V_ALT_WAIT_DIS_TYPE_3,
@V_ALT_WAIT_DIS_TYPE_4,
@V_ALT_WAIT_DIS_TYPE_5,
@V_ALT_WAIT_DIS_TYPE_6,
@V_ALT_WAIT_DIS_TYPE_7,
@V_ALT_WAIT_DIS_TYPE_8,
@V_ALT_WAIT_DIS_PRD,
@V_ALT_WAIT_DIS_PRD_VAL_1,
@V_ALT_WAIT_DIS_PRD_VAL_2,
@V_ALT_WAIT_DIS_PRD_VAL_3,
@V_ALT_WAIT_DIS_PRD_VAL_4,
@V_ALT_WAIT_DIS_PRD_VAL_5,
@V_ALT_WAIT_DIS_PRD_VAL_6,
@V_ALT_WAIT_DIS_PRD_VAL_7,
@V_ALT_WAIT_DIS_PRD_VAL_8,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_1,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_2,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_3,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_4,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_5,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_6,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_7,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_8,
@V_ALT_WAIT_DIS_PRD_TYPE,
@V_ALT_WAIT_DIS_PRD_TYPE_1,
@V_ALT_WAIT_DIS_PRD_TYPE_2,
@V_ALT_WAIT_DIS_PRD_TYPE_3,
@V_ALT_WAIT_DIS_PRD_TYPE_4,
@V_ALT_WAIT_DIS_PRD_TYPE_5,
@V_ALT_WAIT_DIS_PRD_TYPE_6,
@V_ALT_WAIT_DIS_PRD_TYPE_7,
@V_ALT_WAIT_DIS_PRD_TYPE_8,
@V_WAGES_FROM,
@V_WAGES_FROM_1,
@V_WAGES_FROM_2,
@V_WAGES_FROM_3,
@V_WAGES_FROM_4,
@V_WAGES_FROM_5,
@V_WAGES_FROM_6,
@V_WAGES_FROM_7,
@V_WAGES_FROM_8,
@V_WAGES_TO,
@V_WAGES_TO_1,
@V_WAGES_TO_2,
@V_WAGES_TO_3,
@V_WAGES_TO_4,
@V_WAGES_TO_5,
@V_WAGES_TO_6,
@V_WAGES_TO_7,
@V_WAGES_TO_8,
@V_WEEKLY_BENEFIT,
@V_WEEKLY_BENEFIT_1,
@V_WEEKLY_BENEFIT_2,
@V_WEEKLY_BENEFIT_3,
@V_WEEKLY_BENEFIT_4,
@V_WEEKLY_BENEFIT_5,
@V_WEEKLY_BENEFIT_6,
@V_WEEKLY_BENEFIT_7,
@V_WEEKLY_BENEFIT_8,
@V_DAY30_WORK_MONTH_FLAG,
@V_ACTUAL_MONTH_FLAG,
@V_UPPER_AGE_LIMIT,
@V_LOWER_AGE_LIMIT,
@V_SUPP_PERCENT,
@V_SUPP_FLAT_AMT,
@V_SUPP_BANK_ACC_NAME,
@V_SUPP_SUB_ACC_NAME,
@V_SUPP_TR_TYPE_CODE,
@V_SUPP_SEP_PAY_FLAG,
@V_PENSION_AMT,
@V_SS_AMT,
@V_OTHER_AMT,
@V_PRORATE_OFF_FLAG,
@V_FULLPAY_ONLY_FLAG	
	
	WHILE @TOTALROWS <> 0
	BEGIN

		----************** INITIALIZATION OF VARIABLES ******************
		SET @V_ERRORLOC = 0
		SET @V_CLASSROW_ID   = 0
		SET @V_PLAN_ID  = 0
		SET @V_TAXFLAGS  = 0
		SET @V_DIS_TYPE_ID = 0
		SET @V_INSERTPLANINFO  = 0
		SET @V_EMP_PERSON  = 0
		SET @V_TABLE_ID  = 0
		SET @V_ROW_ID  = 0
		SET @V_ROWCOUNT   = 0 
		SET @V_CODE_ID_R   = 0 
		SET @V_CODE_ID_RMDB  = 0
		SET @V_ERRORCOUNT   = 0 
		SET @V_ENTITY_ID   = 0 
		SET @V_DEPT_ID   = 0 
		SET @V_ENTITY_TABLE_ID   = 0 
		SET @V_ABBREVIATION  = 0
		SET @V_DELETED_FLAG   = 0 
		SET @V_SYS_TABLE_NAME = 0
		SET @V_DATETIME = 0
		SET @V_SUPP_ERROR_COUNT = 0
		SET @vColName1 = NULL
		SET @vReqColumns = NULL
		SET @vReqColumns2 = NULL
		SET @vReqColumns3 = NULL
		SET @vColName2 = NULL
		SET @vColName3 = NULL
		SET @vColName4 = NULL
		SET @vReqColumns1 = NULL
		SET @V_INSURED_EID_RMDB = 0
	    SET @V_NEWINSURED = 0
		SET @V_CHECK_DIS_CLASS_WAIT = 0
		SET @V_CHECK_DIS_CLASS_TD = 0
		SET @V_FLAG_ID = 0
		SET @V_ALT_WAIT_DIS_PRD_VAL = 0
		SET @V_WAGES_FROM_VAL  = 0
		SET @V_WAGES_TO_VAL = 0
		SET @V_WEEKLY_BENEFIT_VAL  = 0

		SET @V_ALT_WAIT_DIS_TYPE_ID_1 = 0
		SET @V_ALT_WAIT_DIS_TYPE_ID_2 = 0
		SET @V_ALT_WAIT_DIS_TYPE_ID_3 = 0
		SET @V_ALT_WAIT_DIS_TYPE_ID_4 = 0
		SET @V_ALT_WAIT_DIS_TYPE_ID_5 = 0
		SET @V_ALT_WAIT_DIS_TYPE_ID_6 = 0
		SET @V_ALT_WAIT_DIS_TYPE_ID_7 = 0
		SET @V_ALT_WAIT_DIS_TYPE_ID_8 = 0

		SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_1 = 0
		SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_2 = 0
		SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_3 = 0
		SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_4 = 0
		SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_5 = 0
		SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_6 = 0
		SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_7 = 0
		SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_8 = 0

		SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_1 = 0
		SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_2 = 0
		SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_3 = 0
		SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_4 = 0
		SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_5 = 0
		SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_6 = 0
		SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_7 = 0
		SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_8 = 0
		SET @V_CLASS_ROW_ID = 0

		BEGIN TRY	--********* REQUIRED FIELD VALIDATION STARTS **********************************************
			SET @V_ERRORLOC = 'V001'
			SET @vReqColumns = 'PLAN_NUMBER|CLASS_NAME|'

			WHILE CHARINDEX('|',@vReqColumns,1) > 0		--CHECK FOR REQUIRED COLUMNS NULL IN IMPORT FILE
			BEGIN

				SET @vColName1 = LEFT(@vReqColumns,CHARINDEX('|',@vReqColumns,1) - 1)
				SET @vReqColumns = RIGHT(@vReqColumns,LEN(@vReqColumns) - CHARINDEX('|',@vReqColumns,1))

				SET @V_VAL = ( CASE 
				WHEN @vColName1 = 'PLAN_NUMBER' THEN @V_PLAN_NUMBER 
				WHEN @vColName1 = 'CLASS_NAME' THEN @V_CLASS_NAME 
				END )

				IF @V_VAL IS NULL
				BEGIN
					EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,'Required Fields are Null or Empty.',@vColName1, @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,1
					SET @V_ERRORCOUNT = @V_ERRORCOUNT + 1;	
				END
			END
		END TRY
		BEGIN CATCH
			SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
			EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,@V_ERROR_MESSAGE,'EXCEPTION', @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,0;
			SET @V_ROWCOUNT = @V_ROWCOUNT + 1;
		END CATCH --***************** REQUIRED FIELD VALIDATION ENDS ******************************************

		
		BEGIN TRY	----***************** SHORT CODE FIELDS VALIDATION STARTS *********************************
			SET @V_ERRORLOC = 'V002'
			
			SET @V_CODEFIELDS = 'BENE_PRD_TYPE|BENE_FROM_DT_TYPE|DIS_CLNDR_WRK_TYPE|DIS_PRD_TYPE|DIS_MAX_PRD_TYPE|FROM_DIS_PRD_TYPE|EXTEND_PRD_TYPE|MAX_TOT_PRD_TYPE|BENE_BASED_TYPE|SUPP_TR_TYPE_CODE|'
			SET @V_CODEFIELDS = @V_CODEFIELDS + 'ALT_WAIT_DIS_TYPE_1|ALT_WAIT_DIS_TYPE_2|ALT_WAIT_DIS_TYPE_3|ALT_WAIT_DIS_TYPE_4|ALT_WAIT_DIS_TYPE_5|ALT_WAIT_DIS_TYPE_6|ALT_WAIT_DIS_TYPE_7|ALT_WAIT_DIS_TYPE_8|'
			SET @V_CODEFIELDS = @V_CODEFIELDS + 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_1|ALT_WAIT_DIS_CLNDR_WRK_TYPE_2|ALT_WAIT_DIS_CLNDR_WRK_TYPE_3|ALT_WAIT_DIS_CLNDR_WRK_TYPE_4|ALT_WAIT_DIS_CLNDR_WRK_TYPE_5|ALT_WAIT_DIS_CLNDR_WRK_TYPE_6|ALT_WAIT_DIS_CLNDR_WRK_TYPE_7|ALT_WAIT_DIS_CLNDR_WRK_TYPE_8|'
			SET @V_CODEFIELDS = @V_CODEFIELDS + 'ALT_WAIT_DIS_PRD_TYPE_1|ALT_WAIT_DIS_PRD_TYPE_2|ALT_WAIT_DIS_PRD_TYPE_3|ALT_WAIT_DIS_PRD_TYPE_4|ALT_WAIT_DIS_PRD_TYPE_5|ALT_WAIT_DIS_PRD_TYPE_6|ALT_WAIT_DIS_PRD_TYPE_7|ALT_WAIT_DIS_PRD_TYPE_8|'

			SET @V_SYSTEMTABLENAME = 'DURATION_TYPE|HIRED_PERIOD_TYPE|CALENDAR_WORK|DURATION_TYPE|DURATION_TYPE|BENE_START_PERIOD|DURATION_TYPE|DURATION_TYPE|RATE_TYPE|TRANS_TYPES|'
			SET @V_SYSTEMTABLENAME = @V_SYSTEMTABLENAME + 'BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|BENEFIT_DIS_TYPE|'
			SET @V_SYSTEMTABLENAME = @V_SYSTEMTABLENAME + 'CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|CALENDAR_WORK|'
			SET @V_SYSTEMTABLENAME = @V_SYSTEMTABLENAME + 'DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|DURATION_TYPE|'

			WHILE CHARINDEX('|',@V_CODEFIELDS,1) > 0		--CHECK FOR CODE ID EXISTENCE AND THEIR CREATIONS
			BEGIN

				SET @VCOLNAME1 = LEFT(@V_CODEFIELDS,CHARINDEX('|',@V_CODEFIELDS,1) - 1)
				SET @V_CODEFIELDS = RIGHT(@V_CODEFIELDS,LEN(@V_CODEFIELDS) - CHARINDEX('|',@V_CODEFIELDS,1))
		

				SET @V_TABLENAME = LEFT(@V_SYSTEMTABLENAME,CHARINDEX('|',@V_SYSTEMTABLENAME,1) - 1)
				SET @V_SYSTEMTABLENAME = RIGHT(@V_SYSTEMTABLENAME,LEN(@V_SYSTEMTABLENAME) - CHARINDEX('|',@V_SYSTEMTABLENAME,1))

				SET @V_VAL =( CASE 
				WHEN @VCOLNAME1 = 'BENE_PRD_TYPE' THEN @V_BENE_PRD_TYPE
				WHEN @VCOLNAME1 = 'BENE_FROM_DT_TYPE' THEN @V_BENE_FROM_DT_TYPE
				WHEN @VCOLNAME1 = 'DIS_CLNDR_WRK_TYPE' THEN @V_DIS_CLNDR_WRK_TYPE
				WHEN @VCOLNAME1 = 'DIS_PRD_TYPE' THEN @V_DIS_PRD_TYPE			
				WHEN @VCOLNAME1 = 'DIS_MAX_PRD_TYPE' THEN @V_DIS_MAX_PRD_TYPE
				WHEN @VCOLNAME1 = 'FROM_DIS_PRD_TYPE' THEN @V_FROM_DIS_PRD_TYPE
				WHEN @VCOLNAME1 = 'EXTEND_PRD_TYPE' THEN @V_EXTEND_PRD_TYPE
				WHEN @VCOLNAME1 = 'MAX_TOT_PRD_TYPE' THEN @V_MAX_TOT_PRD_TYPE
				WHEN @VCOLNAME1 = 'BENE_BASED_TYPE' THEN @V_BENE_BASED_TYPE
				WHEN @VCOLNAME1 = 'SUPP_TR_TYPE_CODE' THEN @V_SUPP_TR_TYPE_CODE
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_1' THEN @V_ALT_WAIT_DIS_TYPE_1
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_2' THEN @V_ALT_WAIT_DIS_TYPE_2
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_3' THEN @V_ALT_WAIT_DIS_TYPE_3
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_4' THEN @V_ALT_WAIT_DIS_TYPE_4
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_5' THEN @V_ALT_WAIT_DIS_TYPE_5
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_6' THEN @V_ALT_WAIT_DIS_TYPE_6
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_7' THEN @V_ALT_WAIT_DIS_TYPE_7
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_8' THEN @V_ALT_WAIT_DIS_TYPE_8
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_1' THEN @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_1
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_2' THEN @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_2
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_3' THEN @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_3
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_4' THEN @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_4
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_5' THEN @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_5
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_6' THEN @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_6
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_7' THEN @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_7
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_8' THEN @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_8
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_1' THEN @V_ALT_WAIT_DIS_PRD_TYPE_1
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_2' THEN @V_ALT_WAIT_DIS_PRD_TYPE_2
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_3' THEN @V_ALT_WAIT_DIS_PRD_TYPE_3
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_4' THEN @V_ALT_WAIT_DIS_PRD_TYPE_4
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_5' THEN @V_ALT_WAIT_DIS_PRD_TYPE_5
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_6' THEN @V_ALT_WAIT_DIS_PRD_TYPE_6
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_7' THEN @V_ALT_WAIT_DIS_PRD_TYPE_7
				WHEN @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_8' THEN @V_ALT_WAIT_DIS_PRD_TYPE_8
				END )
			
				----PRINT 'CODE CHECK BEGINS'
				----PRINT @V_VAL
				IF @V_VAL IS NOT NULL 
				BEGIN
						----PRINT 'CODE CHECK BEGINS2'
					EXECUTE DDS_CODE_VALIDATION_IMPORT 
					@p_JOBID = @P_JOBID, 
					@P_SHORT_CODE = @V_VAL, 
					@P_SYS_TABLE_NAME = @V_TABLENAME, 
					@P_CODE_CREATION_FLAG = @CheckCreateNewCodes, 
					@P_DB_NAME = @V_DBNAME, 
					@P_LOB = @V_CLAIM_LOB, 
					@p_DA_ROW_ID = @V_DA_ROW_ID,
					@p_MODULE_NAME = @V_MODULENAME, 
					@p_ERROR_LOCATION = @V_ERRORLOC, 
					@p_ERROR_PROC_NAME = @V_PROCNAME, 
					@p_ERROR_KEY_COLUMN = 'PLAN_NUMBER', 
					@p_ERROR_COLUMN = @VCOLNAME1, 
					@p_ERROR_TABLE_TO_CHECK = @V_TABLE_NAME, 
					@P_ERROR_COLUMN_KEY_VALUE = @V_PLAN_NUMBER, 
					@P_CODE_ID_R = @V_CODE_ID_R OUTPUT

					IF @V_CODE_ID_R = 0 OR @V_CODE_ID_R IS NULL
					BEGIN
						SET @V_ERRORCOUNT = @V_ERRORCOUNT + 1;
					END

					IF @VCOLNAME1 = 'BENE_PRD_TYPE' SET @V_BENE_PRD_TYPE_ID = @V_CODE_ID_R	
					ELSE IF @VCOLNAME1 = 'BENE_FROM_DT_TYPE' SET @V_BENE_FROM_DT_TYPE_ID = @V_CODE_ID_R
					ELSE IF @VCOLNAME1 = 'DIS_CLNDR_WRK_TYPE' SET @V_DIS_CLNDR_WRK_TYPE_ID = @V_CODE_ID_R
					ELSE IF @VCOLNAME1 = 'DIS_PRD_TYPE' SET @V_DIS_PRD_TYPE_ID = @V_CODE_ID_R
					ELSE IF @VCOLNAME1 = 'DIS_MAX_PRD_TYPE' SET @V_DIS_MAX_PRD_TYPE_ID = @V_CODE_ID_R
					ELSE IF @VCOLNAME1 = 'FROM_DIS_PRD_TYPE' SET @V_FROM_DIS_PRD_TYPE_ID = @V_CODE_ID_R
					ELSE IF @VCOLNAME1 = 'EXTEND_PRD_TYPE' SET @V_EXTEND_PRD_TYPE_ID = @V_CODE_ID_R
					ELSE IF @VCOLNAME1 = 'MAX_TOT_PRD_TYPE' SET @V_MAX_TOT_PRD_TYPE_ID = @V_CODE_ID_R
					ELSE IF @VCOLNAME1 = 'BENE_BASED_TYPE' SET @V_BENE_BASED_TYPE_ID = @V_CODE_ID_R
					ELSE IF @VCOLNAME1 = 'SUPP_TR_TYPE_CODE' SET @V_SUPP_TR_TYPE_CODE_ID = @V_CODE_ID_R
				
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_1' SET @V_ALT_WAIT_DIS_TYPE_ID_1 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_2' SET @V_ALT_WAIT_DIS_TYPE_ID_2 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_3' SET @V_ALT_WAIT_DIS_TYPE_ID_3 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_4' SET @V_ALT_WAIT_DIS_TYPE_ID_4 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_5' SET @V_ALT_WAIT_DIS_TYPE_ID_5 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_6' SET @V_ALT_WAIT_DIS_TYPE_ID_6 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_7' SET @V_ALT_WAIT_DIS_TYPE_ID_7 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_TYPE_8' SET @V_ALT_WAIT_DIS_TYPE_ID_8 = @V_CODE_ID_R							
				
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_1' SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_1 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_2' SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_2 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_3' SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_3 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_4' SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_4 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_5' SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_5 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_6' SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_6 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_7' SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_7 = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_CLNDR_WRK_TYPE_8' SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_8 = @V_CODE_ID_R	
										
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_1' SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_1  = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_2' SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_2  = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_3' SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_3  = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_4' SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_4  = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_5' SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_5  = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_6' SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_6  = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_7' SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_7  = @V_CODE_ID_R							
					ELSE IF @VCOLNAME1 = 'ALT_WAIT_DIS_PRD_TYPE_8' SET @V_ALT_WAIT_DIS_PRD_TYPE_ID_8  = @V_CODE_ID_R							

					SET @V_CODE_ID_R = NULL
				END
			 END
		END TRY
		BEGIN CATCH
				SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
				EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,@V_ERROR_MESSAGE,'EXCEPTION', @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,0;
				SET @V_ROWCOUNT = @V_ROWCOUNT + 1
		END CATCH ----***************** SHORT CODE FIELDS VALIDATION ENDS *******************************************

		BEGIN TRY	----***************** FLAG INITIALIZATION STARTS ******************************************
			SET @V_ERRORLOC = 'V003'
		
			SET @vReqColumns = 'ACTUAL_WORK_WEEK_FLAG|DAY7_WORK_WEEK_FLAG|DAY5_WORK_WEEK_FLAG|OTHER_WORK_WEEK_FLAG|BENE_PRCTG_FLAG|' 
			SET @vReqColumns = @vReqColumns + 'BENE_FLAT_AMT_FLAG|BENE_TD_FLAG|WITHHOLD_FED_ITAX_FLAG|WITHHOLD_FICA_FLAG|WITHHOLD_MEDICARE_FLAG|' 
			SET @vReqColumns = @vReqColumns + 'WITHHOLD_STATE_FLAG|USE_VOUCHERS_FLAG|DAY30_WORK_MONTH_FLAG|ACTUAL_MONTH_FLAG|SUPP_SEP_PAY_FLAG|'
			SET @vReqColumns = @vReqColumns + 'PRORATE_OFF_FLAG|FULLPAY_ONLY_FLAG|ALLOW_EXT|'
		

			WHILE CHARINDEX('|',@vReqColumns,1) > 0	
			BEGIN
				
				SET @vColName1 = LEFT(@vReqColumns,CHARINDEX('|',@vReqColumns,1) - 1)
				SET @vReqColumns = RIGHT(@vReqColumns,LEN(@vReqColumns) - CHARINDEX('|',@vReqColumns,1))

				SET @V_FLAG_ID = 0
				SET @V_VAL = NULL

				SET @V_VAL = ( CASE 
				WHEN @vColName1 = 'ACTUAL_WORK_WEEK_FLAG' THEN @V_ACTUAL_WORK_WEEK_FLAG
				WHEN @vColName1 = 'DAY7_WORK_WEEK_FLAG' THEN @V_DAY7_WORK_WEEK_FLAG
				WHEN @vColName1 = 'DAY5_WORK_WEEK_FLAG' THEN @V_DAY5_WORK_WEEK_FLAG
				WHEN @vColName1 = 'OTHER_WORK_WEEK_FLAG' THEN @V_OTHER_WORK_WEEK_FLAG
				WHEN @vColName1 = 'BENE_PRCTG_FLAG' THEN @V_BENE_PRCTG_FLAG
				WHEN @vColName1 = 'BENE_FLAT_AMT_FLAG' THEN @V_BENE_FLAT_AMT_FLAG
				WHEN @vColName1 = 'BENE_TD_FLAG' THEN @V_BENE_TD_FLAG 
				WHEN @vColName1 = 'WITHHOLD_FED_ITAX_FLAG' THEN @V_WITHHOLD_FED_ITAX_FLAG
				WHEN @vColName1 = 'WITHHOLD_FICA_FLAG' THEN @V_WITHHOLD_FICA_FLAG
				WHEN @vColName1 = 'WITHHOLD_MEDICARE_FLAG' THEN @V_WITHHOLD_MEDICARE_FLAG
				WHEN @vColName1 = 'WITHHOLD_STATE_FLAG' THEN @V_WITHHOLD_STATE_FLAG
				WHEN @vColName1 = 'USE_VOUCHERS_FLAG' THEN @V_USE_VOUCHERS_FLAG 
				WHEN @vColName1 = 'DAY30_WORK_MONTH_FLAG' THEN @V_DAY30_WORK_MONTH_FLAG
				WHEN @vColName1 = 'ACTUAL_MONTH_FLAG' THEN @V_ACTUAL_MONTH_FLAG
				WHEN @vColName1 = 'SUPP_SEP_PAY_FLAG' THEN @V_SUPP_SEP_PAY_FLAG
				WHEN @vColName1 = 'PRORATE_OFF_FLAG' THEN @V_PRORATE_OFF_FLAG
				WHEN @vColName1 = 'FULLPAY_ONLY_FLAG' THEN @V_FULLPAY_ONLY_FLAG
				WHEN @vColName1 = 'ALLOW_EXT' THEN @V_ALLOW_EXT
				END )
				
				IF @V_VAL IS NOT NULL
				BEGIN
					IF @V_VAL = 'Y'
						SET @V_FLAG_ID = -1
					ELSE IF @V_VAL = 'N' OR @V_VAL = '0' ---BY DEFAULT FLAG WILL BE 0
						SET @V_FLAG_ID = 0
					ELSE
					BEGIN
						EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME, 'Not a Valid Flag Value. Permitted Values are ''Y'' or ''N'' or ''0''.', @vColName1, @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,1
						SET @V_ERRORCOUNT = @V_ERRORCOUNT + 1;	
					 END
				END
			
				IF @VCOLNAME1 = 'ACTUAL_WORK_WEEK_FLAG' SET @V_ACTUAL_WORK_WEEK_FLAG_ID = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'DAY7_WORK_WEEK_FLAG' SET @V_DAY7_WORK_WEEK_FLAG_ID = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'DAY5_WORK_WEEK_FLAG' SET @V_DAY5_WORK_WEEK_FLAG_ID = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'OTHER_WORK_WEEK_FLAG' SET @V_OTHER_WORK_WEEK_FLAG_ID  = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'BENE_PRCTG_FLAG' SET @V_BENE_PRCTG_FLAG_ID  = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'BENE_FLAT_AMT_FLAG' SET @V_BENE_FLAT_AMT_FLAG_ID = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'BENE_TD_FLAG' SET @V_BENE_TD_FLAG_ID  = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'WITHHOLD_FED_ITAX_FLAG' SET @V_WITHHOLD_FED_ITAX_FLAG_ID  = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'WITHHOLD_FICA_FLAG' SET @V_WITHHOLD_FICA_FLAG_ID = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'WITHHOLD_MEDICARE_FLAG' SET @V_WITHHOLD_MEDICARE_FLAG_ID = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'WITHHOLD_STATE_FLAG' SET @V_WITHHOLD_STATE_FLAG_ID  = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'USE_VOUCHERS_FLAG' SET @V_USE_VOUCHERS_FLAG_ID  = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'DAY30_WORK_MONTH_FLAG' SET @V_DAY30_WORK_MONTH_FLAG_ID = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'ACTUAL_MONTH_FLAG' SET @V_ACTUAL_MONTH_FLAG_ID = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'SUPP_SEP_PAY_FLAG' SET @V_SUPP_SEP_PAY_FLAG_ID  = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'PRORATE_OFF_FLAG' SET @V_PRORATE_OFF_FLAG_ID  = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'FULLPAY_ONLY_FLAG' SET @V_FULLPAY_ONLY_FLAG_ID  = @V_FLAG_ID
				ELSE IF @VCOLNAME1 = 'ALLOW_EXT' SET @V_ALLOW_EXT_FLAG_ID  = @V_FLAG_ID

		END					
		END TRY
		BEGIN CATCH
			SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
			EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,@V_ERROR_MESSAGE,'EXCEPTION', @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,0;
			SET @V_ROWCOUNT = @V_ROWCOUNT + 1;
		END CATCH	--***************** FLAG INITIALIZATION ENDS *****************************************************

		--********************************** ERROR COUNT *******************************************************************************************
		SET @V_ERRORLOC = 'V004'
				
		IF @V_ERRORCOUNT + @V_ROWCOUNT > 0 SET @V_INVALID_ROW = 1
 
		ELSE IF (@V_ERRORCOUNT + @V_ROWCOUNT = 0) SET @V_INVALID_ROW = 0

		--********************************** ERROR COUNT ******************************************************************************************
			
								
		BEGIN TRY	---**************** CHECK IF AN EXISTING PLAN OR A NEW PLAN *******************************************************************
		IF @V_PLAN_NUMBER IS NOT NULL AND @V_INVALID_ROW = 0
		BEGIN
			SET @V_ERRORLOC = 'P001' 
			SET @V_SQL = 'SELECT @V_PLAN_ID = PLAN_ID FROM ' + @V_DBNAME + 'DISABILITY_PLAN WHERE PLAN_NUMBER = @V_PLAN_NUMBER'
			
			Exec sp_Executesql @V_SQL,
			N' @V_PLAN_ID INT OUTPUT,
			@V_PLAN_NUMBER VARCHAR(20)',
			@V_PLAN_ID = @V_PLAN_ID OUTPUT,
			@V_PLAN_NUMBER = @V_PLAN_NUMBER
		
			IF @V_PLAN_ID > 0	
			BEGIN

				SET @V_ERRORLOC = 'P002' 
				SET @V_SQL = 'SELECT @V_CLASS_ROW_ID = CLASS_ROW_ID FROM ' + @V_DBNAME + 'DISABILITY_CLASS WHERE PLAN_ID = @V_PLAN_ID AND CLASS_NAME = @V_CLASS_NAME'
			
				Exec sp_Executesql @V_SQL,
				N' @V_CLASS_ROW_ID INT OUTPUT,
				@V_PLAN_ID VARCHAR(20),
				@V_CLASS_NAME VARCHAR(20)',
				@V_CLASS_ROW_ID = @V_CLASS_ROW_ID OUTPUT,
				@V_PLAN_ID = @V_PLAN_ID,
				@V_CLASS_NAME = @V_CLASS_NAME

				IF @V_CLASS_ROW_ID > 0 SET @V_NEWCLASS = 0	--CLASS EXIST IN RISKMASTER DATABASE 
				ELSE IF @V_CLASS_ROW_ID = 0 SET @V_NEWCLASS = 1	--CLASS EXIST IN RISKMASTER DATABASE 

			END
			ELSE IF @V_PLAN_ID = 0
			BEGIN
				EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME, 'Disability Plan Number does not exists in Riskmaster.', 'PLAN_NUMBER', @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,1
				SET @V_ERRORCOUNT = @V_ERRORCOUNT + 1	
			END


			IF @V_SUPP_BANK_ACC_NAME IS NOT NULL
			BEGIN
				SET @V_ERRORLOC = 'P003' 
				SET @V_BANK_ACC_ID = 0
				SET @V_SQL = 'SELECT @V_BANK_ACC_ID = ACCOUNT_ID FROM ' + @V_DBNAME + 'ACCOUNT WHERE ACCOUNT_NAME = @V_SUPP_BANK_ACC_NAME'

				Exec sp_Executesql @V_SQL,
				N'@V_BANK_ACC_ID INT OUTPUT,
				@V_SUPP_BANK_ACC_NAME VARCHAR(20)',
				@V_BANK_ACC_ID = @V_BANK_ACC_ID OUTPUT,
				@V_SUPP_BANK_ACC_NAME = @V_SUPP_BANK_ACC_NAME

			END

			IF @V_SUPP_SUB_ACC_NAME IS NOT NULL
			BEGIN
				SET @V_ERRORLOC = 'P004' 
				SET  @V_SUB_ACC_ROW_ID = 0
				SET @V_SQL = 'SELECT @V_SUB_ACC_ROW_ID = SUB_ROW_ID FROM ' + @V_DBNAME + 'BANK_ACC_SUB WHERE SUB_ACC_NAME = @V_SUPP_SUB_ACC_NAME'
				
				Exec sp_Executesql @V_SQL,
				N'@V_SUB_ACC_ROW_ID INT OUTPUT,
				@V_SUPP_SUB_ACC_NAME VARCHAR(20)',
				@V_SUB_ACC_ROW_ID = @V_SUB_ACC_ROW_ID OUTPUT,
				@V_SUPP_SUB_ACC_NAME = @V_SUPP_SUB_ACC_NAME

			END
	 
			SET @V_ERRORLOC = 'P005'
			
			IF @V_ALT_WAIT_DIS_TYPE IS NOT NULL AND @V_ALT_WAIT_DIS_PRD IS NOT NULL AND @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE IS NOT NULL AND @V_ALT_WAIT_DIS_PRD_TYPE IS NOT NULL
			BEGIN
			
			SET @vReqColumns = @V_ALT_WAIT_DIS_TYPE + '|'

			SET @vReqColumns1 = @V_ALT_WAIT_DIS_PRD + '|'

			SET @vReqColumns2 = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE + '|'

			SET @vReqColumns3 = @V_ALT_WAIT_DIS_PRD_TYPE + '|'

				IF (LEN(@vReqColumns) - LEN(REPLACE(@vReqColumns, '|', ''))) = (LEN(@vReqColumns1) - LEN(REPLACE(@vReqColumns1, '|', '')))
					AND
					(LEN(@vReqColumns1) - LEN(REPLACE(@vReqColumns1, '|', ''))) = (LEN(@vReqColumns2) - LEN(REPLACE(@vReqColumns2, '|', '')))
					AND
					(LEN(@vReqColumns2) - LEN(REPLACE(@vReqColumns2, '|', ''))) = (LEN(@vReqColumns3) - LEN(REPLACE(@vReqColumns3, '|', '')))

					SET @V_CHECK_DIS_CLASS_WAIT = (LEN(@vReqColumns) - LEN(REPLACE(@vReqColumns, '|', '')))				
				ELSE
				BEGIN
					EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME, 'Numbers of components of ALT DIS CLASS WAIT fields does not match.', 'ALT_WAIT_DIS_TYPE,ALT_WAIT_DIS_PRD,ALT_WAIT_DIS_CLNDR_WRK_TYPE,ALT_WAIT_DIS_PRD_TYPE', @V_TABLE_NAME, 'CLASS_NUMBER', @V_CLASS_NAME,1
					SET @V_ERRORCOUNT = @V_ERRORCOUNT + 1;	
				END
			END

			SET @V_ERRORLOC = 'P006'
			IF @V_WAGES_FROM IS NOT NULL AND @V_WAGES_TO IS NOT NULL AND @V_WEEKLY_BENEFIT IS NOT NULL
			BEGIN
						
				SET @vReqColumns = @V_WAGES_FROM + '|'
				SET @vReqColumns1 = @V_WAGES_TO + '|'
				SET @vReqColumns2 = @V_WEEKLY_BENEFIT + '|'
			
				IF (LEN(@vReqColumns) - LEN(REPLACE(@vReqColumns, '|', ''))) = (LEN(@vReqColumns1) - LEN(REPLACE(@vReqColumns1, '|', '')))
					AND
					(LEN(@vReqColumns1) - LEN(REPLACE(@vReqColumns1, '|', ''))) = (LEN(@vReqColumns2) - LEN(REPLACE(@vReqColumns2, '|', '')))

					SET @V_CHECK_DIS_CLASS_TD = (LEN(@vReqColumns) - LEN(REPLACE(@vReqColumns, '|', '')))
				ELSE
				BEGIN
					EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME, 'Numbers of components of ALT DIS CLASS WAIT fields does not match.', 'WAGES_FROM,WAGES_TO,WEEKLY_BENEFIT', @V_TABLE_NAME, 'CLASS_NUMBER', @V_CLASS_NAME,1
					SET @V_ERRORCOUNT = @V_ERRORCOUNT + 1;	
				END
			END

		END
		END TRY
		BEGIN CATCH
			SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
			EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,@V_ERROR_MESSAGE,'EXCEPTION', @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,0;
			SET @V_ROWCOUNT = @V_ROWCOUNT + 1;
		END CATCH	
			
		----------************************** CHECK IF AN EXISTING PLAN OR A NEW PLAN ENDS **********************************************************		
		
		----****************************************************************************************************************************************

		IF @V_INVALID_ROW = 0 ---- NO VALIDATION ERRORS ARE THERE
		BEGIN ---- BEGIN INVALID ROW 0
	
			SET @V_ERRORLOC = 'P007'
			
			IF @V_ROWCOUNT + @V_ERRORCOUNT > 0 SET @V_INVALID_ROW = 1
 
			ELSE IF @V_ROWCOUNT + @V_ERRORCOUNT = 0 SET @V_INVALID_ROW = 0

		END  -------- END INVALID ROW 0

		----****************************************************************************************************************************************
		
		----****************************************************************************************************************************************			
		BEGIN TRY  ------------INSERT WORK STARTS

		IF @V_INVALID_ROW = 0
		BEGIN	 ----BEGIN LEVEL INSERT/UPDATE
				SET @V_ERRORLOC = 'INS01'
				SET @V_DATETIME = REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR(19), GETDATE(), 120),'-',''), ':', ''),' ','')
				
				IF @V_NEWCLASS = 1
				BEGIN
					SET @V_ERRORLOC = 'INS02'
					SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @V_DBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''DISABILITY_CLASS'''
					EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @V_CLASS_ROW_ID OUTPUT

					SET @V_ERRORLOC = 'INS03'
					SET @V_SQL = 'INSERT INTO ' + @V_DBNAME+'DISABILITY_CLASS(CLASS_ROW_ID,PLAN_ID,
 								  CLASS_NAME, CLASS_DESC, ELIG_BENE_PRD, BENE_PRD_TYPE, BENE_FROM_DT_TYPE, DIS_WAIT_PRD, DIS_CLNDR_WRK_CODE,
								  DIS_PRD_TYPE, DIS_MAX_PRD, DIS_MAX_PRD_TYPE, FROM_DIS_PRD_TYPE,	ALLOW_EXT, EXTEND_PRD, EXTEND_PRD_TYPE,	MAX_TOT_DIS_PRD,
								  MAX_TOT_PRD_TYPE, ACTUAL_WORK_WEEK, DAY7_WORK_WEEK, DAY5_WORK_WEEK, OTHER_WORK_WEEK, OTHER_DAYS, BENE_PRCTG_FLAG, BENE_PER_AMT,
								  BENE_FLAT_AMT_FLAG,	BENE_FLAT_AMT, BENE_TD_FLAG, BENE_BASED_CODE, WITHHOLD_FED_ITAX, WITHHOLD_FICA, WEEKLY_BENE_CAP, MAX_BEN_PER_CLAIM,
								  MAX_BEN_PER_CAL_YR, WAGE_FOR_DIS_PRD, WAGE_FOR_CAL_YR, TAXABLE_PERCENT, WITHHOLD_MEDICARE, WITHHOLD_STATE, USE_VOUCHERS, 
								  DAY30_WORK_MONTH,ACTUAL_MONTH, UPPER_AGE_LIMIT, LOWER_AGE_LIMIT, SUPP_PERCENT, SUPP_FLAT_AMT, SUPP_BANK_ACC_ID, 
								  SUPP_SUB_ACC_ID, SUPP_TR_TYPE_CODE,SUPP_SEP_PAY_FLAG, PENSION_AMT, SS_AMT, OTHER_AMT, PRORATE_OFF_FLAG, FULLPAY_ONLY_FLAG )'

					SET @V_SQL =  @V_SQL + ' VALUES(@V_CLASS_ROW_ID, @V_PLAN_ID,
								  @V_CLASS_NAME, @V_CLASS_DESC, @V_ELIG_BENE_PRD, @V_BENE_PRD_TYPE_ID, @V_BENE_FROM_DT_TYPE_ID, @V_DIS_WAIT_PRD, @V_DIS_CLNDR_WRK_TYPE_ID,
								  @V_DIS_PRD_TYPE_ID, @V_DIS_MAX_PRD, @V_DIS_MAX_PRD_TYPE_ID, @V_FROM_DIS_PRD_TYPE_ID, @V_ALLOW_EXT_FLAG_ID, @V_EXTEND_PRD, @V_EXTEND_PRD_TYPE_ID, @V_MAX_TOT_DIS_PRD,
								  @V_MAX_TOT_PRD_TYPE_ID, @V_ACTUAL_WORK_WEEK_FLAG_ID, @V_DAY7_WORK_WEEK_FLAG_ID, @V_DAY5_WORK_WEEK_FLAG_ID, @V_OTHER_WORK_WEEK_FLAG_ID, @V_OTHER_DAYS, @V_BENE_PRCTG_FLAG_ID, @V_BENE_PER_AMT,
								  @V_BENE_FLAT_AMT_FLAG_ID, @V_BENE_FLAT_AMT, @V_BENE_TD_FLAG_ID, @V_BENE_BASED_TYPE_ID, @V_WITHHOLD_FED_ITAX_FLAG_ID, @V_WITHHOLD_FICA_FLAG_ID, @V_WEEKLY_BENE_CAP, @V_MAX_BEN_PER_CLAIM,
								  @V_MAX_BEN_PER_CAL_YR, @V_WAGE_FOR_DIS_PRD, @V_WAGE_FOR_CAL_YR, @V_TAXABLE_PERCENT, @V_WITHHOLD_MEDICARE_FLAG_ID, @V_WITHHOLD_STATE_FLAG_ID, @V_USE_VOUCHERS_FLAG_ID, 
								  @V_DAY30_WORK_MONTH_FLAG_ID, @V_ACTUAL_MONTH_FLAG_ID, @V_UPPER_AGE_LIMIT, @V_LOWER_AGE_LIMIT, @V_SUPP_PERCENT, @V_SUPP_FLAT_AMT, @V_BANK_ACC_ID, 
								  @V_SUB_ACC_ROW_ID, @V_SUPP_TR_TYPE_CODE_ID, @V_SUPP_SEP_PAY_FLAG_ID, @V_PENSION_AMT, @V_SS_AMT, @V_OTHER_AMT, @V_PRORATE_OFF_FLAG_ID, @V_FULLPAY_ONLY_FLAG_ID )'

				END
				ELSE
				BEGIN
					SET @V_ERRORLOC = 'INS03'

					SET @V_SQL = 'UPDATE ' + @V_DBNAME + 'DISABILITY_CLASS SET '
					SET @V_SQL = @V_SQL + ' CLASS_NAME = @V_CLASS_NAME'
					SET @V_SQL = @V_SQL + ', PLAN_ID = @V_PLAN_ID'


					IF @V_CLASS_DESC IS NOT NULL SET @V_SQL = @V_SQL + ', CLASS_DESC = @V_CLASS_DESC'
					IF @V_ELIG_BENE_PRD > 0 SET @V_SQL = @V_SQL + ', ELIG_BENE_PRD = @V_ELIG_BENE_PRD'
					IF @V_BENE_PRD_TYPE_ID > 0 SET @V_SQL = @V_SQL + ', BENE_PRD_TYPE = @V_BENE_PRD_TYPE_ID'					
					IF @V_BENE_FROM_DT_TYPE_ID > 0 SET @V_SQL = @V_SQL + ', BENE_FROM_DT_TYPE = @V_BENE_FROM_DT_TYPE_ID'					
					IF @V_DIS_WAIT_PRD > 0 SET @V_SQL = @V_SQL + ', DIS_WAIT_PRD = @V_DIS_WAIT_PRD'					
					IF @V_DIS_CLNDR_WRK_TYPE_ID > 0 SET @V_SQL = @V_SQL + ', DIS_CLNDR_WRK_CODE = @V_DIS_CLNDR_WRK_TYPE_ID'					
					IF @V_DIS_PRD_TYPE_ID > 0 SET @V_SQL = @V_SQL + ', DIS_PRD_TYPE = @V_DIS_PRD_TYPE_ID'					
					IF @V_DIS_MAX_PRD > 0 SET @V_SQL = @V_SQL + ', DIS_MAX_PRD = @V_DIS_MAX_PRD'					
					IF @V_DIS_MAX_PRD_TYPE_ID > 0 SET @V_SQL = @V_SQL + ', DIS_MAX_PRD_TYPE = @V_DIS_MAX_PRD_TYPE_ID'					
					IF @V_FROM_DIS_PRD_TYPE_ID > 0 SET @V_SQL = @V_SQL + ', FROM_DIS_PRD_TYPE =  @V_FROM_DIS_PRD_TYPE_ID'					
					IF @V_ALLOW_EXT IS NOT NULL SET @V_SQL = @V_SQL + ', ALLOW_EXT = @V_ALLOW_EXT_FLAG_ID'
					IF @V_EXTEND_PRD > 0 SET @V_SQL = @V_SQL + ', EXTEND_PRD = @V_EXTEND_PRD'
					IF @V_EXTEND_PRD_TYPE_ID > 0 SET @V_SQL = @V_SQL + ', EXTEND_PRD_TYPE = @V_EXTEND_PRD_TYPE_ID'
					IF @V_MAX_TOT_DIS_PRD > 0 SET @V_SQL = @V_SQL + ', MAX_TOT_DIS_PRD = @V_MAX_TOT_DIS_PRD'					
					IF @V_MAX_TOT_PRD_TYPE_ID > 0 SET @V_SQL = @V_SQL + ', MAX_TOT_PRD_TYPE = @V_MAX_TOT_PRD_TYPE_ID'
					IF @V_ACTUAL_WORK_WEEK_FLAG_ID IS NOT NULL SET @V_SQL = @V_SQL + ', ACTUAL_WORK_WEEK = @V_ACTUAL_WORK_WEEK_FLAG_ID'
					IF @V_DAY7_WORK_WEEK_FLAG_ID IS NOT NULL SET @V_SQL = @V_SQL + ', DAY7_WORK_WEEK = @V_DAY7_WORK_WEEK_FLAG_ID'
					IF @V_DAY5_WORK_WEEK_FLAG_ID IS NOT NULL SET @V_SQL = @V_SQL + ', DAY5_WORK_WEEK = @V_DAY5_WORK_WEEK_FLAG_ID'
					IF @V_OTHER_WORK_WEEK_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', OTHER_WORK_WEEK = @V_OTHER_WORK_WEEK_FLAG_ID'
					IF @V_OTHER_DAYS > 0 SET @V_SQL = @V_SQL + ', OTHER_DAYS = @V_OTHER_DAYS'
					IF @V_BENE_PRCTG_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', BENE_PRCTG_FLAG = @V_BENE_PRCTG_FLAG_ID'
					IF @V_BENE_PER_AMT IS NOT NULL SET @V_SQL = @V_SQL + ', BENE_PER_AMT = @V_BENE_PER_AMT'
					IF @V_BENE_FLAT_AMT_FLAG_ID IS NOT NULL SET @V_SQL = @V_SQL + ', BENE_FLAT_AMT_FLAG = @V_BENE_FLAT_AMT_FLAG_ID'
					IF @V_BENE_FLAT_AMT IS NOT NULL SET @V_SQL = @V_SQL + ', BENE_FLAT_AMT = @V_BENE_FLAT_AMT'
					IF @V_BENE_TD_FLAG_ID IS NOT NULL SET @V_SQL = @V_SQL + ', BENE_TD_FLAG = @V_BENE_TD_FLAG_ID'
					IF @V_BENE_BASED_TYPE_ID > 0 SET @V_SQL = @V_SQL + ', BENE_BASED_CODE = @V_BENE_BASED_TYPE_ID'
					IF @V_WITHHOLD_FED_ITAX_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', WITHHOLD_FED_ITAX =  @V_WITHHOLD_FED_ITAX_FLAG_ID'
					IF @V_WITHHOLD_FICA_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', WITHHOLD_FICA = @V_WITHHOLD_FICA_FLAG_ID'
					IF @V_WEEKLY_BENE_CAP > 0 SET @V_SQL = @V_SQL + ', WEEKLY_BENE_CAP =  @V_WEEKLY_BENE_CAP'
					IF @V_MAX_BEN_PER_CLAIM > 0 SET @V_SQL = @V_SQL + ', MAX_BEN_PER_CLAIM = @V_MAX_BEN_PER_CLAIM'
					IF @V_MAX_BEN_PER_CAL_YR > 0 SET @V_SQL = @V_SQL + ', MAX_BEN_PER_CAL_YR = @V_MAX_BEN_PER_CAL_YR'
					IF @V_WAGE_FOR_DIS_PRD IS NOT NULL SET @V_SQL = @V_SQL + ', WAGE_FOR_DIS_PRD = @V_WAGE_FOR_DIS_PRD'
					IF @V_WAGE_FOR_CAL_YR > 0 SET @V_SQL = @V_SQL + ', WAGE_FOR_CAL_YR = @V_WAGE_FOR_CAL_YR'
					IF @V_TAXABLE_PERCENT > 0 SET @V_SQL = @V_SQL + ', TAXABLE_PERCENT = @V_TAXABLE_PERCENT'
					IF @V_WITHHOLD_MEDICARE_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', WITHHOLD_MEDICARE = @V_WITHHOLD_MEDICARE_FLAG_ID'
					IF @V_WITHHOLD_STATE_FLAG_ID IS NOT NULL SET @V_SQL = @V_SQL + ', WITHHOLD_STATE = @V_WITHHOLD_STATE_FLAG_ID'
					IF @V_USE_VOUCHERS_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', USE_VOUCHERS = @V_USE_VOUCHERS_FLAG_ID'
					IF @V_DAY30_WORK_MONTH_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', DAY30_WORK_MONTH = @V_DAY30_WORK_MONTH_FLAG_ID'
					IF @V_ACTUAL_MONTH_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', ACTUAL_MONTH = @V_ACTUAL_MONTH_FLAG_ID'
					IF @V_UPPER_AGE_LIMIT > 0 SET @V_SQL = @V_SQL + ', UPPER_AGE_LIMIT = @V_UPPER_AGE_LIMIT'
					IF @V_LOWER_AGE_LIMIT > 0 SET @V_SQL = @V_SQL + ', LOWER_AGE_LIMIT = @V_LOWER_AGE_LIMIT'
					IF @V_SUPP_PERCENT > 0 SET @V_SQL = @V_SQL + ', SUPP_PERCENT = @V_SUPP_PERCENT'
					IF @V_SUPP_FLAT_AMT > 0 SET @V_SQL = @V_SQL + ', SUPP_FLAT_AMT = @V_SUPP_FLAT_AMT'
					IF @V_BANK_ACC_ID > 0 SET @V_SQL = @V_SQL + ', SUPP_BANK_ACC_ID = @V_BANK_ACC_ID'
					IF @V_SUB_ACC_ROW_ID > 0 SET @V_SQL = @V_SQL + ', SUPP_SUB_ACC_ID = @V_SUB_ACC_ROW_ID'
					IF @V_SUPP_TR_TYPE_CODE_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', SUPP_TR_TYPE_CODE = @V_SUPP_TR_TYPE_CODE_ID'
					IF @V_SUPP_SEP_PAY_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', SUPP_SEP_PAY_FLAG = @V_SUPP_SEP_PAY_FLAG_ID'
					IF @V_PENSION_AMT > 0 SET @V_SQL = @V_SQL + ', PENSION_AMT = @V_PENSION_AMT'
					IF @V_SS_AMT > 0 SET @V_SQL = @V_SQL + ', SS_AMT = @V_SS_AMT'
					IF @V_OTHER_AMT > 0 SET @V_SQL = @V_SQL + ', OTHER_AMT = @V_OTHER_AMT'
					IF @V_PRORATE_OFF_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', PRORATE_OFF_FLAG = @V_PRORATE_OFF_FLAG_ID'
					IF @V_FULLPAY_ONLY_FLAG_ID  IS NOT NULL SET @V_SQL = @V_SQL + ', FULLPAY_ONLY_FLAG = @V_FULLPAY_ONLY_FLAG_ID'

					SET @V_SQL = @V_SQL + ' WHERE CLASS_ROW_ID = @V_CLASS_ROW_ID'

				END	

				EXECUTE SP_EXECUTESQL @V_SQL,  
				N'@V_CLASS_ROW_ID INT,
				@V_PLAN_ID INT,
				@V_CLASS_NAME VARCHAR(20),
				@V_CLASS_DESC VARCHAR(50), 
				@V_ELIG_BENE_PRD INT, 
				@V_BENE_PRD_TYPE_ID INT, 
				@V_BENE_FROM_DT_TYPE_ID INT, 
				@V_DIS_WAIT_PRD INT, 
				@V_DIS_CLNDR_WRK_TYPE_ID INT,
				@V_DIS_PRD_TYPE_ID INT, 
				@V_DIS_MAX_PRD INT, 
				@V_DIS_MAX_PRD_TYPE_ID INT, 
				@V_FROM_DIS_PRD_TYPE_ID INT, 
				@V_ALLOW_EXT_FLAG_ID INT, 
				@V_EXTEND_PRD INT, 
				@V_EXTEND_PRD_TYPE_ID INT, 
				@V_MAX_TOT_DIS_PRD INT,
				@V_MAX_TOT_PRD_TYPE_ID INT, 
				@V_ACTUAL_WORK_WEEK_FLAG_ID INT,
				@V_DAY7_WORK_WEEK_FLAG_ID INT, 
				@V_DAY5_WORK_WEEK_FLAG_ID INT, 
				@V_OTHER_WORK_WEEK_FLAG_ID INT, 
				@V_OTHER_DAYS INT, 
				@V_BENE_PRCTG_FLAG_ID INT, 
				@V_BENE_PER_AMT DECIMAL(20,2),
				@V_BENE_FLAT_AMT_FLAG_ID INT, 
				@V_BENE_FLAT_AMT DECIMAL(20,2) , 
				@V_BENE_TD_FLAG_ID INT, 
				@V_BENE_BASED_TYPE_ID INT, 
				@V_WITHHOLD_FED_ITAX_FLAG_ID INT, 
				@V_WITHHOLD_FICA_FLAG_ID INT, 
				@V_WEEKLY_BENE_CAP DECIMAL(20,2), 
				@V_MAX_BEN_PER_CLAIM DECIMAL(20,2),
				@V_MAX_BEN_PER_CAL_YR DECIMAL(20,2), 
				@V_WAGE_FOR_DIS_PRD DECIMAL(20,2), 
				@V_WAGE_FOR_CAL_YR DECIMAL(20,2), 
				@V_TAXABLE_PERCENT DECIMAL(20,2), 
				@V_WITHHOLD_MEDICARE_FLAG_ID INT, 
				@V_WITHHOLD_STATE_FLAG_ID INT, 
				@V_USE_VOUCHERS_FLAG_ID INT, 
				@V_DAY30_WORK_MONTH_FLAG_ID INT, 
				@V_ACTUAL_MONTH_FLAG_ID INT, 
				@V_UPPER_AGE_LIMIT INT, 
				@V_LOWER_AGE_LIMIT INT, 
				@V_SUPP_PERCENT DECIMAL(20,2), 
				@V_SUPP_FLAT_AMT DECIMAL(20,2), 
				@V_BANK_ACC_ID INT, 
				@V_SUB_ACC_ROW_ID INT, 
				@V_SUPP_TR_TYPE_CODE_ID INT, 
				@V_SUPP_SEP_PAY_FLAG_ID INT, 
				@V_PENSION_AMT DECIMAL(20,2), 
				@V_SS_AMT DECIMAL(20,2), 
				@V_OTHER_AMT DECIMAL(20,2),
				@V_PRORATE_OFF_FLAG_ID INT, 
				@V_FULLPAY_ONLY_FLAG_ID INT',
				@V_CLASS_ROW_ID = @V_CLASS_ROW_ID,
				@V_PLAN_ID = @V_PLAN_ID ,
				@V_CLASS_NAME = @V_CLASS_NAME,
				@V_CLASS_DESC = @V_CLASS_DESC, 
				@V_ELIG_BENE_PRD = @V_ELIG_BENE_PRD, 
				@V_BENE_PRD_TYPE_ID = @V_BENE_PRD_TYPE_ID, 
				@V_BENE_FROM_DT_TYPE_ID = @V_BENE_FROM_DT_TYPE_ID, 
				@V_DIS_WAIT_PRD = @V_DIS_WAIT_PRD, 
				@V_DIS_CLNDR_WRK_TYPE_ID = @V_DIS_CLNDR_WRK_TYPE_ID,
				@V_DIS_PRD_TYPE_ID = @V_DIS_PRD_TYPE_ID, 
				@V_DIS_MAX_PRD = @V_DIS_MAX_PRD, 
				@V_DIS_MAX_PRD_TYPE_ID = @V_DIS_MAX_PRD_TYPE_ID, 
				@V_FROM_DIS_PRD_TYPE_ID = @V_FROM_DIS_PRD_TYPE_ID, 
				@V_ALLOW_EXT_FLAG_ID = @V_ALLOW_EXT_FLAG_ID, 
				@V_EXTEND_PRD = @V_EXTEND_PRD, 
				@V_EXTEND_PRD_TYPE_ID = @V_EXTEND_PRD_TYPE_ID, 
				@V_MAX_TOT_DIS_PRD = @V_MAX_TOT_DIS_PRD,
				@V_MAX_TOT_PRD_TYPE_ID = @V_MAX_TOT_PRD_TYPE_ID, 
				@V_ACTUAL_WORK_WEEK_FLAG_ID = @V_ACTUAL_WORK_WEEK_FLAG_ID ,
				@V_DAY7_WORK_WEEK_FLAG_ID = @V_DAY7_WORK_WEEK_FLAG_ID , 
				@V_DAY5_WORK_WEEK_FLAG_ID = @V_DAY5_WORK_WEEK_FLAG_ID , 
				@V_OTHER_WORK_WEEK_FLAG_ID = @V_OTHER_WORK_WEEK_FLAG_ID, 
				@V_OTHER_DAYS = @V_OTHER_DAYS , 
				@V_BENE_PRCTG_FLAG_ID = @V_BENE_PRCTG_FLAG_ID , 
				@V_BENE_PER_AMT = @V_BENE_PER_AMT,
				@V_BENE_FLAT_AMT_FLAG_ID = @V_BENE_FLAT_AMT_FLAG_ID, 
				@V_BENE_FLAT_AMT = @V_BENE_FLAT_AMT, 
				@V_BENE_TD_FLAG_ID = @V_BENE_TD_FLAG_ID, 
				@V_BENE_BASED_TYPE_ID = @V_BENE_BASED_TYPE_ID, 
				@V_WITHHOLD_FED_ITAX_FLAG_ID = @V_WITHHOLD_FED_ITAX_FLAG_ID , 
				@V_WITHHOLD_FICA_FLAG_ID = @V_WITHHOLD_FICA_FLAG_ID, 
				@V_WEEKLY_BENE_CAP = @V_WEEKLY_BENE_CAP, 
				@V_MAX_BEN_PER_CLAIM = @V_MAX_BEN_PER_CLAIM,
				@V_MAX_BEN_PER_CAL_YR = @V_MAX_BEN_PER_CAL_YR, 
				@V_WAGE_FOR_DIS_PRD = @V_WAGE_FOR_DIS_PRD, 
				@V_WAGE_FOR_CAL_YR = @V_WAGE_FOR_CAL_YR, 
				@V_TAXABLE_PERCENT = @V_TAXABLE_PERCENT, 
				@V_WITHHOLD_MEDICARE_FLAG_ID = @V_WITHHOLD_MEDICARE_FLAG_ID, 
				@V_WITHHOLD_STATE_FLAG_ID = @V_WITHHOLD_STATE_FLAG_ID , 
				@V_USE_VOUCHERS_FLAG_ID = @V_USE_VOUCHERS_FLAG_ID , 
				@V_DAY30_WORK_MONTH_FLAG_ID = @V_DAY30_WORK_MONTH_FLAG_ID , 
				@V_ACTUAL_MONTH_FLAG_ID = @V_ACTUAL_MONTH_FLAG_ID , 
				@V_UPPER_AGE_LIMIT = @V_UPPER_AGE_LIMIT , 
				@V_LOWER_AGE_LIMIT = @V_LOWER_AGE_LIMIT , 
				@V_SUPP_PERCENT = @V_SUPP_PERCENT, 
				@V_SUPP_FLAT_AMT = @V_SUPP_FLAT_AMT , 
				@V_BANK_ACC_ID = @V_BANK_ACC_ID , 
				@V_SUB_ACC_ROW_ID = @V_SUB_ACC_ROW_ID , 
				@V_SUPP_TR_TYPE_CODE_ID = @V_SUPP_TR_TYPE_CODE_ID, 
				@V_SUPP_SEP_PAY_FLAG_ID = @V_SUPP_SEP_PAY_FLAG_ID, 
				@V_PENSION_AMT = @V_PENSION_AMT, 
				@V_SS_AMT = @V_SS_AMT, 
				@V_OTHER_AMT = @V_OTHER_AMT,
				@V_PRORATE_OFF_FLAG_ID = @V_PRORATE_OFF_FLAG_ID, 
				@V_FULLPAY_ONLY_FLAG_ID = @V_FULLPAY_ONLY_FLAG_ID
					
				IF @V_NEWCLASS = 1
				BEGIN
					SET @V_ERRORLOC = 'INS04'
					SET @VSQLUPDATE = 'UPDATE ' + @V_DBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''DISABILITY_CLASS'''
					EXECUTE SP_EXECUTESQL @VSQLUPDATE
				END

				IF @V_CHECK_DIS_CLASS_WAIT > 0
				BEGIN
					SET @ILEN = 1
					WHILE @ILEN <= @V_CHECK_DIS_CLASS_WAIT
					BEGIN
						SET @V_ERRORLOC = 'INS05'
						
						IF @ILEN = 1
						BEGIN
							SET @V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID_1
							SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_1
							SET @V_ALT_WAIT_DIS_PRD_TYPE_ID = @V_ALT_WAIT_DIS_PRD_TYPE_ID_1
							SET @V_ALT_WAIT_DIS_PRD_VAL = @V_ALT_WAIT_DIS_PRD_VAL_1
						END
						ELSE IF @ILEN = 2
						BEGIN
							SET @V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID_2
							SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_2
							SET @V_ALT_WAIT_DIS_PRD_TYPE_ID = @V_ALT_WAIT_DIS_PRD_TYPE_ID_2
							SET @V_ALT_WAIT_DIS_PRD_VAL = @V_ALT_WAIT_DIS_PRD_VAL_2
						END
						ELSE IF @ILEN = 3
						BEGIN
							SET @V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID_3
							SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_3
							SET @V_ALT_WAIT_DIS_PRD_TYPE_ID = @V_ALT_WAIT_DIS_PRD_TYPE_ID_3
							SET @V_ALT_WAIT_DIS_PRD_VAL = @V_ALT_WAIT_DIS_PRD_VAL_3
						END
						ELSE IF @ILEN = 4
						BEGIN
							SET @V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID_4
							SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_4
							SET @V_ALT_WAIT_DIS_PRD_TYPE_ID = @V_ALT_WAIT_DIS_PRD_TYPE_ID_4
							SET @V_ALT_WAIT_DIS_PRD_VAL = @V_ALT_WAIT_DIS_PRD_VAL_3
						END
						ELSE IF @ILEN = 5
						BEGIN
							SET @V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID_5
							SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_5
							SET @V_ALT_WAIT_DIS_PRD_TYPE_ID = @V_ALT_WAIT_DIS_PRD_TYPE_ID_5
							SET @V_ALT_WAIT_DIS_PRD_VAL = @V_ALT_WAIT_DIS_PRD_VAL_5
						END
						ELSE IF @ILEN = 6
						BEGIN
							SET @V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID_6
							SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_6
							SET @V_ALT_WAIT_DIS_PRD_TYPE_ID = @V_ALT_WAIT_DIS_PRD_TYPE_ID_6
							SET @V_ALT_WAIT_DIS_PRD_VAL = @V_ALT_WAIT_DIS_PRD_VAL_6
						END
						ELSE IF @ILEN = 7
						BEGIN
							SET @V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID_7
							SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_7
							SET @V_ALT_WAIT_DIS_PRD_TYPE_ID = @V_ALT_WAIT_DIS_PRD_TYPE_ID_7
							SET @V_ALT_WAIT_DIS_PRD_VAL = @V_ALT_WAIT_DIS_PRD_VAL_7
						END
						ELSE IF @ILEN = 8
						BEGIN
							SET @V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID_8
							SET @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID_8
							SET @V_ALT_WAIT_DIS_PRD_TYPE_ID = @V_ALT_WAIT_DIS_PRD_TYPE_ID_8
							SET @V_ALT_WAIT_DIS_PRD_VAL = @V_ALT_WAIT_DIS_PRD_VAL_8
						END

						SET @V_ERRORLOC = 'INS06'
						SET @V_WAIT_ROW_ID = 0

						SET @V_SQL = 'SELECT @V_WAIT_ROW_ID = WAIT_ROW_ID FROM ' + @V_DBNAME + 'DIS_CLASS_WAIT WHERE CLASS_ID = @V_CLASS_ROW_ID AND DIS_TYPE_CODE = @V_ALT_WAIT_DIS_TYPE_ID'

						Exec sp_Executesql @V_SQL,
						N'@V_WAIT_ROW_ID INT OUTPUT,
						@V_CLASS_ROW_ID INT,
						@V_ALT_WAIT_DIS_TYPE_ID INT',
						@V_WAIT_ROW_ID = @V_WAIT_ROW_ID OUTPUT,
						@V_CLASS_ROW_ID = @V_CLASS_ROW_ID ,
						@V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID 

						IF @V_WAIT_ROW_ID = 0
						BEGIN

							SET @V_ERRORLOC = 'INS07'
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @V_DBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''DIS_CLASS_WAIT'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @V_WAIT_ROW_ID OUTPUT

							SET @V_SQL = 'INSERT INTO ' + @V_DBNAME + 'DIS_CLASS_WAIT(WAIT_ROW_ID, CLASS_ID, DIS_TYPE_CODE, DIS_WAIT_PRD, DIS_CLNDR_WRK_CODE, DIS_PRD_TYPE)
							VALUES(@V_WAIT_ROW_ID, @V_CLASS_ROW_ID, @V_ALT_WAIT_DIS_TYPE_ID, @V_ALT_WAIT_DIS_PRD_VAL, @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID, @V_ALT_WAIT_DIS_PRD_TYPE_ID)'

						END
						ELSE
						BEGIN
							SET @V_ERRORLOC = 'INS08'
							SET @V_SQL = 'UPDATE ' + @V_DBNAME + 'DIS_CLASS_WAIT SET CLASS_ID = @V_CLASS_ROW_ID, DIS_TYPE_CODE = @V_ALT_WAIT_DIS_TYPE_ID, '
							SET @V_SQL = @V_SQL + ' DIS_WAIT_PRD = @V_ALT_WAIT_DIS_PRD_VAL, DIS_CLNDR_WRK_CODE = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID, DIS_PRD_TYPE = @V_ALT_WAIT_DIS_PRD_TYPE_ID '
							SET @V_SQL = @V_SQL + ' WHERE WAIT_ROW_ID = @V_WAIT_ROW_ID'
							
						END

						Exec sp_Executesql @V_SQL,
						N'@V_WAIT_ROW_ID INT,
						@V_CLASS_ROW_ID INT,
						@V_ALT_WAIT_DIS_TYPE_ID INT,
						@V_ALT_WAIT_DIS_PRD_VAL INT,
						@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID INT,
						@V_ALT_WAIT_DIS_PRD_TYPE_ID INT',
						@V_WAIT_ROW_ID = @V_WAIT_ROW_ID,
						@V_CLASS_ROW_ID = @V_CLASS_ROW_ID,
						@V_ALT_WAIT_DIS_TYPE_ID = @V_ALT_WAIT_DIS_TYPE_ID,
						@V_ALT_WAIT_DIS_PRD_VAL = @V_ALT_WAIT_DIS_PRD_VAL,
						@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID = @V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_ID,
						@V_ALT_WAIT_DIS_PRD_TYPE_ID = @V_ALT_WAIT_DIS_PRD_TYPE_ID

						IF @V_ERRORLOC = 'INS07'
						BEGIN
							SET @V_ERRORLOC = 'INS04'
							SET @VSQLUPDATE = 'UPDATE ' + @V_DBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''DIS_CLASS_WAIT'''
							EXECUTE SP_EXECUTESQL @VSQLUPDATE
						END

					SET @ILEN = @ILEN + 1
					END
				END

				IF @V_CHECK_DIS_CLASS_TD > 0
				BEGIN
					SET @ILEN = 1
					WHILE @ILEN <= @V_CHECK_DIS_CLASS_TD
					BEGIN
						SET @V_ERRORLOC = 'INS09'

						IF @ILEN = 1
						BEGIN
							SET @V_WAGES_FROM_VAL = @V_WAGES_FROM_1
							SET @V_WAGES_TO_VAL = @V_WAGES_TO_1
							SET @V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_1
						END
						ELSE IF @ILEN = 2
						BEGIN
							SET @V_WAGES_FROM_VAL = @V_WAGES_FROM_2
							SET @V_WAGES_TO_VAL = @V_WAGES_TO_2
							SET @V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_2
						END
						ELSE IF @ILEN = 3
						BEGIN
							SET @V_WAGES_FROM_VAL = @V_WAGES_FROM_3
							SET @V_WAGES_TO_VAL = @V_WAGES_TO_3
							SET @V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_3
						END
						ELSE IF @ILEN = 4
						BEGIN
							SET @V_WAGES_FROM_VAL = @V_WAGES_FROM_4
							SET @V_WAGES_TO_VAL = @V_WAGES_TO_4
							SET @V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_4
						END
						ELSE IF @ILEN = 5
						BEGIN
							SET @V_WAGES_FROM_VAL = @V_WAGES_FROM_5
							SET @V_WAGES_TO_VAL = @V_WAGES_TO_5
							SET @V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_5
						END
						ELSE IF @ILEN = 6
						BEGIN
							SET @V_WAGES_FROM_VAL = @V_WAGES_FROM_6
							SET @V_WAGES_TO_VAL = @V_WAGES_TO_6
							SET @V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_6
						END
						ELSE IF @ILEN = 7
						BEGIN
							SET @V_WAGES_FROM_VAL = @V_WAGES_FROM_7
							SET @V_WAGES_TO_VAL = @V_WAGES_TO_7
							SET @V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_7
						END
						ELSE IF @ILEN = 8
						BEGIN
							SET @V_WAGES_FROM_VAL = @V_WAGES_FROM_8
							SET @V_WAGES_TO_VAL = @V_WAGES_TO_8
							SET @V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_8
						END

						SET @V_ERRORLOC = 'INS10'
						SET @V_TD_ROW_ID = 0
						
						
						SET @V_SQL = 'SELECT @V_TD_ROW_ID = TD_ROW_ID FROM ' + @V_DBNAME + 'DIS_CLASS_TD WHERE CLASS_ID = @V_CLASS_ROW_ID'
						SET @V_SQL = @V_SQL + ' AND WAGES_FROM < ' + CAST(@V_WAGES_FROM_VAL + 0.01 AS VARCHAR)
						SET @V_SQL = @V_SQL + ' AND WAGES_FROM > ' + CAST(@V_WAGES_FROM_VAL - 0.01 AS VARCHAR)
						SET @V_SQL = @V_SQL + ' AND WAGES_TO < ' + CAST(@V_WAGES_TO_VAL + 0.01 AS VARCHAR)
						SET @V_SQL = @V_SQL + ' AND WAGES_TO > ' + CAST(@V_WAGES_TO_VAL - 0.01 AS VARCHAR)
						SET @V_SQL = @V_SQL + ' AND WEEKLY_BENEFIT < ' + CAST(@V_WEEKLY_BENEFIT_VAL + 0.01 AS VARCHAR)
						SET @V_SQL = @V_SQL + ' AND WEEKLY_BENEFIT > ' + CAST(@V_WEEKLY_BENEFIT_VAL - 0.01 AS VARCHAR)

						Exec sp_Executesql @V_SQL,
						N'@V_TD_ROW_ID INT OUTPUT,
						@V_CLASS_ROW_ID INT,
						@V_WAGES_FROM_VAL DECIMAL(20,2),
						@V_WAGES_TO_VAL DECIMAL(20,2),
						@V_WEEKLY_BENEFIT_VAL DECIMAL(20,2)',
						@V_TD_ROW_ID = @V_TD_ROW_ID OUTPUT,
						@V_CLASS_ROW_ID = @V_CLASS_ROW_ID,
						@V_WAGES_FROM_VAL = @V_WAGES_FROM_VAL,
						@V_WAGES_TO_VAL = @V_WAGES_TO_VAL ,
						@V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_VAL 
						
						IF @V_TD_ROW_ID = 0
						BEGIN

							SET @V_ERRORLOC = 'INS11'
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @V_DBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''DIS_CLASS_TD'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @V_TD_ROW_ID OUTPUT

							SET @V_ERRORLOC = 'INS12'
							SET @V_SQL = 'INSERT INTO ' + @V_DBNAME + 'DIS_CLASS_TD(TD_ROW_ID, CLASS_ID, WAGES_FROM, WAGES_TO, WEEKLY_BENEFIT)
							VALUES(@V_TD_ROW_ID, @V_CLASS_ROW_ID, @V_WAGES_FROM_VAL, @V_WAGES_TO_VAL, @V_WEEKLY_BENEFIT_VAL)'

							Exec sp_Executesql @V_SQL,
							N'@V_TD_ROW_ID INT ,
							@V_CLASS_ROW_ID INT,
							@V_WAGES_FROM_VAL DECIMAL(20,2),
							@V_WAGES_TO_VAL DECIMAL(20,2),
							@V_WEEKLY_BENEFIT_VAL DECIMAL(20,2)',
							@V_TD_ROW_ID = @V_TD_ROW_ID ,
							@V_CLASS_ROW_ID = @V_CLASS_ROW_ID,
							@V_WAGES_FROM_VAL = @V_WAGES_FROM_VAL,
							@V_WAGES_TO_VAL = @V_WAGES_TO_VAL ,
							@V_WEEKLY_BENEFIT_VAL = @V_WEEKLY_BENEFIT_VAL 
							
							SET @V_ERRORLOC = 'INS13'
							SET @VSQLUPDATE = 'UPDATE ' + @V_DBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''DIS_CLASS_TD'''
							EXECUTE SP_EXECUTESQL @VSQLUPDATE

						END

					SET @ILEN = @ILEN + 1
					END
				END 
								
		END  ----END LEVEL INSERT/UPDATE

	END TRY
	BEGIN CATCH
		SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
		EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,@V_ERROR_MESSAGE,'EXCEPTION', @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,0;
		SET @V_ROWCOUNT = @V_ROWCOUNT + 1;
	END CATCH    ----INSERT WORK ENDS

	--********************************************************************************************************************************************************************
	SET @V_ERRORLOC = 'END666'
		
	IF @V_ROWCOUNT + @V_ERRORCOUNT = 0 SET @V_INVALID_ROW = 0
		
	IF @V_INVALID_ROW = 0
	BEGIN
		SET @V_SQL = 'UPDATE DDS_STD_CLASS SET INVALID_ROW = @V_INVALID_ROW_P WHERE DA_ROW_ID = @V_DA_ROW_ID_P AND JOBID = @P_JOBID_P';

		Exec sp_Executesql @V_SQL,
		N' @V_INVALID_ROW_P AS INT ,
		@V_DA_ROW_ID_P INT,
		@P_JOBID_P INT',
		@V_INVALID_ROW_P = @V_INVALID_ROW,
		@V_DA_ROW_ID_P = @V_DA_ROW_ID,
		@P_JOBID_P = @P_JOBID

	END

	----Neha Running status code starts 33658---
	BEGIN TRY
							
	SET @V_ERRORLOC= 'Running_Status'
			
	IF @iRunStatCnt=1
	BEGIN
			
		SET @vProcessMsg ='Total Number of Records processed in STD CLASS : '+ cast(@iRunStatCnt as varchar);

		SET @V_SQL = 'INSERT INTO DDS_PROCESS_LOG_T (JOBID,PROCESS_DESC,MODULE_NAME, TABLE_NAME, DISPLAY_ORDER ) VALUES(';
		SET @V_SQL =@V_SQL +' @pJOBID,@pProcessMsg,@pModuleName,@pTableName,@pDisplayOrder)' ;

		EXECUTE SP_EXECUTESQL @V_SQL,
		N'@pJOBID INT, @pProcessMsg varchar(4000), @pModuleName varchar(50),@pTableName varchar(50),@pDisplayOrder INT',
		@pJOBID=@P_JOBID, @pProcessMsg=@vProcessMsg, @pModuleName='STD_CLASS_RUN',@pTableName ='DDS_STD_CLASS_RUN',@pDisplayOrder=-11
	END
	ELSE  
	IF (@iRunCnt = 1000)
	BEGIN
			SET @vProcessMsg ='Total Number of Records processed in STD CLASS : '+ cast(@iRunStatCnt as varchar);

			SET @V_SQL = 'UPDATE DDS_PROCESS_LOG_T SET PROCESS_DESC =@pProcessDesc WHERE JOBID =@pJobID AND MODULE_NAME =@pModuleName';
			SET @V_SQL =@V_SQL +' AND TABLE_NAME=@pTableName AND DISPLAY_ORDER=@pDisplayOrder';

			EXECUTE SP_EXECUTESQL @V_SQL,
			N'@pProcessDesc varchar(4000),@pJobID INT, @pModuleName varchar(50),@pTableName varchar(50),@pDisplayOrder INT',
			@pProcessDesc=@vProcessMsg, @pJobID=@P_JOBID,@pModuleName='STD_CLASS_RUN',@pTableName ='DDS_STD_CLASS_RUN',@pDisplayOrder=-11
			SET @iRunCnt=1
	END
	ELSE
	IF (@iTotalRows=@iRunStatCnt)
	BEGIN
		SET @vProcessMsg ='Total Number of Records processed in STD CLASS : '+ cast(@iRunStatCnt as varchar);
		SET @V_SQL = 'UPDATE DDS_PROCESS_LOG_T SET PROCESS_DESC =@pProcessDesc WHERE JOBID =@pJobID AND MODULE_NAME =@pModuleName';
		SET @V_SQL =@V_SQL +' AND TABLE_NAME=@pTableName AND DISPLAY_ORDER=@pDisplayOrder';

		EXECUTE SP_EXECUTESQL @V_SQL,
		N'@pProcessDesc varchar(4000),@pJobID INT, @pModuleName varchar(50),@pTableName varchar(50),@pDisplayOrder INT',
		@pProcessDesc=@vProcessMsg, @pJobID=@P_JOBID,@pModuleName='STD_CLASS_RUN',@pTableName ='DDS_STD_CLASS_RUN',@pDisplayOrder=-11
	END

	SET @iRunStatCnt =@iRunStatCnt + 1; 
	SET @iRunCnt = @iRunCnt + 1;
	
	END TRY
	BEGIN CATCH
			SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
			EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,@V_ERROR_MESSAGE,'EXCEPTION', @V_TABLE_NAME,'CLASS_NAME', @V_CLASS_NAME,0;
			SET @V_ROWCOUNT = @V_ROWCOUNT + 1;
	END CATCH
	---Neha running status code ends 33658---

	FETCH NEXT FROM DDS_STD_CLASS_CUR
	INTO @V_DA_ROW_ID,
@P_JOBID,
@V_INVALID_ROW,	
@V_CLASS_NAME,
@V_CLASS_DESC,
@V_PLAN_NUMBER,
@V_ELIG_BENE_PRD,
@V_BENE_PRD_TYPE,
@V_BENE_FROM_DT_TYPE,
@V_DIS_WAIT_PRD,
@V_DIS_CLNDR_WRK_TYPE,
@V_DIS_PRD_TYPE,
@V_DIS_MAX_PRD,
@V_DIS_MAX_PRD_TYPE,
@V_FROM_DIS_PRD_TYPE,
@V_ALLOW_EXT,
@V_EXTEND_PRD,
@V_EXTEND_PRD_TYPE,
@V_MAX_TOT_DIS_PRD,
@V_MAX_TOT_PRD_TYPE,
@V_ACTUAL_WORK_WEEK_FLAG,
@V_DAY7_WORK_WEEK_FLAG,
@V_DAY5_WORK_WEEK_FLAG,
@V_OTHER_WORK_WEEK_FLAG,
@V_OTHER_DAYS,
@V_BENE_PRCTG_FLAG,
@V_BENE_PER_AMT,
@V_BENE_FLAT_AMT_FLAG,
@V_BENE_FLAT_AMT,
@V_BENE_TD_FLAG,
@V_BENE_BASED_TYPE,
@V_WITHHOLD_FED_ITAX_FLAG,
@V_WITHHOLD_FICA_FLAG,
@V_WEEKLY_BENE_CAP,
@V_MAX_BEN_PER_CLAIM,
@V_MAX_BEN_PER_CAL_YR,
@V_WAGE_FOR_DIS_PRD,
@V_WAGE_FOR_CAL_YR ,
@V_TAXABLE_PERCENT ,
@V_WITHHOLD_MEDICARE_FLAG,
@V_WITHHOLD_STATE_FLAG,
@V_USE_VOUCHERS_FLAG,
@V_ALT_WAIT_DIS_TYPE,
@V_ALT_WAIT_DIS_TYPE_1,
@V_ALT_WAIT_DIS_TYPE_2,
@V_ALT_WAIT_DIS_TYPE_3,
@V_ALT_WAIT_DIS_TYPE_4,
@V_ALT_WAIT_DIS_TYPE_5,
@V_ALT_WAIT_DIS_TYPE_6,
@V_ALT_WAIT_DIS_TYPE_7,
@V_ALT_WAIT_DIS_TYPE_8,
@V_ALT_WAIT_DIS_PRD,
@V_ALT_WAIT_DIS_PRD_VAL_1,
@V_ALT_WAIT_DIS_PRD_VAL_2,
@V_ALT_WAIT_DIS_PRD_VAL_3,
@V_ALT_WAIT_DIS_PRD_VAL_4,
@V_ALT_WAIT_DIS_PRD_VAL_5,
@V_ALT_WAIT_DIS_PRD_VAL_6,
@V_ALT_WAIT_DIS_PRD_VAL_7,
@V_ALT_WAIT_DIS_PRD_VAL_8,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_1,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_2,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_3,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_4,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_5,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_6,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_7,
@V_ALT_WAIT_DIS_CLNDR_WRK_TYPE_8,
@V_ALT_WAIT_DIS_PRD_TYPE,
@V_ALT_WAIT_DIS_PRD_TYPE_1,
@V_ALT_WAIT_DIS_PRD_TYPE_2,
@V_ALT_WAIT_DIS_PRD_TYPE_3,
@V_ALT_WAIT_DIS_PRD_TYPE_4,
@V_ALT_WAIT_DIS_PRD_TYPE_5,
@V_ALT_WAIT_DIS_PRD_TYPE_6,
@V_ALT_WAIT_DIS_PRD_TYPE_7,
@V_ALT_WAIT_DIS_PRD_TYPE_8,
@V_WAGES_FROM,
@V_WAGES_FROM_1,
@V_WAGES_FROM_2,
@V_WAGES_FROM_3,
@V_WAGES_FROM_4,
@V_WAGES_FROM_5,
@V_WAGES_FROM_6,
@V_WAGES_FROM_7,
@V_WAGES_FROM_8,
@V_WAGES_TO,
@V_WAGES_TO_1,
@V_WAGES_TO_2,
@V_WAGES_TO_3,
@V_WAGES_TO_4,
@V_WAGES_TO_5,
@V_WAGES_TO_6,
@V_WAGES_TO_7,
@V_WAGES_TO_8,
@V_WEEKLY_BENEFIT,
@V_WEEKLY_BENEFIT_1,
@V_WEEKLY_BENEFIT_2,
@V_WEEKLY_BENEFIT_3,
@V_WEEKLY_BENEFIT_4,
@V_WEEKLY_BENEFIT_5,
@V_WEEKLY_BENEFIT_6,
@V_WEEKLY_BENEFIT_7,
@V_WEEKLY_BENEFIT_8,
@V_DAY30_WORK_MONTH_FLAG,
@V_ACTUAL_MONTH_FLAG,
@V_UPPER_AGE_LIMIT,
@V_LOWER_AGE_LIMIT,
@V_SUPP_PERCENT,
@V_SUPP_FLAT_AMT,
@V_SUPP_BANK_ACC_NAME,
@V_SUPP_SUB_ACC_NAME,
@V_SUPP_TR_TYPE_CODE,
@V_SUPP_SEP_PAY_FLAG,
@V_PENSION_AMT,
@V_SS_AMT,
@V_OTHER_AMT,
@V_PRORATE_OFF_FLAG,
@V_FULLPAY_ONLY_FLAG	
	
	
	SET @TOTALROWS = @TOTALROWS - 1

	END

	CLOSE DDS_STD_CLASS_CUR;
	DEALLOCATE DDS_STD_CLASS_CUR;
	SET NOCOUNT OFF

ENDMAIN:
---PROCESS LOG CALLING FOR SUMMARY OF RECORDS
EXEC DDS_PROCESS_LOG @P_JOBID, @V_MODULENAME, @V_TABLE_NAME	

END TRY ---- END MAIN TRY
BEGIN CATCH	
	SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
	EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @V_DA_ROW_ID, @V_MODULENAME, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,@V_ERROR_MESSAGE,'EXCEPTION', @V_TABLE_NAME, 'CLASS_NAME', @V_CLASS_NAME,0;
	SET @V_ROWCOUNT = @V_ROWCOUNT + 1;
	---In case there is some exception in main try then the cursor needs to be closed and deallocated so that next run does not create any issues
	CLOSE DDS_STD_CLASS_CUR;
	DEALLOCATE DDS_STD_CLASS_CUR;	
END CATCH ---- END MAIN CATCH

END ----- END MAIN