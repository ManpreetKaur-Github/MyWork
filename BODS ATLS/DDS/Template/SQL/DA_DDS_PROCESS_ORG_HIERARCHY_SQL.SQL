IF OBJECT_ID('DDS_PROCESSORG_HIERARCHY', 'P') IS NOT NULL
    DROP PROCEDURE DDS_PROCESSORG_HIERARCHY;
GO

CREATE PROCEDURE DDS_PROCESSORG_HIERARCHY
@tORG_HIERARCHY  tORG_HIERARCHY READONLY,
@P_JOBID	INT ,
@P_DA_ROW_ID INT,
@P_DBNAME	VARCHAR(255),
@P_KEYCOLUMN VARCHAR(30),
@P_KEY_VALUE VARCHAR(30),
@P_ENTITY_ID INT OUTPUT
WITH EXECUTE AS CALLER
AS
BEGIN ---- BEGIN ALL
	BEGIN TRY
		SET NOCOUNT ON

	--*************************************************************************************************************************************************************
	--****************************************** STRUCTURE OF DDS_PROCESSORG_HIERARCHY PROCEDURE ******************************************************************
	--*************************************************************************************************************************************************************
	--****		IT CHECKS WHETHER DEPARTMENT, LOCATION, DIVISON, COMPANY EXISTS IN ENTITY TABLE OR NOT OR NOT.												   ****
	--****      IF IT DOES NOT EXISTS THEN ENTITY AND ORG_HIERACHY ARE CREATED																				   ****
	--****      VARIABLE DECLARTIONS																														   ****
	--****      SELECT TOP ROW FROM ORG HIERARCHY TYPE CREATED IN THE CALLING PROCEDURES WHICH HAVE THE VALUES FOR ORG HIERARCHY LEVELS						   ****
	--****      INITIALIZATION OF VARIABLES( ORG HIERARCHY LEVEL'S DEFAULT VALUES ARE SPECIFIED IF THE CORRESPONDING VALUES ARE NULL)						   ****
	--****      CHECK IF DEPARTMENT EXISTS IN RISKMASTER OR NOT, IF YES THEN EXIT PROCEDURE AND RETURN DEPARTMENT EID                         				   ****
	--****      IF DEPARTMENT DOES NOT EXISTS IN RISKMASTER, THEN CHECK FOR LOCATION EXISTENCE															       ****	
	--****		IF LOCATION EXISTS, THEN CREATE DEPARTMENT AND FACILITY UNDER THAT LOCATION																	   ****
	--****		IF LOCATION DOES NOT EXISTS, THEN CHECK FOR DIVISION EXISTENCE																				   ****
	--****		IF DIVISION EXISTS, THEN CREATE DEPARTMENT, FACILITY AND LOCATION UNDER THAT DIVISION														   ****
	--****		IF DIVISION DOES NOT EXISTS, THEN CHECK FOR COMPANY EXISTENCE																				   ****
	--****		IF COMPANY EXISTS, THEN CREATE DEPARTMENT, FACILITY, LOCATION, REGION AND OPERATION UNDER THAT COMPANY										   ****
	--****		IF COMPANY DOES NOT EXISTS, THEN CREATE DEPARTMENT, FACILITY, LOCATION, REGION, OPERATION, COMPANY, CLIENT									   ****
	--****		FETCH ORG HIERACHY CORRESPONDING TO LOCATION, THEN CREATE COMPLETE ORG_HIERARCHY TILL DEPARTMENT											   ****
	--*************************************************************************************************************************************************************
	--*************************************************************************************************************************************************************

		-------------- VARIABLE DECLARATION -----------
		DECLARE
		 @VSQL NVARCHAR(MAX),
		 @VSQLINSERT NVARCHAR(MAX),
		 @VSYS_TABLE_NAME VARCHAR(30),
		 @VDEPARTMENTEMPTY INT = 0,
		 @VDEPT_ID INT = 0 ,
		 @VENTITY_TABLE_ID INT = 0,
		 @VABBREVIATION VARCHAR(25),
		 @VDELETED_FLAG INT = 0,
		 @V_DA_ROW_ID INT = 0,
		 @IROWID INT,
		 @IJOBID INT ,
		 @IDAROWID INT ,
		 @VDIVISION VARCHAR(25),
		 @VLOCATION VARCHAR(25),
		 @VDEPARTMENT VARCHAR(25),
		 @VCOMPANY VARCHAR(25),
		 @VCLIENT VARCHAR(25),
		 @VOPERATION VARCHAR(25),
		 @VREGION VARCHAR(25),
		 @VFACILITY VARCHAR(25),
		 @VDIVISION_DESC VARCHAR(255),
		 @VLOCATION_DESC VARCHAR(255),
		 @VDEPARTMENT_DESC VARCHAR(255),
		 @VCOMPANY_DESC VARCHAR(255),
		 @VCLIENT_DESC VARCHAR(255),
		 @VOPERATION_DESC VARCHAR(255),
		 @VREGION_DESC VARCHAR(255),
		 @VFACILITY_DESC VARCHAR(255),
		 @VDBNAME VARCHAR(255),
		 @IENTITY_ID  INT = 0,
		 @IROWCOUNT  INT = 0,
		 @V_PROCNAME VARCHAR(30) = 'DDS_PROCESSORG_HIERARCHY',
		 @PARENT_EID INT = 0,
		 @VLOCATION_EID INT = 0,
		 @VDIVISION_EID INT = 0,
		 @VCOMPANY_EID INT = 0,
		 @VREGION_EID INT = 0,
		 @VOPERATION_EID INT = 0,
		 @VCLIENT_EID INT = 0,
		 @VFACILITY_EID INT = 0,
		 @V_ERROR_MESSAGE VARCHAR(MAX) = '',
		 @V_ERRORLOC VARCHAR(10) = '',
		 @V_ERROR_TABLE VARCHAR(30),
		 @V_ROWCOUNT AS INT,
		 @V_DATETIME VARCHAR(14),
		 @V_DDSUSER VARCHAR(6) = 'DA DDS'

		SELECT TOP 1
		@IROWID = IROWID ,
		@IJOBID= IJOBID ,
		@IDAROWID = IDAROWID,
		@VDIVISION = VDIVISION,
		@VLOCATION = VLOCATION,
		@VDEPARTMENT = VDEPARTMENT,
		@VCOMPANY = VCOMPANY,
		@VDIVISION_DESC = VDIVISION_DESC,
		@VLOCATION_DESC  = VLOCATION_DESC,
		@VDEPARTMENT_DESC = VDEPARTMENT_DESC ,
		@VCOMPANY_DESC = VCOMPANY_DESC
		FROM @tORG_HIERARCHY WHERE IJOBID = @P_JOBID AND IDAROWID = @P_DA_ROW_ID ORDER BY IROWID DESC

		----Print 'in org function'

		----INITIALIZATION OF VARIABLES-----
		SET @V_ERRORLOC = 'ORG01'

		SET @VDBNAME = '[' + @P_DBNAME + '].[DBO].'
		SET @P_ENTITY_ID = 0
		SET @VDEPARTMENT = ISNULL(@VDEPARTMENT,'DEPT-DDS')
		SET @VDEPARTMENT_DESC =  ISNULL(@VDEPARTMENT_DESC, @VDEPARTMENT + ' Department')
		SET @VFACILITY = 'FAC-DDS'
		SET @VFACILITY_DESC = @VFACILITY + ' Facility'
		SET @VLOCATION = ISNULL(@VLOCATION,'LOC-DDS')
		SET @VLOCATION_DESC = ISNULL(@VLOCATION_DESC, @VLOCATION + ' Location')
		SET @VDIVISION = ISNULL(@VDIVISION,'DIV-DDS')
		SET @VDIVISION_DESC = ISNULL(@VDIVISION_DESC, @VDIVISION + ' Division')
		SET @VREGION = 'REGN-DDS'
		SET @VREGION_DESC = @VREGION + ' Region'
		SET @VOPERATION = 'OPRN-DDS'
		SET @VOPERATION_DESC =  @VOPERATION + ' Operation'
		SET @VCOMPANY = ISNULL(@VCOMPANY,'CMPNY-DDS')
		SET @VCOMPANY_DESC = ISNULL(@VCOMPANY_DESC, @VCOMPANY + ' Company')
		SET @VCLIENT = 'CLIENT-DDS'
		SET @VCLIENT_DESC = @VCLIENT + ' Client'
		
		SET @V_DATETIME = REPLACE(REPLACE(REPLACE(CONVERT(VARCHAR(19), GETDATE(), 120),'-',''), ':', ''),' ','')

		SET @VSYS_TABLE_NAME = 'DEPARTMENT'
		SET @VSQL = 'SELECT @V_ENTITY_ID_P = E.ENTITY_ID ' 
		SET @VSQL = @VSQL + 'FROM ' + @VDBNAME+'ENTITY E, ' + @VDBNAME+'GLOSSARY G ' + ' WHERE E.ENTITY_TABLE_ID = G.TABLE_ID AND G.SYSTEM_TABLE_NAME = @V_SYS_TABLE_NAME_P AND E.ABBREVIATION = @V_DEPARTMENT_P AND E.DELETED_FLAG = 0';
	
		Exec sp_Executesql @VSQL,
		N'@V_ENTITY_ID_P INT OUTPUT,
		@V_SYS_TABLE_NAME_P VARCHAR(30),
		@V_DEPARTMENT_P VARCHAR(25)',
		@V_ENTITY_ID_P = @VDEPT_ID OUTPUT,
		@V_SYS_TABLE_NAME_P = @VSYS_TABLE_NAME,
		@V_DEPARTMENT_P = @VDEPARTMENT;

		IF @VDEPT_ID > 0 
		BEGIN
			SET @P_ENTITY_ID = @VDEPT_ID
			RETURN @P_ENTITY_ID
		END
		
		ELSE
		BEGIN ----LOCATION EXISTENCE CHECK

			SET @V_ERRORLOC = 'ORG02'
			SET @VSYS_TABLE_NAME = 'LOCATION'
			SET @VSQL = 'SELECT @IENTITY_ID_P = E.ENTITY_ID ' 
			SET @VSQL = @VSQL + 'FROM ' + @VDBNAME+'ENTITY E, ' + @VDBNAME+'GLOSSARY G ' + ' WHERE E.ENTITY_TABLE_ID = G.TABLE_ID AND G.SYSTEM_TABLE_NAME = @VSYS_TABLE_NAME_P AND E.ABBREVIATION = @VLOCATION_P AND E.DELETED_FLAG = 0';
	
			Exec sp_Executesql @VSQL,
			N'@IENTITY_ID_P INT OUTPUT,
			@VSYS_TABLE_NAME_P VARCHAR(30),
			@VLOCATION_P VARCHAR(25)',
			@IENTITY_ID_P = @VLOCATION_EID OUTPUT,
			@VSYS_TABLE_NAME_P = @VSYS_TABLE_NAME,
			@VLOCATION_P = @VLOCATION;
				
			----print 'values: '
			----print @vsql;
			----PRINT @IENTITY_ID;
			----PRINT @VSYS_TABLE_NAME;
			----PRINT @VLOCATION;

			IF @VLOCATION_EID > 0  --LOCATION EXISTS
			BEGIN
				SET @V_ERRORLOC = 'ORG03'
				----PRINT 'CREATE DUMMY FACILITY'
				----PRINT 'CREATE DUMMY DEPRATMENT'
			
				--CREATE FACILITY
				SET @VENTITY_TABLE_ID = 1011
				SET @PARENT_EID = @VLOCATION_EID
				SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
				EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VFACILITY_EID OUTPUT
					
				SET @V_ERRORLOC = 'ORG04'
					
				SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
				SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VFACILITY_EID_P, @VENTITY_TABLE_ID_P, @VFACILITY_DESC_P, @VFACILITY_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
				--print @VSQLINSERT
					
				EXECUTE SP_EXECUTESQL @VSQLINSERT,
				N'@VFACILITY_EID_P INT,
				@VENTITY_TABLE_ID_P INT,
				@VFACILITY_DESC_P VARCHAR(255),
				@VFACILITY_P VARCHAR(25),
				@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
				@VFACILITY_EID_P = @VFACILITY_EID,
				@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
				@VFACILITY_DESC_P = @VFACILITY_DESC,
				@VFACILITY_P = @VFACILITY,
				@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
					
				SET @V_ERRORLOC = 'ORG05'
					
				SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
				EXECUTE SP_EXECUTESQL @VSQLINSERT
					
				SET @PARENT_EID = @VFACILITY_EID

				--CREATE DEPARTMENT
				SET @V_ERRORLOC = 'ORG06'
				SET @VENTITY_TABLE_ID = 1012
				SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
				EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VDEPT_ID OUTPUT
					
				SET @V_ERRORLOC = 'ORG07'
				SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
				SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VDEPT_ID_P, @VENTITY_TABLE_ID_P, @VDEPARTMENT_DESC_P, @VDEPARTMENT_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
				--print @VSQLINSERT
					
				EXECUTE SP_EXECUTESQL @VSQLINSERT,
				N'@VDEPT_ID_P INT,
				@VENTITY_TABLE_ID_P INT,
				@VDEPARTMENT_DESC_P VARCHAR(255),
				@VDEPARTMENT_P VARCHAR(25),
				@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
				@VDEPT_ID_P = @VDEPT_ID,
				@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
				@VDEPARTMENT_DESC_P = @VDEPARTMENT_DESC,
				@VDEPARTMENT_P = @VDEPARTMENT,
				@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
					
				SET @V_ERRORLOC = 'ORG08'
				SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
				EXECUTE SP_EXECUTESQL @VSQLINSERT
					
				SET @PARENT_EID = @VDEPT_ID		
			END
			ELSE IF @VLOCATION_EID = 0  -- LOCATION DOES NOT EXISTS
			BEGIN ---BEGIN LEVEL DIVISION

				SET @V_ERRORLOC = 'ORG09'
				SET @VSYS_TABLE_NAME = 'DIVISION'
				SET @VSQL = 'SELECT @IENTITY_ID_P = E.ENTITY_ID ' 
				SET @VSQL = @VSQL + 'FROM ' + @VDBNAME+'ENTITY E, ' + @VDBNAME+'GLOSSARY G ' + ' WHERE E.ENTITY_TABLE_ID = G.TABLE_ID AND G.SYSTEM_TABLE_NAME = @VSYS_TABLE_NAME_P AND E.ABBREVIATION = @VDIVISION_P AND E.DELETED_FLAG = 0';
	
				Exec sp_Executesql @VSQL,
				N'@IENTITY_ID_P INT OUTPUT,
				@VSYS_TABLE_NAME_P VARCHAR(30),
				@VDIVISION_P VARCHAR(25)',
				@IENTITY_ID_P = @VDIVISION_EID OUTPUT,
				@VSYS_TABLE_NAME_P = @VSYS_TABLE_NAME,
				@VDIVISION_P = @VDIVISION;

				----print 'values: '
				----print @vsql;
				----PRINT @IENTITY_ID;
				----PRINT @VSYS_TABLE_NAME;
				----PRINT @VDIVISION;

				IF @VDIVISION_EID > 0  -- DIVISON EXISTS
				BEGIN
					SET @V_ERRORLOC = 'ORG10'
					----PRINT 'CREATE DUMMY LOCATION'
					----PRINT 'CREATE DUMMY FACILITY'
					----PRINT 'CREATE DUMMY DEPRATMENT'
							
					--CREATE LOCATION

					SET @VENTITY_TABLE_ID = 1010
					SET @PARENT_EID = @VDIVISION_EID
					SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P =  NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
					EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VLOCATION_EID OUTPUT
							
					SET @V_ERRORLOC = 'ORG11'
					SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
					SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VLOCATION_EID_P, @VENTITY_TABLE_ID_P, @VLOCATION_DESC_P, @VLOCATION_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
					----print @VSQLINSERT
							
					EXECUTE SP_EXECUTESQL @VSQLINSERT,
					N'@VLOCATION_EID_P INT,
					@VENTITY_TABLE_ID_P INT,
					@VLOCATION_DESC_P VARCHAR(255),
					@VLOCATION_P VARCHAR(25),
					@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
					@VLOCATION_EID_P = @VLOCATION_EID,
					@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
					@VLOCATION_DESC_P = @VLOCATION_DESC,
					@VLOCATION_P = @VLOCATION,
					@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
							
					SET @V_ERRORLOC = 'ORG12'
					SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
					EXECUTE SP_EXECUTESQL @VSQLINSERT
							
					SET @PARENT_EID = @VLOCATION_EID
																		
					--CREATE FACILITY
					SET @V_ERRORLOC = 'ORG13'
					SET @VENTITY_TABLE_ID = 1011
					SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
					EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VFACILITY_EID OUTPUT
							
					SET @V_ERRORLOC = 'ORG14'
					SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
					SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VFACILITY_EID_P, @VENTITY_TABLE_ID_P, @VFACILITY_DESC_P, @VFACILITY_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
					----print @VSQLINSERT
							
					EXECUTE SP_EXECUTESQL @VSQLINSERT,
					N'@VFACILITY_EID_P INT,
					@VENTITY_TABLE_ID_P INT,
					@VFACILITY_DESC_P VARCHAR(255),
					@VFACILITY_P VARCHAR(25),
					@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
					@VFACILITY_EID_P = @VFACILITY_EID,
					@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
					@VFACILITY_DESC_P = @VFACILITY_DESC,
					@VFACILITY_P = @VFACILITY,
					@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
							
					SET @V_ERRORLOC = 'ORG15'
					SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
					EXECUTE SP_EXECUTESQL @VSQLINSERT

					SET @PARENT_EID = @VFACILITY_EID

					--CREATE DEPARTMENT
					SET @V_ERRORLOC = 'ORG16'
					SET @VENTITY_TABLE_ID = 1012
					SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
					EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VDEPT_ID OUTPUT

					SET @V_ERRORLOC = 'ORG17'
					SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
					SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VDEPT_ID_P, @VENTITY_TABLE_ID_P, @VDEPARTMENT_DESC_P, @VDEPARTMENT_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
					----print @VSQLINSERT
							
					EXECUTE SP_EXECUTESQL @VSQLINSERT,
					N'@VDEPT_ID_P INT,
					@VENTITY_TABLE_ID_P INT,
					@VDEPARTMENT_DESC_P VARCHAR(255),
					@VDEPARTMENT_P VARCHAR(25),
					@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
					@VDEPT_ID_P = @VDEPT_ID,
					@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
					@VDEPARTMENT_DESC_P = @VDEPARTMENT_DESC,
					@VDEPARTMENT_P = @VDEPARTMENT,
					@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
							
					SET @V_ERRORLOC = 'ORG18'
					SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
					EXECUTE SP_EXECUTESQL @VSQLINSERT
					
					SET @PARENT_EID = @VDEPT_ID
				END
				ELSE IF @VDIVISION_EID = 0 -- DIVISON DOES NOT EXISTS
				BEGIN ---BEGIN LEVEL COMPANY
		
					SET @V_ERRORLOC = 'ORG19'
					SET @VSYS_TABLE_NAME = 'COMPANY'
					SET @VSQL = 'SELECT @IENTITY_ID_P = E.ENTITY_ID ' 
					SET @VSQL = @VSQL + 'FROM ' + @VDBNAME+'ENTITY E, ' + @VDBNAME+'GLOSSARY G ' + ' WHERE E.ENTITY_TABLE_ID = G.TABLE_ID AND G.SYSTEM_TABLE_NAME = @VSYS_TABLE_NAME_P AND E.ABBREVIATION = @VCOMPANY_P AND E.DELETED_FLAG = 0';

						Exec sp_Executesql @VSQL,
						N'@IENTITY_ID_P INT OUTPUT,
						@VSYS_TABLE_NAME_P VARCHAR(30),
						@VCOMPANY_P VARCHAR(25)',
						@IENTITY_ID_P = @VCOMPANY_EID OUTPUT,
						@VSYS_TABLE_NAME_P = @VSYS_TABLE_NAME,
						@VCOMPANY_P = @VCOMPANY;

						----print 'values: '
						----print @vsql;
						----PRINT @IENTITY_ID;
						----PRINT @VSYS_TABLE_NAME;
						----PRINT @VCOMPANY;
	
					IF @VCOMPANY_EID > 0 -- COMPANY EXISTS
						BEGIN
							SET @V_ERRORLOC = 'ORG20'
							----PRINT 'CREATE DUMMY OPERATION'
							----PRINT 'CREATE DUMMY REGION'
							----PRINT 'CREATE DUMMY DIVISON'
							----PRINT 'CREATE DUMMY LOCATION'
							----PRINT 'CREATE DUMMY FACILITY'
							----PRINT 'CREATE DUMMY DEPRATMENT'

							--CREATE OPERATION
							SET @VENTITY_TABLE_ID = 1007
							SET @PARENT_EID = @VCOMPANY_EID
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VOPERATION_EID OUTPUT

							SET @V_ERRORLOC = 'ORG21'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VOPERATION_EID_P, @VENTITY_TABLE_ID_P, @VOPERATION_DESC_P, @VOPERATION_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VOPERATION_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VOPERATION_DESC_P VARCHAR(255),
							@VOPERATION_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VOPERATION_EID_P = @VOPERATION_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VOPERATION_DESC_P = @VOPERATION_DESC,
							@VOPERATION_P = @VOPERATION,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG23'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VOPERATION_EID
													
							--CREATE REGION
							SET @V_ERRORLOC = 'ORG24'
							SET @VENTITY_TABLE_ID = 1008
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VREGION_EID OUTPUT

							SET @V_ERRORLOC = 'ORG25'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VREGION_EID_P, @VENTITY_TABLE_ID_P, @VREGION_DESC_P, @VREGION_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VREGION_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VREGION_DESC_P VARCHAR(255),
							@VREGION_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VREGION_EID_P = @VREGION_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VREGION_DESC_P = @VREGION_DESC,
							@VREGION_P = @VREGION,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG26'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VREGION_EID
																							
							--CREATE DIVISON
							SET @V_ERRORLOC = 'ORG27'
							SET @VENTITY_TABLE_ID = 1009
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VDIVISION_EID OUTPUT
									
							SET @V_ERRORLOC = 'ORG28'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VDIVISION_EID_P, @VENTITY_TABLE_ID_P, @VDIVISION_DESC_P, @VDIVISION_P , @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VDIVISION_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VDIVISION_DESC_P VARCHAR(255),
							@VDIVISION_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VDIVISION_EID_P = @VDIVISION_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VDIVISION_DESC_P = @VDIVISION_DESC,
							@VDIVISION_P = @VDIVISION,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG29'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VDIVISION_EID
																		
							--CREATE LOCATION
							SET @V_ERRORLOC = 'ORG30'
							SET @VENTITY_TABLE_ID = 1010
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VLOCATION_EID OUTPUT
									
							SET @V_ERRORLOC = 'ORG31'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VLOCATION_EID_P, @VENTITY_TABLE_ID_P, @VLOCATION_DESC_P, @VLOCATION_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
							----print @VSQLINSERT
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VLOCATION_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VLOCATION_DESC_P VARCHAR(255),
							@VLOCATION_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VLOCATION_EID_P = @VLOCATION_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VLOCATION_DESC_P = @VLOCATION_DESC,
							@VLOCATION_P = @VLOCATION,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG32'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VLOCATION_EID
																		
							--CREATE FACILITY
							SET @V_ERRORLOC = 'ORG33'
							SET @VENTITY_TABLE_ID = 1011
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VFACILITY_EID OUTPUT

							SET @V_ERRORLOC = 'ORG34'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VFACILITY_EID_P, @VENTITY_TABLE_ID_P, @VFACILITY_DESC_P, @VFACILITY_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
							----print @VSQLINSERT
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VFACILITY_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VFACILITY_DESC_P VARCHAR(255),
							@VFACILITY_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VFACILITY_EID_P = @VFACILITY_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VFACILITY_DESC_P = @VFACILITY_DESC,
							@VFACILITY_P = @VFACILITY,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG35'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VFACILITY_EID

							--CREATE DEPARTMENT
							SET @V_ERRORLOC = 'ORG36'
							SET @VENTITY_TABLE_ID = 1012
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VDEPT_ID OUTPUT
									
							SET @V_ERRORLOC = 'ORG37'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VDEPT_ID_P, @VENTITY_TABLE_ID_P, @VDEPARTMENT_DESC_P, @VDEPARTMENT_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
							----print @VSQLINSERT
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VDEPT_ID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VDEPARTMENT_DESC_P VARCHAR(255),
							@VDEPARTMENT_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VDEPT_ID_P = @VDEPT_ID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VDEPARTMENT_DESC_P = @VDEPARTMENT_DESC,
							@VDEPARTMENT_P = @VDEPARTMENT,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER	
									
							SET @V_ERRORLOC = 'ORG38'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT
									
							SET @PARENT_EID = @VDEPT_ID
						END
						ELSE IF @VCOMPANY_EID = 0 -- COMPANY DOES NOT EXISTS	
						BEGIN
							----PRINT 'CREATE DUMMY CLIENT'
							----PRINT 'CREATE DUMMY OPERATION'
							----PRINT 'CREATE DUMMY REGION'
							----PRINT 'CREATE DUMMY DIVISON'
							----PRINT 'CREATE DUMMY LOCATION'
							----PRINT 'CREATE DUMMY FACILITY'
							----PRINT 'CREATE DUMMY DEPRATMENT'

							--CREATE CLIENT
							SET @V_ERRORLOC = 'ORG39'
							SET @VENTITY_TABLE_ID = 1005
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VCLIENT_EID OUTPUT
									
							SET @V_ERRORLOC = 'ORG40'																		
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VCLIENT_EID_P, @VENTITY_TABLE_ID_P, @VCLIENT_DESC, @VCLIENT_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
							----print @VSQLINSERT
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VCLIENT_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VCLIENT_DESC VARCHAR(255),
							@VCLIENT_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VCLIENT_EID_P = @VCLIENT_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VCLIENT_DESC = @VCLIENT_DESC,
							@VCLIENT_P = @VCLIENT,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG41'									
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VCLIENT_EID

							--CREATE COMPANY
							SET @V_ERRORLOC = 'ORG42'
							SET @VENTITY_TABLE_ID = 1006
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VCOMPANY_EID OUTPUT
									
							SET @V_ERRORLOC = 'ORG43'									
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VCOMPANY_EID_P, @VENTITY_TABLE_ID_P, @VCOMPANY_DESC_P, @VCOMPANY_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VCOMPANY_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VCOMPANY_DESC_P VARCHAR(255),
							@VCOMPANY_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VCOMPANY_EID_P = @VCOMPANY_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VCOMPANY_DESC_P = @VCOMPANY_DESC,
							@VCOMPANY_P = @VCOMPANY,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG44'									
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VCOMPANY_EID

							--CREATE OPERATION
							SET @V_ERRORLOC = 'ORG45'
							SET @VENTITY_TABLE_ID = 1007
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VOPERATION_EID OUTPUT
									
							SET @V_ERRORLOC = 'ORG46'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VOPERATION_EID_P, @VENTITY_TABLE_ID_P, @VOPERATION_DESC_P, @VOPERATION_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VOPERATION_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VOPERATION_DESC_P VARCHAR(255),
							@VOPERATION_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VOPERATION_EID_P = @VOPERATION_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VOPERATION_DESC_P = @VOPERATION_DESC,
							@VOPERATION_P = @VOPERATION,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG47'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VOPERATION_EID
													
							--CREATE REGION
							SET @V_ERRORLOC = 'ORG48'
							SET @VENTITY_TABLE_ID = 1008
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VREGION_EID OUTPUT
									
							SET @V_ERRORLOC = 'ORG49'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VREGION_EID_P, @VENTITY_TABLE_ID_P, @VREGION_DESC_P, @VREGION_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VREGION_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VREGION_DESC_P VARCHAR(255),
							@VREGION_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VREGION_EID_P = @VREGION_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VREGION_DESC_P = @VREGION_DESC,
							@VREGION_P = @VREGION,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG50'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VREGION_EID
																							
							--CREATE DIVISON
							SET @V_ERRORLOC = 'ORG51'
							SET @VENTITY_TABLE_ID = 1009
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VDIVISION_EID OUTPUT
									
							SET @V_ERRORLOC = 'ORG52'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VDIVISION_EID_P, @VENTITY_TABLE_ID_P, @VDIVISION_DESC_P, @VDIVISION_P , @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VDIVISION_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VDIVISION_DESC_P VARCHAR(255),
							@VDIVISION_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VDIVISION_EID_P = @VDIVISION_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VDIVISION_DESC_P = @VDIVISION_DESC,
							@VDIVISION_P = @VDIVISION,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG53'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VDIVISION_EID
																		
							--CREATE LOCATION
							SET @V_ERRORLOC = 'ORG54'
							SET @VENTITY_TABLE_ID = 1010
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VLOCATION_EID OUTPUT
									
							SET @V_ERRORLOC = 'ORG55'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VLOCATION_EID_P, @VENTITY_TABLE_ID_P, @VLOCATION_DESC_P, @VLOCATION_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
							----print @VSQLINSERT
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VLOCATION_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VLOCATION_DESC_P VARCHAR(255),
							@VLOCATION_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VLOCATION_EID_P = @VLOCATION_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VLOCATION_DESC_P = @VLOCATION_DESC,
							@VLOCATION_P = @VLOCATION,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG56'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VLOCATION_EID
																		
							--CREATE FACILITY
							SET @V_ERRORLOC = 'ORG57'
							SET @VENTITY_TABLE_ID = 1011
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VFACILITY_EID OUTPUT
									
							SET @V_ERRORLOC = 'ORG58'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VFACILITY_EID_P, @VENTITY_TABLE_ID_P, @VFACILITY_DESC_P, @VFACILITY_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
							----print @VSQLINSERT
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VFACILITY_EID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VFACILITY_DESC_P VARCHAR(255),
							@VFACILITY_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VFACILITY_EID_P = @VFACILITY_EID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VFACILITY_DESC_P = @VFACILITY_DESC,
							@VFACILITY_P = @VFACILITY,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG59'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT

							SET @PARENT_EID = @VFACILITY_EID

							--CREATE DEPARTMENT
							SET @V_ERRORLOC = 'ORG60'
							SET @VENTITY_TABLE_ID = 1012
							SET @VSQLINSERT = 'SELECT @NEXTUNIQUEID_P = NEXT_UNIQUE_ID FROM ' + @VDBNAME + 'GLOSSARY WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT, N'@NEXTUNIQUEID_P INT OUTPUT', @NEXTUNIQUEID_P = @VDEPT_ID OUTPUT
									
							SET @V_ERRORLOC = 'ORG61'
							SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ENTITY(ENTITY_ID, ENTITY_TABLE_ID, LAST_NAME, ABBREVIATION, PARENT_EID, DELETED_FLAG, NAME_TYPE, DTTM_RCD_ADDED, DTTM_RCD_LAST_UPD, UPDATED_BY_USER, ADDED_BY_USER)'
							SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VDEPT_ID_P, @VENTITY_TABLE_ID_P, @VDEPARTMENT_DESC_P, @VDEPARTMENT_P, @PARENT_EID_P, 0, 0, @V_DATETIME,@V_DATETIME, @V_DDSUSER, @V_DDSUSER)'
							----print @VSQLINSERT
									
							EXECUTE SP_EXECUTESQL @VSQLINSERT,
							N'@VDEPT_ID_P INT,
							@VENTITY_TABLE_ID_P INT,
							@VDEPARTMENT_DESC_P VARCHAR(255),
							@VDEPARTMENT_P VARCHAR(25),
							@PARENT_EID_P INT, @V_DATETIME VARCHAR(14), @V_DDSUSER VARCHAR(6)',
							@VDEPT_ID_P = @VDEPT_ID,
							@VENTITY_TABLE_ID_P = @VENTITY_TABLE_ID,
							@VDEPARTMENT_DESC_P = @VDEPARTMENT_DESC,
							@VDEPARTMENT_P = @VDEPARTMENT,
							@PARENT_EID_P = @PARENT_EID, @V_DATETIME = @V_DATETIME, @V_DDSUSER = @V_DDSUSER
									
							SET @V_ERRORLOC = 'ORG62'
							SET @VSQLINSERT = 'UPDATE ' + @VDBNAME + 'GLOSSARY SET NEXT_UNIQUE_ID = NEXT_UNIQUE_ID + 1 WHERE SYSTEM_TABLE_NAME = ''ENTITY'''
							EXECUTE SP_EXECUTESQL @VSQLINSERT
									
							SET @PARENT_EID = @VDEPT_ID

						END
					END ---END LEVEL COMPANY
				END ---END LEVEL DIVISION
		END ---END LEVEL LOCATION

		-- FETCH ORG_HIERARCHY

		SET @V_ERRORLOC = 'ORG63'
		SET @VSQL = 'SELECT TOP 1 @VLOCATION_EID_P = LOCATION_EID, @VDIVISION_EID_P = DIVISION_EID, @VREGION_EID_P = REGION_EID, @VOPERATION_EID_P = OPERATION_EID, @VCOMPANY_EID_P = COMPANY_EID, @VCLIENT_EID_P = CLIENT_EID FROM ' + @VDBNAME + 'ORG_HIERARCHY WHERE LOCATION_EID = @VLOCATION_EID_P'
		
		EXECUTE SP_EXECUTESQL @VSQL,
		N'@VLOCATION_EID_P INT OUTPUT,
		@VDIVISION_EID_P INT OUTPUT,
		@VREGION_EID_P INT OUTPUT,
		@VOPERATION_EID_P INT OUTPUT,
		@VCOMPANY_EID_P INT OUTPUT,
		@VCLIENT_EID_P INT OUTPUT',
		@VLOCATION_EID_P = @VLOCATION_EID OUTPUT,
		@VDIVISION_EID_P = @VDIVISION_EID OUTPUT,
		@VREGION_EID_P = @VREGION_EID OUTPUT,
		@VOPERATION_EID_P = @VOPERATION_EID OUTPUT,
		@VCOMPANY_EID_P = @VCOMPANY_EID OUTPUT,
		@VCLIENT_EID_P = @VCLIENT_EID OUTPUT
		
		
		---- CREATE ORG_HIERARCHY
		SET @V_ERRORLOC = 'ORG64'
		SET @VSQLINSERT = 'INSERT INTO ' + @VDBNAME + 'ORG_HIERARCHY(DEPARTMENT_EID, FACILITY_EID, LOCATION_EID, DIVISION_EID, REGION_EID, OPERATION_EID, COMPANY_EID, CLIENT_EID)'
		SET @VSQLINSERT = @VSQLINSERT + ' VALUES(@VDEPT_ID_P, @VFACILITY_EID_P, @VLOCATION_EID_P, @VDIVISION_EID_P, @VREGION_EID_P, @VOPERATION_EID_P, @VCOMPANY_EID_P, @VCLIENT_EID_P)'

		EXECUTE SP_EXECUTESQL @VSQLINSERT,
		N'@VDEPT_ID_P INT, @VFACILITY_EID_P INT, @VLOCATION_EID_P INT, @VDIVISION_EID_P INT, @VREGION_EID_P INT, @VOPERATION_EID_P INT, @VCOMPANY_EID_P INT, @VCLIENT_EID_P INT',
		@VDEPT_ID_P = @VDEPT_ID, @VFACILITY_EID_P = @VFACILITY_EID, @VLOCATION_EID_P = @VLOCATION_EID, @VDIVISION_EID_P = @VDIVISION_EID, @VREGION_EID_P = @VREGION_EID, @VOPERATION_EID_P = @VOPERATION_EID, @VCOMPANY_EID_P = @VCOMPANY_EID, @VCLIENT_EID_P = @VCLIENT_EID
		
		SET @P_ENTITY_ID = @VDEPT_ID
		
	END TRY
	BEGIN CATCH
		SET @V_ERROR_MESSAGE = ERROR_MESSAGE()
		EXECUTE DDS_ERROR_LOG_CAPTURE @P_JOBID, @P_DA_ROW_ID, NULL, @V_ERRORLOC, @V_ERRORLOC, @V_PROCNAME,@V_ERROR_MESSAGE,'EXCEPTION', @V_ERROR_TABLE, @P_KEYCOLUMN, @P_KEY_VALUE,0 ;
		SET @V_ROWCOUNT = @V_ROWCOUNT + 1;
		SET @P_ENTITY_ID = -1
		----PRINT ERROR_MESSAGE();
	END CATCH
END ----END ALL

