-- ============================================================
--   SCRIPT HEADER (DATABASE STRUCTURE)
--   Template-RMA_16.1 And Onwards DDS
--   DA Module Name: DDS
-- ============================================================= 
IF ((SELECT COUNT(*) AS isRMDB FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='SYS_PARMS')=1)
	BEGIN
		PRINT 'Error: Script Execution Aborted - Script trying to execute on RISKMASTER database not on DA Staging database. Please open the correct Staging database and execute this script.';
	END
ELSE
BEGIN

--IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_JOB_CONFIG_OPTIONS]') AND TYPE IN (N'U'))
--DROP TABLE [DBO].[DDS_JOB_CONFIG_OPTIONS]

IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME = 'DDS_JOB_CONFIG_OPTIONS')
BEGIN
CREATE TABLE DDS_JOB_CONFIG_OPTIONS (
CONFIG_ID INT,
CONFIG_NAME VARCHAR(255),
USERID INT,
XML_STRING VARCHAR(MAX),
IS_DELETED bit
);
--NOTE: THIS TABLE WILL BE USED FOR DA DDS UI PURPOSE, FOR POPULATING AND STORING CONFIGURATIONS SPECIFIED BY PARTICULAR USERS.
END

--IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_USR_DEF_RSV_MAP]') AND TYPE IN (N'U'))
--DROP TABLE [DBO].[DDS_USR_DEF_RSV_MAP]


IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME = 'DDS_USR_DEF_RSV_MAP')
BEGIN
	CREATE TABLE DDS_USR_DEF_RSV_MAP(
		OPTIONSET_ID INT NOT NULL,
		USERID  INT NOT NULL,
		CONFIG_ID INT NOT NULL,
		LOB_CODE INT NOT NULL,
		BUCKET VARCHAR(2) NOT NULL,
		RSV_TYPE_SHORT_CODE VARCHAR(25),
		RSV_TYPE_CODE INT,
		CODE_DESC VARCHAR(50),
		CONSTRAINT PK_DDS_USR_DEF_RSV_MAP PRIMARY KEY CLUSTERED 
	(	USERID ASC,
		CONFIG_ID ASC, 
		LOB_CODE ASC,
		BUCKET ASC
	)WITH 
	(PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  
	= ON) 
	ON [PRIMARY]
	) 

END

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_ERROR_LOG]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DDS_ERROR_LOG]


IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME = 'DDS_ERROR_LOG')
BEGIN
CREATE TABLE DDS_ERROR_LOG (
	ERR_LOG_ROW_ID INT NOT NULL, 
	JOBID INT  NOT NULL, 
	DA_ROW_ID INT , -- IT IS A DA ROW ID OF TABLE IN WHICH WE HAVE INSERTED THE DATA
	MODULE_NAME VARCHAR(50), 
	ERROR_TABLE_TO_CHECK VARCHAR(30),
	CALLING_ERROR_LOCATION VARCHAR(MAX), 
	CURRENT_ERROR_LOCATION VARCHAR(MAX), 
	ERROR_PROC_NAME VARCHAR(MAX),
	ERROR_TIME VARCHAR(14), 
	ERROR_DESC VARCHAR(MAX), 
	IS_VALIDATION INT, 
	ERROR_COLUMNS VARCHAR(MAX),
	ERROR_KEY_COLUMN VARCHAR(50),
	ERROR_KEY_COLUMN_VALUE VARCHAR(50)
   ) ;
   
	CREATE INDEX DDS_ERRORLOG_IDX ON DDS_ERROR_LOG (JOBID,DA_ROW_ID,ERROR_TABLE_TO_CHECK,IS_VALIDATION);
	
END

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_PROCESS_LOG_T]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DDS_PROCESS_LOG_T]


IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME = 'DDS_PROCESS_LOG_T')
BEGIN
CREATE TABLE DDS_PROCESS_LOG_T(
		JOBID INT NOT NULL,
		PROCESS_DESC  VARCHAR(4000),
		MODULE_NAME VARCHAR(50),
		TABLE_NAME VARCHAR(50),
        DISPLAY_ORDER INT
	 );

END

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_OPTIONSET]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DDS_OPTIONSET]


IF NOT EXISTS (SELECT * FROM DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'[DBO].[DDS_OPTIONSET]') AND OBJECTPROPERTY(ID, N'ISUSERTABLE') = 1)
BEGIN
CREATE TABLE [DBO].[DDS_OPTIONSET] (
	JOBID INT NOT NULL,
	PERFORM_VERIFICATION INT,
	EVENTS_AVAILABLE INT,
	MED_WATCH_AVAILABLE INT,
	CLAIMS_AVAILABLE INT,
	STD_AVAILABLE INT,
	ADJUSTER_NOTES_AVAILABLE INT,
	PAYMENTS_AVAILABLE INT,
	PAYMENT_SUB_ACCOUNT INT,
	PAYMENT_BANK_ACCOUNT INT,
	ENHANCED_NOTES_AVAILABLE INT,
	ALLOW_NEW_CODES INT,
	NON_EMP_MATCH_BY_NAME_TAX_ID INT,
	ALLOW_NEW_DEPARTMENT INT,
	CHK_DUPLICATE_ENTITY INT,
	CHK_CREATE_NEWENTITY INT,
	EMPLOYEE_MATCH_BY_NAME INT,
	EMPLOYEE_MATCH_BY_TAX_ID INT,
	EMPLOYEE_MATCH_BY_DOB INT,
	EMPLOYEE_MATCH_BY_EMP_NUM INT,
	NON_EMP_MATCH_BY_NAME INT,
	NON_EMP_MATCH_BY_TAX_ID INT,
	NON_EMP_MATCH_BY_DOB INT,
	CREATE_PI_ENT_IF_TAXID_EMPTY INT,
	ALLOW_NEW_EMPLOYEES INT,
	ALLOW_NEW_CLAIMS INT,
	UPDATE_CLAIMANT_DETAILS INT,
	ID_CLAIMANT_BY_NAME_GCVA INT,
	ID_CLAIMANT_BY_SUFFIX_GCVA INT,
	UPDATE_CLAIMANT_NAME_GCVA INT,
	CRT_ENT_IF_TAXID_EMPTY_GCVA INT,
	UPDATE_CLAIMANT_NAME_WC INT,
	ATTACH_TRANS_ID_TO_CHECK_NO INT,
	RECALCULATE_RESERVES INT,
	DONT_CHECK_DUPLICATE_PAYMENTS INT,
	CHECK_DUPLICATE_RESERVE_TRANS INT,
	ID_CLAIMANT_BY_NAME INT,  
	ID_CLAIMANT_BY_SUFFIX INT, 
	VALIDATE_SUPPLEMENTALS INT,
	SET_ADJUSTER_AS_CURRENT INT,
	EN_ENT_MATCH_BY_NAME INT,
	EN_ENT_MATCH_BY_TAX_ID INT,
	EN_ENT_MATCH_BY_ABBRV INT,
	EVENT_SUPP INT,
	CLAIM_SUPP INT,
	PAYMENT_SUPP INT,
	CONFIG_ID INT NOT NULL,
	ORGSEC_FLAG INT,
	DIARY_TO_USERS VARCHAR(255),
	USE_TRANSACTIONS INT,
	VALID_START_DATE VARCHAR(8),
	VALID_END_DATE VARCHAR(8),
	MAX_ERRORS INT,
	EVENT_IMPORTFILE_NAME VARCHAR(255),
	MEDWATCH_IMPORTFILE_NAME VARCHAR(255),
	CLAIM_IMPORTFILE_NAME VARCHAR(255),
	STD_PLAN_IMPORTFILE_NAME VARCHAR(255),
	STD_CLASS_IMPORTFILE_NAME VARCHAR(255),
	ADJUSTER_IMPORTFILE_NAME VARCHAR(255),
	PAYMENT_IMPORTFILE_NAME VARCHAR(255),
	EN_IMPORTFILE_NAME VARCHAR(255),
	OPTIONSET_NAME VARCHAR(50),
	ENHNOTES_CLMNT_NAME INT,   
	ENHNOTES_CLMNT_TAX INT,  
	ENHNOTES_CLMNT_ABBREVIATION INT,   
	MEDWATCH_SUPP INT,  
	STDPLAN_SUPP INT, 
CONSTRAINT [PK_DDS_OPTIONSET] PRIMARY KEY CLUSTERED
(
	[JOBID] ASC
) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
END

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_CLAIM]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DDS_CLAIM]


IF NOT EXISTS (SELECT * FROM DBO.SYSOBJECTS WHERE ID = OBJECT_ID(N'[DBO].[DDS_CLAIM]') AND OBJECTPROPERTY(ID, N'ISUSERTABLE') = 1)
BEGIN
CREATE TABLE [DBO].[DDS_CLAIM](
	DA_ROW_ID INT NOT NULL,
	JOBID INT NOT NULL,
	INVALID_ROW INT,
	RECORD_TYPE VARCHAR(1),
	CLAIM_NUMBER VARCHAR(25),
	CLAIM_SUFFIX INT,
	CLAIM_TYPE VARCHAR(25),
	DIVISION VARCHAR(25),
	LOCATION VARCHAR(25),
	DEPARTMENT VARCHAR(25),
	COMPANY VARCHAR(25),
	COUNTRY VARCHAR(20),
	DIVISION_DESC VARCHAR(255),	
	LOCATION_DESC VARCHAR(255),
	DEPARTMENT_DESC VARCHAR(255),
	COMPANY_DESC VARCHAR(255),
	TIME_OF_CLAIM VARCHAR(6),
	DATE_OF_LOSS VARCHAR(8),
	DATE_REPORTED VARCHAR(8),
	DATE_OF_CLAIM VARCHAR(8),
	DATE_CLOSED VARCHAR(14),
	DATE_REOPENED VARCHAR(8),
	CLAIM_STATUS VARCHAR(25),
	RESERVE_A_OPENING FLOAT,
	RESERVE_A_CURRENT FLOAT,
	RESERVE_A_DATE VARCHAR(8),
	PAID_A_TOTAL FLOAT,
	COLLECTION_A_TOTAL FLOAT,
	RESERVE_B_OPENING FLOAT,
	RESERVE_B_CURRENT FLOAT,
	RESERVE_B_DATE VARCHAR(8),
	PAID_B_TOTAL FLOAT,
	COLLECTION_B_TOTAL FLOAT,
	RESERVE_C_OPENING FLOAT,
	RESERVE_C_CURRENT FLOAT,
	RESERVE_C_DATE VARCHAR(8),
	PAID_C_TOTAL FLOAT,
	COLLECTION_C_TOTAL FLOAT,
	RESERVE_D_OPENING FLOAT,
	RESERVE_D_CURRENT FLOAT,
	RESERVE_D_DATE VARCHAR(8),
	PAID_D_TOTAL FLOAT,
	COLLECTION_D_TOTAL FLOAT,
	CAUSE_CODE VARCHAR(25),
	CLAIMANT_LASTNAME VARCHAR(255),
	CLAIMANT_FIRSTNAME VARCHAR(255),
	CLAIMANT_SSN VARCHAR(20),
	CLAIMANT_ADDRESS1 VARCHAR(100),
	CLAIMANT_ADDRESS2 VARCHAR(100),
    	CLAIMANT_CITY VARCHAR(50),
	CLAIMANT_STATE VARCHAR(4),
    	CLAIMANT_ZIP VARCHAR(10),
	CLAIMANT_SEX VARCHAR(25),
    	CLAIMANT_BIRTH_DT VARCHAR(8),
	CLAIMANT_PHONE VARCHAR(30),
	CLAIMANT_COMMENT VARCHAR(MAX),
	DEF_LASTNAME VARCHAR(255),
	DEF_FIRSTNAME VARCHAR(255),
	DEF_ADDRESS VARCHAR(100),
    	DEF_CITY VARCHAR(50),
	DEF_STATE VARCHAR(4),
    	DEF_ZIP VARCHAR(10),
	DEF_PHONE VARCHAR(30),
	DEF_COMMENT VARCHAR(MAX),
	CLOSURE_METHOD VARCHAR (25),
	DESCRIPTION VARCHAR(MAX),
	SERVICE VARCHAR (25),
	ICD10_1 VARCHAR (25),
	ICD10_2 VARCHAR (25),
	ICD10_3 VARCHAR (25),
	ICD10_4 VARCHAR (25),
	ICD10_5 VARCHAR (25),
	DIAGNOSIS_1 VARCHAR (25),
	DIAGNOSIS_2 VARCHAR (25),
	DIAGNOSIS_3 VARCHAR (25),
	DIAGNOSIS_4 VARCHAR (25),
	DIAGNOSIS_5 VARCHAR (25),
	POLICY_NUMBER VARCHAR (40),
	POLICY_EFFECT_DATE VARCHAR (8),
	POLICY_EXPIRE_DATE VARCHAR (8),
	SUIT_DATE VARCHAR (8),
	CASE_NUMBER VARCHAR (22),
	EVENT_NUMBER VARCHAR (25),
	COMMENTS VARCHAR(MAX),
	ILLNESS_CODE VARCHAR (25),
	INJURY_CODE_1 VARCHAR (25),
	INJURY_CODE_2 VARCHAR (25),
	INJURY_CODE_3 VARCHAR (25),
	INJURY_CODE_4 VARCHAR (25),
	INJURY_CODE_5 VARCHAR (25),
	BODY_PART_1 VARCHAR (25),
	BODY_PART_2 VARCHAR (25),
	BODY_PART_3 VARCHAR (25),
	BODY_PART_4 VARCHAR (25),
	BODY_PART_5 VARCHAR (25),
	EMP_DEPARTMENT VARCHAR (25),
	OCCUPATION VARCHAR (25),
	DATE_OF_BIRTH VARCHAR (8),
	DATE_OF_HIRE VARCHAR (8),
	DATE_OF_DEATH VARCHAR (8),
	OSHA_RECORDABLE VARCHAR (8),
	EMPLOYEE_SEX VARCHAR (25),
	WEEKLY_WAGE_RATE FLOAT,
	HOURLY_WAGE_RATE FLOAT,
	WEEKLY_HOURS FLOAT,
	NCCI_CLASS_CODE VARCHAR (25),
	ACCIDENT_STATE VARCHAR (4),
	MARITAL_STATUS VARCHAR (25),
	DEPENDENT_LNAME VARCHAR (255),
	DEPENDENT_FNAME VARCHAR (255),
	DEPENDENT_BIRTH_DT VARCHAR (8),
	LICENSE_NUMBER VARCHAR (22),
	LICENSE_EXPIR_DATE VARCHAR (8),
	LICENSE_TYPE VARCHAR (25),
	LICENSE_RESTRICT VARCHAR (25),
	RETURN_WORK_DATE VARCHAR (8),
	ACTIVE_FLAG VARCHAR (1),
	EMPLOYER_SIC_CODE VARCHAR (25),
	EMPLOYER_PAYROLL_CLASS_CODE VARCHAR (25),
	VEHICLE_ID VARCHAR (20),
	VEHICLE_YEAR VARCHAR (4),
	VEHICLE_MAKE VARCHAR (20),
	EMPLOYEE_ID VARCHAR (20),
	VEHICLE_MODEL VARCHAR (50),
	FILE_NUMBER VARCHAR (32),
	DATE_LAST_WORKED VARCHAR (8),
	CLAIMANT_MIDDLENAME VARCHAR (255),
	ACCIDENT_DESC VARCHAR (25),
	ACCIDENT_PREVENTABLE VARCHAR (1),
	USER_FIELD_A VARCHAR (MAX),
	USER_FIELD_B VARCHAR (255),
	USER_FIELD_C VARCHAR (255),
	USER_FIELD_D VARCHAR (255),
	USER_FIELD_E VARCHAR (255),
	USER_FIELD_F VARCHAR (255),
	USER_FIELD_G VARCHAR (255),
	USER_FIELD_H VARCHAR (255),
	USER_FIELD_I VARCHAR (255),
	USER_FIELD_J VARCHAR (255),
	USER_FIELD_K VARCHAR (255),
	USER_FIELD_L VARCHAR (255),
	USER_FIELD_M VARCHAR (255),
	USER_FIELD_N VARCHAR (255),
	USER_FIELD_O VARCHAR (255),
	USER_FIELD_P VARCHAR (255),
	USER_FIELD_Q VARCHAR (255),
	USER_FIELD_R VARCHAR (255),
	USER_FIELD_S VARCHAR (255),
	USER_FIELD_T VARCHAR (255),
	USER_FIELD_U VARCHAR (255),
	USER_FIELD_V VARCHAR (255),
	USER_FIELD_W VARCHAR (255),
	USER_FIELD_X VARCHAR (255),
	USER_FIELD_Y VARCHAR (255),
	USER_FIELD_Z VARCHAR (255),
	PLAN_NAME VARCHAR (20),
	CLASS_NAME VARCHAR (20),
	DISABIL_FROM_DATE VARCHAR (8),
	DISABIL_TO_DATE VARCHAR (8),
	BENEFITS_START VARCHAR (8),
	BENEFITS_THROUGH VARCHAR (8),
	DIS_TYPE VARCHAR (25),
	BEN_CALC_PAY_START VARCHAR (8),
	BEN_CALC_PAY_TO VARCHAR (8),
	FEDERAL_TAX_FLAG VARCHAR (1),
	SOCIAL_SEC_TAX_FLAG VARCHAR (1),
	MEDICARE_TAX_FLAG VARCHAR (1),
	STATE_TAX_FLAG VARCHAR (1),
	STD_DISABIL_TYPE VARCHAR (25),
	MONTHLY_RATE FLOAT,
	ELIG_DIS_BEN_FLAG VARCHAR (1),
	DIS_OPTION_CODE VARCHAR (25),
	PENSION_AMT FLOAT,
	SS_AMT FLOAT,
	OTHER_AMT FLOAT,
	RESERVE_E_OPENING FLOAT,
	RESERVE_E_CURRENT FLOAT,
	RESERVE_E_DATE VARCHAR(8),
	PAID_E_TOTAL FLOAT,
	COLLECTION_E_TOTAL FLOAT,
	CLAIMANT_TYPE VARCHAR (25),
	OSHA_ACC_DESC VARCHAR (16),
	DATE_WORKED_LAST VARCHAR (8),
	DATE_RETURNED VARCHAR (8),
	STATE_DURATION VARCHAR(4),
	DATE_FIRST_RESTRICT VARCHAR(8),
	DATE_LAST_RESTRICT VARCHAR(8),
	PERCENT_DISABLED VARCHAR(4),
	SETTLEMENT_METHOD VARCHAR(25),
	MGND_CARE_ORG_TYPE VARCHAR(25),
	DISPUTED_CASE_FLAG VARCHAR(1),
	NCCI_LOSS_TYPE_LOSS_CODE VARCHAR(25),
	NCCI_LOSS_TYPE_RECOV_CODE VARCHAR(25),
	TREATMENT_CODE VARCHAR(25),
	CLAIMANT_STATUS VARCHAR(25),
	NAME_TYPE VARCHAR(25),
	BENEFICIARY_CODE VARCHAR(25),
	INFO_REQ_DATE VARCHAR(8),
	PROOF_OF_LOSS_DATE VARCHAR(8),
	CLAIM_CAUSE_CODE VARCHAR(25),
	DEF_BIRTH_DT VARCHAR(8),
	POLICY_LOB VARCHAR(25),
	CURR_CODE VARCHAR(25),
	CLAIM_TYPE_DATE_CHANGED VARCHAR(8), 
	REVIEW_STATUS_CODE VARCHAR(25), 
	REVIEW_STATUS_DATE_CHANGED VARCHAR(8),
	REVIEW_REASON VARCHAR(2000), 
	CLAIM_TYPE_REASON VARCHAR(2000)
 CONSTRAINT [PK_DDS_CLAIM] PRIMARY KEY CLUSTERED 
(
	DA_ROW_ID ASC,
	JOBID ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) 
END


IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_EVENT]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DDS_EVENT]


IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME = 'DDS_EVENT')
BEGIN
	CREATE TABLE [DBO].[DDS_EVENT](
		JOBID INT NOT NULL,
		DA_ROW_ID INT NOT NULL,				
		INVALID_ROW INT NULL,
		UPDATE_ROW INT NULL,	        
		INPUT_ROW_ID INT NULL,
		EVENT_NUMBER NVARCHAR(25)  ,             
		EVENT_TYPE_CODE	NVARCHAR(25),
		EVENT_STATUS_CODE	NVARCHAR(25),
		EVENT_IND_CODE	NVARCHAR(25),
		EVENT_DESCRIPTION	NVARCHAR(MAX),
		BRIEF_DESCRIPTION	NVARCHAR(250),
		DEPARTMENT	NVARCHAR(25),
		DEPT_INVOLVED	NVARCHAR(25),
		ADDR1	NVARCHAR(100),
		ADDR2	NVARCHAR(100),
		CITY	NVARCHAR(50),
		STATE	NVARCHAR(4),
		ZIP_CODE	NVARCHAR(10),
		COUNTRY	NVARCHAR (20),
		COUNTY_OF_INJURY	NVARCHAR(50),
		LOCATION_AREA_DESC	NVARCHAR(MAX),
		PRIMARY_LOC_CODE	NVARCHAR(25),
		LOCATION_TYPE_CODE	NVARCHAR(25),
		ON_PREMISE_FLAG	NVARCHAR(1),
		NO_OF_INJURIES	INT,
		NO_OF_FATALITIES	INT,
		CAUSE_CODE	NVARCHAR(25),
		DATE_OF_EVENT	NVARCHAR(8),
		TIME_OF_EVENT	NVARCHAR(6),
		DATE_REPORTED	NVARCHAR(8),
		TIME_REPORTED	NVARCHAR(6),
		REPORTED_TAX_ID	NVARCHAR(20),
		REPORTED_LAST_NAME	NVARCHAR(255),
		REPORTED_FIRST_NAME	NVARCHAR(255),
		REPORTED_ADDR1	NVARCHAR(100),
		REPORTED_ADDR2	NVARCHAR(100),
		REPORTED_CITY 	NVARCHAR(50),
		REPORTED_STATE	NVARCHAR(4),
		REPORTED_ZIP_CODE	NVARCHAR(10),
		REPORTED_PHONE	NVARCHAR(30),
		COMMENTS	NVARCHAR(MAX),
		ACTIVITY_WHEN_INJ	NVARCHAR(255),
		HOW_ACC_OCCURRED	NVARCHAR(255),
		OBJ_SUBST_THAT_INJ	NVARCHAR(255),
		RECORDABLE_FLAG	NVARCHAR(1),
		SAFEG_NOTUSED_FLAG	NVARCHAR(1),
		SAFEGUARD_FLAG	NVARCHAR(1),
		NO_RULES_FLAG	NVARCHAR(1),
		DATE_PHYS_ADVISED	NVARCHAR(8),
		TIME_PHYS_ADVISED	NVARCHAR(6),		
		ACTION_1_CODE NVARCHAR(25),
		ACTION_2_CODE NVARCHAR(25),
		ACTION_3_CODE NVARCHAR(25),
		ACTION_4_CODE NVARCHAR(25),
		ACTION_5_CODE NVARCHAR(25),
		OUTCOME_1_CODE NVARCHAR(25),
		OUTCOME_2_CODE NVARCHAR(25),
		OUTCOME_3_CODE NVARCHAR(25),
		OUTCOME_4_CODE NVARCHAR(25),
		OUTCOME_5_CODE NVARCHAR(25),
		DATE_TO_FOLLOW_UP	NVARCHAR(8),
		TREATMENT_GIVEN 	NVARCHAR (1),
		RELEASE_SIGNED 	NVARCHAR(1),
		DEPT_HEAD_ADVISED 	NVARCHAR(1),
		PHYS_NOTES	NVARCHAR(MAX),
		DATE_CARRIER_NOTIF	NVARCHAR(8),
		PI_SUFFIX	INT,
		PI_TAX_ID	NVARCHAR(20),
		PI_LAST_NAME	NVARCHAR(255),
		PI_FIRST_NAME	NVARCHAR(255),
		PI_ADDR1	NVARCHAR(100),
		PI_ADDR2	NVARCHAR(100),
		PI_CITY	NVARCHAR(50),
		PI_STATE	NVARCHAR(4),
		PI_ZIP_CODE	NVARCHAR (10),
		PI_PHONE	NVARCHAR (30) ,
		PI_TYPE_CODE	NVARCHAR(50),
		MARITAL_STAT_CODE	NVARCHAR(1),
		SEX_CODE	NVARCHAR(8),
		BIRTH_DATE	NVARCHAR(8),
		DATE_OF_DEATH	NVARCHAR(8),
		ILLNESS_CODE	NVARCHAR(25),
		INJURY_1_CODE NVARCHAR(25),
		INJURY_2_CODE NVARCHAR(25),
		INJURY_3_CODE NVARCHAR(25),
		INJURY_4_CODE NVARCHAR(25),
		INJURY_5_CODE NVARCHAR(25),
		BODY_PART_1_CODE NVARCHAR(25),
		BODY_PART_2_CODE NVARCHAR(25),
		BODY_PART_3_CODE NVARCHAR(25),
		BODY_PART_4_CODE NVARCHAR(25),
		BODY_PART_5_CODE NVARCHAR(25),
		--DIAGNOSIS_10_CODE NVARCHAR(25), --asharma590 jira 74846
		DIAGNOSIS_1_CODE NVARCHAR(25),
		DIAGNOSIS_2_CODE NVARCHAR(25),
		DIAGNOSIS_3_CODE NVARCHAR(25),
		DIAGNOSIS_4_CODE NVARCHAR(25),
		DIAGNOSIS_5_CODE NVARCHAR(25),
		TREATMENT_1_CODE NVARCHAR(25),
		TREATMENT_2_CODE NVARCHAR(25),
		TREATMENT_3_CODE NVARCHAR(25),
		TREATMENT_4_CODE NVARCHAR(25),
		TREATMENT_5_CODE NVARCHAR(25),
		PHYSICIAN_1_LAST_NAME NVARCHAR(255),
		PHYSICIAN_1_FIRST_NAME	NVARCHAR(255),
		PHYSICIAN_1_PHONE	NVARCHAR(30),
		PHYSICIAN_2_LAST_NAME NVARCHAR(255),
		PHYSICIAN_2_FIRST_NAME	NVARCHAR(255),
		PHYSICIAN_2_PHONE	NVARCHAR(30),
		PHYSICIAN_3_LAST_NAME NVARCHAR(255),
		PHYSICIAN_3_FIRST_NAME	NVARCHAR(255),
		PHYSICIAN_3_PHONE	NVARCHAR(30),
		HOSPITAL_1_NAME	NVARCHAR(255),
		HOSPITAL_1_PHONE	NVARCHAR(30),
		HOSPITAL_2_NAME	NVARCHAR(255),
		HOSPITAL_2_PHONE	NVARCHAR(30),
		HOSPITAL_3_NAME	NVARCHAR(255),
		HOSPITAL_3_PHONE	NVARCHAR(30),
		DRIVERS_LIC_NO	NVARCHAR(20),		
		DRIVERSLICTYPECODE	NVARCHAR(25),
		DATE_DRIVERSLICEXP	NVARCHAR(8),
		DRIVLIC_RSTRCT_CODE	NVARCHAR(25),		
		DRIVLIC_STATE	NVARCHAR(4),
		COUNTY_OF_RESIDNC	NVARCHAR(50),	
		NCCI_CLASS_CODE	NVARCHAR(25),	
		EST_LEN_DISABILITY	INT,
		INSURABLE_FLAG	NVARCHAR(1)		,
		LAST_VERIFIED_DATE	NVARCHAR(8),		
		PATIENT_ACCT_NO	NVARCHAR(20),
		MEDICAL_RCD_NO	NVARCHAR(12),
		INS_PLAN_GROUP_NO	NVARCHAR(16),
		DATE_OF_ADMISSION	NVARCHAR(8),
		DATE_OF_DISCHARGE	NVARCHAR(8),
		ADM_TYPE_CODE	NVARCHAR(25),
		ADM_SOURCE_CODE	NVARCHAR(25),
		ADMISSION_REASON	NVARCHAR(MAX),
		ACUITY_LEVEL_CODE	NVARCHAR(25),
		PATIENT_STAT_CODE	NVARCHAR(25),
		PATIENT_COND_CODE	NVARCHAR(25),
		DISCHARGE_DSP_CODE	NVARCHAR(25),
		EXP_LENGTH_OF_STAY	INT,
		EXPECTED_COST	 	DECIMAL(20,2),
		QI_SIGNIF_CODE	NVARCHAR(25),
		EPISODE_OF_CARE_ID	NVARCHAR(8),
		PATIENT_TYPE_CODE	NVARCHAR(25),
		WEIGHT INT,
		EMERGENCY_CONTACT	NVARCHAR(20),
		EMERGENCY_CONT_NO	NVARCHAR(20),
		PATIENT_ROOM_NO	NVARCHAR(14),
		FACILITY_UNIT_CODE	NVARCHAR(25),
		FACILITY_DEPT	NVARCHAR(25),
		HCO_ID_NO	NVARCHAR(20),
		HCO_SITE_ID_NO	NVARCHAR(20),
		WHY_AT_FACILITY	NVARCHAR(MAX),
		DISABILITY_CODE	NVARCHAR(25),			
		EMPLOYEE_NUMBER	NVARCHAR(20),			
		POSITION_CODE	NVARCHAR(25),			
		DEPT_ASSIGNED	NVARCHAR(25),			
		SUPER_TAX_ID	NVARCHAR(20),
		SUPER_EMP_NO	NVARCHAR(20),		
		SUPER_LAST_NAME	NVARCHAR(255),
		SUPER_FIRST_NAME	NVARCHAR(255),			
		SUPER_ADDR1	NVARCHAR(100),
		SUPER_ADDR2	NVARCHAR(100),
		SUPER_CITY	NVARCHAR(50),
		SUPER_STATE	NVARCHAR(4),
		SUPER_ZIP_CODE	NVARCHAR(10),
		SUPER_PHONE1	NVARCHAR(30),
		FULL_TIME_FLAG	NVARCHAR(1),
		PAY_TYPE_CODE	NVARCHAR(25),
		HOURLY_RATE	DECIMAL(20,2),
		WEEKLY_HOURS	DECIMAL(20,2),
		WEEKLY_RATE	DECIMAL(20,2),
		PAY_AMOUNT	DECIMAL(20,2),
		ACTIVE_FLAG	NVARCHAR(1),
		DATE_HIRED	NVARCHAR(8),
		DATE_LAST_WORKED_1  NVARCHAR(8),
		DATE_RETURNED_1  NVARCHAR(8),
		DATE_LAST_WORKED_2  NVARCHAR(8),
		DATE_RETURNED_2  NVARCHAR(8),
		DATE_LAST_WORKED_3  NVARCHAR(8),
		DATE_RETURNED_3  NVARCHAR(8),
		DATE_LAST_WORKED_4  NVARCHAR(8),
		DATE_RETURNED_4  NVARCHAR(8),
		DATE_LAST_WORKED_5  NVARCHAR(8),
		DATE_RETURNED_5  NVARCHAR(8),
		DATE_LAST_WORKED_6  NVARCHAR(8),
		DATE_RETURNED_6  NVARCHAR(8),
		DATE_LAST_WORKED_7  NVARCHAR(8),
		DATE_RETURNED_7  NVARCHAR(8),
		DATE_LAST_WORKED_8  NVARCHAR(8),
		DATE_RETURNED_8  NVARCHAR(8),
		DATE_LAST_WORKED_9  NVARCHAR(8),
		DATE_RETURNED_9  NVARCHAR(8),
		DATE_LAST_WORKED_10  NVARCHAR(8),
		DATE_RETURNED_10 NVARCHAR(8),
		DATE_LAST_WORKED_11  NVARCHAR(8),
		DATE_RETURNED_11  NVARCHAR(8),
		DATE_LAST_WORKED_12  NVARCHAR(8),
		DATE_RETURNED_12 NVARCHAR(8),
		DATE_LAST_WORKED_13  NVARCHAR(8),
		DATE_RETURNED_13  NVARCHAR(8),
		DATE_LAST_WORKED_14 NVARCHAR(8),
		DATE_RETURNED_14  NVARCHAR(8),
		DATE_LAST_WORKED_15  NVARCHAR(8),
		DATE_RETURNED_15  NVARCHAR(8),
		LOST_WORK_FLAG	NVARCHAR(134),
		LEN_OF_SVC_DAYS	NVARCHAR(1),
		EXEMPT_STATUS_FLAG	NVARCHAR(1),
		NO_OF_EXEMPTIONS	NVARCHAR(1),
		WORK_SUN_FLAG	NVARCHAR(1),
		WORK_MON_FLAG	NVARCHAR(1),
		WORK_TUE_FLAG	NVARCHAR(1),
		WORK_WED_FLAG	NVARCHAR(1),
		WORK_THU_FLAG	NVARCHAR(1),
		WORK_FRI_FLAG	NVARCHAR(1),
		WORK_SAT_FLAG	NVARCHAR(1),
		WORKDAY_START_TIME	NVARCHAR(6),
		WORK_PERMIT_DATE	NVARCHAR(8),
		WORK_PERMIT_NUMBER	NVARCHAR(50),
		REGULAR_JOB_FLAG	NVARCHAR(1),
		HIRED_IN_STATE_FLAG	NVARCHAR(1),
		NUM_OF_VIOLATION INT,
		DESC_BY_WITNESS	NVARCHAR(MAX),
		USER_FIELD_A	NVARCHAR(MAX),
		USER_FIELD_B	NVARCHAR(255),
		USER_FIELD_C	NVARCHAR(255),
		USER_FIELD_D	NVARCHAR(255),
		USER_FIELD_E	NVARCHAR(255),
		USER_FIELD_F	NVARCHAR(255),
		USER_FIELD_G	NVARCHAR(255),
		USER_FIELD_H	NVARCHAR(255),
		USER_FIELD_I	NVARCHAR(255),
		USER_FIELD_J	NVARCHAR(255),
		USER_FIELD_K	NVARCHAR(255),
		USER_FIELD_L	NVARCHAR(255),
		USER_FIELD_M	NVARCHAR(255),
		USER_FIELD_N	NVARCHAR(255),
		USER_FIELD_O	NVARCHAR(255),
		USER_FIELD_P	NVARCHAR(255),
		USER_FIELD_Q	NVARCHAR(255),
		USER_FIELD_R	NVARCHAR(255),
		USER_FIELD_S	NVARCHAR(255),
		USER_FIELD_T	NVARCHAR(255),
		USER_FIELD_U	NVARCHAR(255),
		USER_FIELD_V	NVARCHAR(255),
		USER_FIELD_W	NVARCHAR(255),
		USER_FIELD_X	NVARCHAR(255),
		USER_FIELD_Y	NVARCHAR(255),
		COND_PRIOR_CODE	NVARCHAR(25),
		RAIL_POSITION_CODE	NVARCHAR(25),
		RESTRAINT_CODE	NVARCHAR(25),
		BED_POSITION_CODE	NVARCHAR(25),
		CALL_LIGHT_CODE	NVARCHAR(25),
		REPORTED_COUNTRY	NVARCHAR(25),
		REPORTED_PHONE2	NVARCHAR(30),
		REPORTED_FAX	NVARCHAR(30),
		PI_MIDDLE_NAME	NVARCHAR(255),
		PRIVACY_CASE_FLAG	NVARCHAR(1),
		SHARPS_OBJECT	NVARCHAR(25),
		SHARPS_BRAND_MAKE	NVARCHAR(25),
		SAFEG_PROVIDED	NVARCHAR(1),
		RULES_NOT_FOLLOWED	NVARCHAR(1),
		OSHA_ESTAB_EID	NVARCHAR(25),
		NAME_TYPE	NVARCHAR(25),
		REPORTED_BIRTH_DT NVARCHAR(8),
		BENEFICIARY_CODE NVARCHAR(25)
	 CONSTRAINT [DDS_EVENT_PK] PRIMARY KEY CLUSTERED 
	(	DA_ROW_ID ASC,
		JOBID ASC
		
	)WITH 
	(PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  
	= ON ) 
	ON [PRIMARY]
	) 
--NOTE: THE USER ID AND JOB ID OF IT WILL BE PASSED IN XML STRING WHICH WILL BE TAKEN IN LAST TO EXECUTE THE DATA FROM THIS TABLE
END

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_PAYMENT]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DDS_PAYMENT]


IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME = 'DDS_PAYMENT')
BEGIN

CREATE TABLE DDS_PAYMENT(
	DA_ROW_ID INT NOT NULL,
	JOBID INT NOT NULL,
	INVALID_ROW INT,
	RECORD_TYPE VARCHAR(1),
	TRANSACTION_TYPE VARCHAR(1),
	CLAIM_ID VARCHAR(25),
	ACTIVITY_DATE VARCHAR(8),
	TYPE_FLAG VARCHAR(1),
	AMOUNT FLOAT,
	MEMO VARCHAR(255),
	CARRIER VARCHAR(16),
	ADJUSTER VARCHAR(16),
	CHECK_NO VARCHAR(25),
	CHECK_SUFFIX INT,
	CHECK_STATUS VARCHAR(25),
	TYPE_CODE VARCHAR(25),
	PAYEE_TYPE VARCHAR(25),
	PAYEE_TAX_ID_NO VARCHAR(20),
	PAYEE_LASTNAME VARCHAR(255),
	PAYEE_FIRSTNAME VARCHAR(255),
	PAYEE_ADDRESS VARCHAR(100),
	PAYEE_CITY VARCHAR(50),
	PAYEE_STATE VARCHAR(4),
	PAYEE_ZIP VARCHAR(10),
	TRANSACTION_DATE VARCHAR(8),
	REPORT_1099_FLAG VARCHAR(1),
	SERVICE_FROM_DATE VARCHAR(8),
	SERVICE_TO_DATE VARCHAR(8),
	CLEARED_FLAG VARCHAR(1),
	DATE_CLEARED VARCHAR(8),
	BANK_ACCOUNT_NUM VARCHAR(20),
	BANK_SUB_ACCNT_NUM VARCHAR(20),
	PAYEE_ADDRESS2 VARCHAR(100),
	USER_FIELD_A VARCHAR(MAX),
	USER_FIELD_B VARCHAR(255),
	USER_FIELD_C VARCHAR(255),
	USER_FIELD_D VARCHAR(255),
	USER_FIELD_E VARCHAR(255),
	USER_FIELD_F VARCHAR(255),
	USER_FIELD_G VARCHAR(255),
	USER_FIELD_H VARCHAR(255),
	USER_FIELD_I VARCHAR(255),
	USER_FIELD_J VARCHAR(255),
	USER_FIELD_K VARCHAR(255),
	USER_FIELD_L VARCHAR(255),
	USER_FIELD_M VARCHAR(255),
	USER_FIELD_N VARCHAR(255),
	USER_FIELD_O VARCHAR(255),
	USER_FIELD_P VARCHAR(255),
	USER_FIELD_Q VARCHAR(255),
	USER_FIELD_R VARCHAR(255),
	USER_FIELD_S VARCHAR(255),
	USER_FIELD_T VARCHAR(255),
	USER_FIELD_U VARCHAR(255),
	USER_FIELD_V VARCHAR(255),
	USER_FIELD_W VARCHAR(255),
	USER_FIELD_X VARCHAR(255),
	USER_FIELD_Y VARCHAR(255),
	USER_FIELD_Z VARCHAR(255),
	INVOICE_NUMBER VARCHAR(25),
	CLAIMANT_SUFFIX INT,
	RES_STATUS_CODE VARCHAR(25),
	UNIT_TYPE VARCHAR(10),
	POLICY_NAME VARCHAR(20),
	UNIT_NUMBER VARCHAR(10),
	COVERAGE_CODE VARCHAR(25),
	LOSS_CODE VARCHAR(25),
	RESERVE_SUB_TYPE VARCHAR(25),
	DISABILITY_CATEGORY VARCHAR(25),
	VOID_CODE_REASON VARCHAR(255),
	MODULE_NO VARCHAR(10),
	PREFIX VARCHAR(25),
	SUFFIX_COMMON VARCHAR(25),
	SUFFIX_LEGAL VARCHAR(50),
	MEMO_PHRASE VARCHAR(50),
	CLASS_CODE VARCHAR(25),
	CVG_SEQUENCE_NO VARCHAR(8),
	TRANS_SEQ_NO VARCHAR(8),
	CVG_DESC VARCHAR(100),
	SUBLINE_DESC VARCHAR(100),
	CLASS_DESC VARCHAR(100),
	STAT_UNIT_NUMBER VARCHAR(10),
	POLICY_CVG_SEQNO VARCHAR(10),
	RESERVE_TYPE VARCHAR(25),
	NAME_TYPE VARCHAR(25),
	POLICY_NUMBER VARCHAR(40),
	POLICY_SYMBOL VARCHAR(20),
	MASTER_COMPANY VARCHAR(10),
	LOCATION_COMPANY VARCHAR(10),
	DSTRBN_TYPE_CODE VARCHAR(25),
	PAYEE_DOB VARCHAR(8),
	REGION VARCHAR(4),
	BEN_REVIEW_DATE VARCHAR(8),
	EOB_REMARKS_CODE_1 VARCHAR(25),
	EOB_REMARKS_CODE_2 VARCHAR(25),
	EOB_REMARKS_CODE_3 VARCHAR(25),
	EOB_REMARKS_CODE_4 VARCHAR(25),
	EOB_REMARKS_CODE_5 VARCHAR(25),
	EOB_PRINTED_DATE VARCHAR(8),
	EOB_PRINTED_BY_USER VARCHAR(50),
	UNIT_FIRST_NAME VARCHAR(255),
	UNIT_LAST_NAME VARCHAR(255),
	UNIT_TAX_ID VARCHAR(20),
	UNIT_DOB VARCHAR(8),
	CLMNT_LAST_NAME VARCHAR(255),
	CLMNT_FIRST_NAME VARCHAR(255),
	CLMNT_TAX_ID VARCHAR(20),
	EMP_NUM VARCHAR(20),
	UNIT_ID VARCHAR(20),
	PMT_CURR_CODE VARCHAR(25),
	PMT_TO_BASE_CURR_RATE DECIMAL(20,2),
	PMT_TO_POL_CURR_RATE DECIMAL(20,2),
	PMT_TO_CLM_CURR_RATE DECIMAL(20,2),
	CLM_TO_BASE_CURR_RATE DECIMAL(20,2),
	CLM_TO_POL_CURR_RATE DECIMAL(20,2)
	CONSTRAINT PK_DDS_PAYMENT PRIMARY KEY CLUSTERED 
	(
	JOBID ASC,
	DA_ROW_ID ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON)
	) ON [PRIMARY]
END


IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_ADJUSTER]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DDS_ADJUSTER]


IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DDS_ADJUSTER') 
BEGIN
CREATE TABLE DDS_ADJUSTER(
              JOBID INT NOT NULL,
              DA_ROW_ID  INT NOT NULL,
              INVALID_ROW INT NOT NULL,
              RECORD_TYPE VARCHAR(25),
              CLAIM_ID VARCHAR(25),
              ADJ_DATE VARCHAR(8),
              ADJ_TIME VARCHAR(6),
              FIRST_NAME VARCHAR(255),
              LAST_NAME VARCHAR(255),
              TEXT VARCHAR(MAX),
              ADJUSTER_TYPE VARCHAR(25),
              NAME_TYPE VARCHAR(25)
       CONSTRAINT PK_DDS_ADJUSTER PRIMARY KEY   (
       JOBID,
       DA_ROW_ID
       )
       )
END

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DA_STATISTICS]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DA_STATISTICS]


IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DA_STATISTICS') 
BEGIN
	CREATE TABLE [dbo].[DA_STATISTICS] (
		[JOBID] [int] NOT NULL,
		[PASS_COUNT] [int] NOT NULL,
		[STAGE] [int] NULL,
		[IS_VALIDATION] [int] NULL,
		[IMPORT_MODULE_NAME] [varchar](50) NULL,
		[TABLE_NAME] [varchar](50) NOT NULL,
		[INPUT_ROW_COUNT] [int] NULL,
		[START_VALID_ROW_COUNT] [int] NULL,
		[START_INVALID_ROW_COUNT] [int] NULL,
		[END_VALID_ROW_COUNT] [int] NULL,
		[END_INVALID_ROW_COUNT] [int] NULL,
		[END_UPDATE_ROW_COUNT] [int] NULL,
		[TOTAL_ROWS] [int] NULL,
		[TOTAL_FAILED_VALIDATIONS] [int] NULL,
		[START_TIME] [varchar](14) NULL,
		[END_TIME] [varchar](14) NULL,
	 CONSTRAINT [PK_DA_STATISTICS] PRIMARY KEY CLUSTERED
	(
		[JOBID] ASC,
		[PASS_COUNT] ASC,
		[TABLE_NAME] ASC
	) WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
	) ON [PRIMARY]
END

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[USER_VERIFICATION]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[USER_VERIFICATION]


IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'USER_VERIFICATION') 
BEGIN
	CREATE TABLE [dbo].[USER_VERIFICATION](     
		[JOBID] [int] NULL,
		[OPTIONSET_ID] [int] NULL,
		[MODULE_NAME] [varchar](25) NULL,
		[IMPORT_AREA] [varchar](25) NULL,
		[TABLE_NAME] [varchar](4000) NULL,
		[VERIFICATION_FLAG] [int] NULL,
		[STOP_VERIFICATION] [int] NULL
	) ON [PRIMARY]
END

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DA_JOB_ID]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DA_JOB_ID]

IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DA_JOB_ID') 
BEGIN
	CREATE TABLE [dbo].[DA_JOB_ID]( 
		[NEW_JOBID] [int] NULL,
		[JOBID] [int] NOT NULL,
		[OPTIONSET_ID] [int] NOT NULL
	) ON [PRIMARY]
END


--IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DDS_EVENT_USR_SUPP_MAP]') AND type in (N'U'))
--DROP TABLE [dbo].[DDS_EVENT_USR_SUPP_MAP]


IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DDS_EVENT_USR_SUPP_MAP') 
BEGIN
CREATE TABLE [dbo].[DDS_EVENT_USR_SUPP_MAP](
      [OPTIONSET_ID] [int] NULL,
      [CONFIG_ID] [int] NULL,
      [USER_ID] [int] NULL,
      [FIELD_NUM] [varchar](10) NULL,
      [USER_FIELD_NAME] [varchar](25) NULL,
      [MAP_FLAG] [varchar](10) NULL,
      [FIELD_TYPE] [varchar](25) NULL,
      [MAPPED_TABLE] [varchar](50) NOT NULL,
      [MAPPED_FIELD] [varchar](50) NOT NULL,
      [NULL_FLAG] [varchar](10) NULL,
      [VALIDATE_FLAG] [varchar](10) NULL,
      [CODE_TABLE_ID] [varchar](10) NULL
) ON [PRIMARY]
END


--IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DDS_CLAIM_USR_SUPP_MAP]') AND type in (N'U'))
--DROP TABLE [dbo].[DDS_CLAIM_USR_SUPP_MAP]


IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DDS_CLAIM_USR_SUPP_MAP') 
BEGIN
CREATE TABLE [dbo].[DDS_CLAIM_USR_SUPP_MAP](
    [OPTIONSET_ID] [int] NULL,
      [CONFIG_ID] [int] NULL,
      [USER_ID] [int] NULL,
      [FIELD_NUM] [varchar](10) NULL,
      [USER_FIELD_NAME] [varchar](25) NULL,
      [MAP_FLAG] [varchar](10) NULL,
      [FIELD_TYPE] [varchar](25) NULL,
      [MAPPED_TABLE] [varchar](50) NOT NULL,
      [MAPPED_FIELD] [varchar](50) NOT NULL,
      [NULL_FLAG] [varchar](10) NULL,
      [VALIDATE_FLAG] [varchar](10) NULL,
      [CODE_TABLE_ID] [varchar](10) NULL
) ON [PRIMARY]

END


--IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DDS_PAYMENT_USR_SUPP_MAP]') AND type in (N'U'))
--DROP TABLE [dbo].[DDS_PAYMENT_USR_SUPP_MAP]


IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DDS_PAYMENT_USR_SUPP_MAP') 
BEGIN
CREATE TABLE [dbo].[DDS_PAYMENT_USR_SUPP_MAP](
      [OPTIONSET_ID] [int] NULL,
      [CONFIG_ID] [int] NULL,
      [USER_ID] [int] NULL,
      [FIELD_NUM] [varchar](10) NULL,
      [USER_FIELD_NAME] [varchar](25) NULL,
      [MAP_FLAG] [varchar](10) NULL,
      [FIELD_TYPE] [varchar](25) NULL,
      [MAPPED_TABLE] [varchar](50) NOT NULL,
      [MAPPED_FIELD] [varchar](50) NOT NULL,
      [NULL_FLAG] [varchar](10) NULL,
      [VALIDATE_FLAG] [varchar](10) NULL,
      [CODE_TABLE_ID] [varchar](10) NULL
) ON [PRIMARY]
END


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DDS_SUPP_GLOSSARY ]') AND type in (N'U'))
DROP TABLE [dbo].[DDS_SUPP_GLOSSARY]


IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DDS_SUPP_GLOSSARY') 
BEGIN
CREATE TABLE [dbo].[DDS_SUPP_GLOSSARY](
      [TABLE_ID] [int] NULL,
      [SYSTEM_TABLE_NAME] [varchar](25) NULL,
      [ALLOW_CLAIM_MAP] [varchar](10) NULL,
      [ALLOW_PAY_MAP] [varchar](25) NULL,
      [ALLOW_EVENT_MAP] [varchar](50) NULL,
      [ALLOW_PLAN_MAP] [varchar](50) NULL,
      [ALLOW_MEDWATCH_MAP] [varchar](10) NULL      
) ON [PRIMARY]
END


--IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DDS_SUPPLEMENTAL_RUNTIME_DATA]') AND type in (N'U'))
--DROP TABLE [dbo].[DDS_SUPPLEMENTAL_RUNTIME_DATA]


IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DDS_SUPPLEMENTAL_RUNTIME_DATA') 
BEGIN
CREATE TABLE [DDS_SUPPLEMENTAL_RUNTIME_DATA] ( 
	[JOBID]  [INT] NULL, 
	[DA_ROW_ID] [INT] NULL, 
	[UPDATE_ROW] [INT] NULL, 
	[INVALID_ROW] [INT] NULL, 
	[CLAIMANT_EID] [INT] NULL, 
	[EVENT_ID] [INT] NULL, 
	[CLAIM_ID] [INT] NULL, 
	[EMPLOYEE_EID] [INT] NULL, 
	[UNIT_ID] [INT] NULL, 
	[ENTITY_ID] [INT] NULL, 
	[DEFENDANT_ROW_ID] [INT] NULL, 
	[PI_ROW_ID] [INT] NULL, 
	[PI_PROC_ROW_ID] [INT] NULL, 
	[PATIENT_ID] [INT] NULL, 
	[TRANS_ID] [INT] NULL, 
	[PLAN_ID] [INT] NULL, 
	[EV_MW_TEST_ROW_ID] [INT] NULL, --MKAUR24 MEDWATCH
	[EV_CONCOM_ROW_ID] [INT] NULL,	--MKAUR24 MEDWATCH
	[MODULE_NAME] [VARCHAR] (100) NULL, 
	[USER_FIELD_A] [VARCHAR] (MAX) NULL, 
	[USER_FIELD_B] [VARCHAR] (255) NULL, 
	[USER_FIELD_C] [VARCHAR] (255) NULL, 
	[USER_FIELD_D] [VARCHAR] (255) NULL, 
	[USER_FIELD_E] [VARCHAR] (255) NULL, 
	[USER_FIELD_F] [VARCHAR] (255) NULL, 
	[USER_FIELD_G] [VARCHAR] (255) NULL, 
	[USER_FIELD_H] [VARCHAR] (255) NULL, 
	[USER_FIELD_I] [VARCHAR] (255) NULL, 
	[USER_FIELD_J] [VARCHAR] (255) NULL, 
	[USER_FIELD_K] [VARCHAR] (255) NULL, 
	[USER_FIELD_L] [VARCHAR] (255) NULL, 
	[USER_FIELD_M] [VARCHAR] (255) NULL, 
	[USER_FIELD_N] [VARCHAR] (255) NULL, 
	[USER_FIELD_O] [VARCHAR] (255) NULL, 
	[USER_FIELD_P] [VARCHAR] (255) NULL, 
	[USER_FIELD_Q] [VARCHAR] (255) NULL, 
	[USER_FIELD_R] [VARCHAR] (255) NULL, 
	[USER_FIELD_S] [VARCHAR] (255) NULL, 
	[USER_FIELD_T] [VARCHAR] (255) NULL, 
	[USER_FIELD_U] [VARCHAR] (255) NULL, 
	[USER_FIELD_V] [VARCHAR] (255) NULL, 
	[USER_FIELD_W] [VARCHAR] (255) NULL, 
	[USER_FIELD_X] [VARCHAR] (255) NULL, 
	[USER_FIELD_Y] [VARCHAR] (255) NULL, 
	[USER_FIELD_Z] [VARCHAR] (255) NULL
)
 ON [PRIMARY]
END

IF OBJECT_ID('DDS_VALIDATE_CLAIM', 'P') IS NOT NULL
  DROP PROCEDURE DDS_VALIDATE_CLAIM;


IF OBJECT_ID('DDS_PROCESSORG_HIERARCHY', 'P') IS NOT NULL
  DROP PROCEDURE DDS_PROCESSORG_HIERARCHY;


IF OBJECT_ID('PROCESS_ENTITY', 'P') IS NOT NULL
    DROP PROCEDURE PROCESS_ENTITY;


IF OBJECT_ID('DDS_RESERVE_REBAL_SQL', 'P') IS NOT NULL
    DROP PROCEDURE DDS_RESERVE_REBAL_SQL;


IF OBJECT_ID('DDS_PROCESS_RSV_CUR_SQL', 'P') IS NOT NULL
    DROP PROCEDURE DDS_PROCESS_RSV_CUR_SQL;


IF OBJECT_ID('DDS_PROCESS_PAYMENTS', 'P') IS NOT NULL
    DROP PROCEDURE DDS_PROCESS_PAYMENTS;



IF OBJECT_ID('DA_DDS_EVENT_IMPORT', 'P') IS NOT NULL
    DROP PROCEDURE DA_DDS_EVENT_IMPORT;


IF TYPE_ID(N'tORG_HIERARCHY') IS NOT NULL
	DROP TYPE tORG_HIERARCHY


CREATE TYPE tORG_HIERARCHY AS TABLE(
IROWID INT NOT NULL PRIMARY KEY IDENTITY,
IJOBID INT,
IDAROWID INT,
VDEPARTMENT VARCHAR(25),
VLOCATION VARCHAR(25),
VDIVISION VARCHAR(25),
VCOMPANY VARCHAR(25),
VDEPARTMENT_DESC VARCHAR(255),
VLOCATION_DESC VARCHAR(255),
VDIVISION_DESC VARCHAR(255),
VCOMPANY_DESC VARCHAR(255)
)


IF TYPE_ID(N'tENTITY') IS NOT NULL
	DROP TYPE tENTITY


CREATE TYPE tENTITY AS TABLE(
iRowId int NOT NULL PRIMARY KEY IDENTITY,
vLastName varchar(255),
vFirstName varchar(255),
vMiddleName varchar(255),
vAbbr varchar(25),
vTaxId varchar(20),
vAddr1 varchar(100),
vAddr2 varchar(100),
vCity varchar(50),
vCountry int DEFAULT 0,
vState int DEFAULT 0,
vCounty varchar(30),
vZip varchar(10),
vPhone1 varchar(30),
vPhone2 varchar(30),
vFaxNumber varchar(30),
vBirthDate varchar(8),
vSexCode int DEFAULT 0,
vComment nvarchar(max),
iParentEid int DEFAULT 0,
vTableName varchar(30),
iRpt1099Flag int DEFAULT 0,
iPrefixCodeId int DEFAULT 0,
iSuffixCodeId int DEFAULT 0,
vSuffixLegal varchar(50),
iNameType int DEFAULT 0,
vEmpNum varchar(20),
iJobId int,
iDaRowId int
)
--MKAUR24 MEDWATCH START 
IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME = 'DDS_MEDWATCH')
BEGIN
CREATE TABLE [dbo].[DDS_MEDWATCH](
[JOBID] [int] NOT NULL,
[DA_ROW_ID] [int] NOT NULL,
[INVALID_ROW] [int] NULL,
[UPDATE_ROW] [int] NULL,
[INPUT_ROW_ID] [int] NULL,
[EVENT_NUMBER] [nvarchar](25) NULL,
[UNIT_CODE] [nvarchar](25) NULL,
[DATE_RPTD_FDA] [nvarchar](8) NULL,
[DATE_RPTD_MFG] [nvarchar](8) NULL,
[RPTD_BY_LAST_NAME] [nvarchar](255) NULL,
[RPTD_BY_FIRST_NAME] [nvarchar](255) NULL,
[RPTD_BY_ADDR1] [nvarchar](100) NULL,
[RPTD_BY_ADDR2] [nvarchar](100) NULL,
[RPTD_BY_CITY] [nvarchar](50) NULL,
[RPTD_BY_STATE] [nvarchar](4) NULL,
[RPTD_BY_ZIP_CODE] [nvarchar](10) NULL,
[RPTD_BY_TAX_ID] [nvarchar](20) NULL,
[RPTD_BY_PRO_FLAG] [nvarchar](1) NULL,
[RPTD_BY_POS_CODE] [nvarchar](25) NULL,
[RELEVANT_HISTORY] [nvarchar](max) NULL,
[LAST_REPORT_DATE] [nvarchar](8) NULL,
[REPORT_YEAR] [int] NULL,
[REPORT_SERIAL_NO] [int] NULL,
[ADVERSE_EVENT_FLAG] [nvarchar](1) NULL,
[PRODUCT_PROB_FLAG] [nvarchar](1) NULL,
[LIFE_THREAT_FLAG] [nvarchar](1) NULL,
[HOSPITALIZ_FLAG] [nvarchar](1) NULL,
[DISABILITY_FLAG] [nvarchar](1) NULL,
[CONGENITAL_FLAG] [nvarchar](1) NULL,
[REQD_INTERV_FLAG] [nvarchar](1) NULL,
[FOLLOW_UP_COUNT] [int] NULL,
[RPT_MANDATORY] [nvarchar](1) NULL,
[MED_TYPE] [nvarchar](25) NULL,
[MED_NAME] [nvarchar](25) NULL,
[DOSE] [nvarchar](25) NULL,
[FREQUENCY] [nvarchar](25) NULL,
[ROUTE] [nvarchar](25) NULL,
[THERAPY_FROM_DATE] [nvarchar](8) NULL,
[THERAPY_TO_DATE] [nvarchar](8) NULL,
[DURATION] [int] NULL,
[LOT_NUMBER] [nvarchar](15) NULL,
[NDC_NUMBER] [int] NULL,
[EXPIRATION_DATE] [nvarchar](8) NULL,
[EVENT_ABATED] [nvarchar](1) NULL,
[EVENT_REAPPEARED] [nvarchar](1) NULL,
[DIAGNOSIS_TEST] [nvarchar](25) NULL,
[BRAND_NAME] [nvarchar](25) NULL,
[EQUIP_TYPE_CODE] [nvarchar](25) NULL,
[MANUF_NAME] [nvarchar](255) NULL,
[MANUF_ADDR1] [nvarchar](100) NULL,
[MANUF_ADDR2] [nvarchar](100) NULL,
[MANUF_CITY] [nvarchar](50) NULL,
[MANUF_STATE] [nvarchar](4) NULL,
[MANUF_ZIP_CODE] [nvarchar](10) NULL,
[MODEL_NUMBER] [nvarchar](15) NULL,
[CATALOG_NUMBER] [nvarchar](15) NULL,
[SERIAL_NUMBER] [nvarchar](15) NULL,
[OTHER_NUMBER] [nvarchar](15) NULL,
[DEVICE_OPER_CODE] [nvarchar](25) NULL,
[IMPLANT_DATE] [nvarchar](8) NULL,
[EXPLANT_DATE] [nvarchar](8) NULL,
[AGE_OF_DEVICE] [nvarchar](12) NULL,
[DEV_AVAIL_FOR_EVAL] [nvarchar](1) NULL,
[DEVICE_RETURN_DATE] [nvarchar](8) NULL,
[EQ_LOT_NUMBER] [nvarchar](15) NULL,
[EQ_EXPIRATION_DATE] [nvarchar](8) NULL,
[TEST_LAB_TEST_1] [nvarchar](max) NULL,
[TEST_LAB_TEST_2] [nvarchar](max) NULL,
[TEST_LAB_TEST_3] [nvarchar](max) NULL,
[TEST_LAB_TEST_4] [nvarchar](max) NULL,
[TEST_LAB_TEST_5] [nvarchar](max) NULL,
[TEST_RESULT_1] [nvarchar](max) NULL,
[TEST_RESULT_2] [nvarchar](max) NULL,
[TEST_RESULT_3] [nvarchar](max) NULL,
[TEST_RESULT_4] [nvarchar](max) NULL,
[TEST_RESULT_5] [nvarchar](max) NULL,
[TEST_DATE_1] [nvarchar](8) NULL,
[TEST_DATE_2] [nvarchar](8) NULL,
[TEST_DATE_3] [nvarchar](8) NULL,
[TEST_DATE_4] [nvarchar](8) NULL,
[TEST_DATE_5] [nvarchar](8) NULL,
[CONCOM_PRODUCT_ID_1] [int] NULL,
[CONCOM_PRODUCT_ID_2] [int] NULL,
[CONCOM_PRODUCT_ID_3] [int] NULL,
[CONCOM_PRODUCT_ID_4] [int] NULL,				
[CONCOM_PRODUCT_ID_5] [int] NULL,
[CONCOM_PRODUCT_ID_6] [int] NULL,
[CONCOM_FROM_DATE_1] [nvarchar](8) NULL,
[CONCOM_FROM_DATE_2] [nvarchar](8) NULL,
[CONCOM_FROM_DATE_3] [nvarchar](8) NULL,
[CONCOM_FROM_DATE_4] [nvarchar](8) NULL,
[CONCOM_FROM_DATE_5] [nvarchar](8) NULL,
[CONCOM_FROM_DATE_6] [nvarchar](8) NULL,
[CONCOM_TO_DATE_1] [nvarchar](8) NULL,
[CONCOM_TO_DATE_2] [nvarchar](8) NULL,
[CONCOM_TO_DATE_3] [nvarchar](8) NULL,
[CONCOM_TO_DATE_4] [nvarchar](8) NULL,
[CONCOM_TO_DATE_5] [nvarchar](8) NULL,
[CONCOM_TO_DATE_6] [nvarchar](8) NULL,
[CONCOM_PRODUCT_1] [nvarchar](40) NULL,
[CONCOM_PRODUCT_2] [nvarchar](40) NULL,
[CONCOM_PRODUCT_3] [nvarchar](40) NULL,
[CONCOM_PRODUCT_4] [nvarchar](40) NULL,
[CONCOM_PRODUCT_5] [nvarchar](40) NULL,
[CONCOM_PRODUCT_6] [nvarchar](40) NULL,
[USER_FIELD_A] [nvarchar](max) NULL,
[USER_FIELD_B] [nvarchar](255) NULL,
[USER_FIELD_C] [nvarchar](255) NULL,
[USER_FIELD_D] [nvarchar](255) NULL,
[USER_FIELD_E] [nvarchar](255) NULL,
[USER_FIELD_F] [nvarchar](255) NULL,
[USER_FIELD_G] [nvarchar](255) NULL,
[USER_FIELD_H] [nvarchar](255) NULL,
[USER_FIELD_I] [nvarchar](255) NULL,
[USER_FIELD_J] [nvarchar](255) NULL,
[USER_FIELD_K] [nvarchar](255) NULL,
[USER_FIELD_L] [nvarchar](255) NULL,
[USER_FIELD_M] [nvarchar](255) NULL,
[USER_FIELD_N] [nvarchar](255) NULL,
[USER_FIELD_O] [nvarchar](255) NULL,
[USER_FIELD_P] [nvarchar](255) NULL,
[USER_FIELD_Q] [nvarchar](255) NULL,
[USER_FIELD_R] [nvarchar](255) NULL,
[USER_FIELD_S] [nvarchar](255) NULL,
[USER_FIELD_T] [nvarchar](255) NULL,
[USER_FIELD_U] [nvarchar](255) NULL,
[USER_FIELD_V] [nvarchar](255) NULL,
[USER_FIELD_W] [nvarchar](255) NULL,
[USER_FIELD_X] [nvarchar](255) NULL,
[USER_FIELD_Y] [nvarchar](255) NULL,
[NAME_TYPE] [nvarchar](25) NULL,
[RPTD_BY_BIRTH_DT] [nvarchar](8) NULL,
[MANUF_BIRTH_DT] [nvarchar](8) NULL,
CONSTRAINT [DDS_MEDWATCH_PK] PRIMARY KEY CLUSTERED 
(	DA_ROW_ID ASC,
JOBID ASC

)WITH 
(PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  
= ON ) 
ON [PRIMARY]
) 
END

IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DDS_MEDWATCH_USR_SUPP_MAP') 
BEGIN
CREATE TABLE [dbo].[DDS_MEDWATCH_USR_SUPP_MAP](
      [OPTIONSET_ID] [int] NULL,
      [CONFIG_ID] [int] NULL,
      [USER_ID] [int] NULL,
      [FIELD_NUM] [varchar](10) NULL,
      [USER_FIELD_NAME] [varchar](25) NULL,
      [MAP_FLAG] [varchar](10) NULL,
      [FIELD_TYPE] [varchar](25) NULL,
      [MAPPED_TABLE] [varchar](50) NOT NULL,
      [MAPPED_FIELD] [varchar](50) NOT NULL,
      [NULL_FLAG] [varchar](10) NULL,
      [VALIDATE_FLAG] [varchar](10) NULL,
      [CODE_TABLE_ID] [varchar](10) NULL
) ON [PRIMARY]
END
--MAKUR24 MEDWATCH END


--DSHARMA70 SHORT TERM DISABILITY STARTS
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DDS_STD_PLAN]') AND type in (N'U'))
DROP TABLE [dbo].[DDS_STD_PLAN]


CREATE TABLE [dbo].[DDS_STD_PLAN](
	[DA_ROW_ID] [int] NOT NULL,
	[JOBID] [int] NOT NULL,
	[INVALID_ROW] [int] NULL,
	[PLAN_NUMBER] [varchar](20) NULL,
	[PLAN_NAME] [varchar](20) NULL,
	[PLAN_DESCRIPTION] [varchar](50) NULL,
	[PLAN_STATUS] [varchar](25) NULL,
	[PREMIUM] DECIMAL(20,2) NULL,
	[BANK_ACCOUNT_NUM] [varchar](20) NULL,
	[EFFECTIVE_DATE] [varchar](8) NULL,
	[EXPIRATION_DATE] [varchar](8) NULL,
	[ISSUE_DATE] [varchar](8) NULL,
	[REVIEW_DATE] [varchar](8) NULL,
	[RENEWAL_DATE] [varchar](8) NULL,
	[CANCEL_DATE] [varchar](8) NULL,
	[PREF_DAY_PAY_TYPE] [varchar](25) NULL,
	[PREF_PAY_SCHEDULE_TYPE] [varchar](25) NULL,
	[COMMENTS] [varchar](255) NULL,
	[START_PAY_PERIOD] [varchar](8) NULL,
	[PRINT_BEFORE_END_FLAG] [varchar](1) NULL,
	[BANK_SUB_ACCNT_NUM] [varchar](20) NULL,
	[INSURED_EID] [varchar](207) NULL,
	[INSURED_HIER_LEVEL] [varchar](15) NULL,
	[USER_FIELD_A] [varchar](max) NULL,
	[USER_FIELD_B] [varchar](255) NULL,
	[USER_FIELD_C] [varchar](255) NULL,
	[USER_FIELD_D] [varchar](255) NULL,
	[USER_FIELD_E] [varchar](255) NULL,
	[USER_FIELD_F] [varchar](255) NULL,
	[USER_FIELD_G] [varchar](255) NULL,
	[USER_FIELD_H] [varchar](255) NULL,
	[USER_FIELD_I] [varchar](255) NULL,
	[USER_FIELD_J] [varchar](255) NULL,
	[USER_FIELD_K] [varchar](255) NULL,
	[USER_FIELD_L] [varchar](255) NULL,
	[USER_FIELD_M] [varchar](255) NULL,
	[USER_FIELD_N] [varchar](255) NULL,
	[USER_FIELD_O] [varchar](255) NULL,
	[USER_FIELD_P] [varchar](255) NULL,
	[USER_FIELD_Q] [varchar](255) NULL,
	[USER_FIELD_R] [varchar](255) NULL,
	[USER_FIELD_S] [varchar](255) NULL,
	[USER_FIELD_T] [varchar](255) NULL,
	[USER_FIELD_U] [varchar](255) NULL,
	[USER_FIELD_V] [varchar](255) NULL,
	[USER_FIELD_W] [varchar](255) NULL,
	[USER_FIELD_X] [varchar](255) NULL,
	[USER_FIELD_Y] [varchar](255) NULL,
 CONSTRAINT [PK_DDS_STD_PLAN] PRIMARY KEY CLUSTERED 
(
	[DA_ROW_ID] ASC,
	[JOBID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

SET ANSI_PADDING OFF

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DDS_STD_CLASS]') AND type in (N'U'))
DROP TABLE [dbo].[DDS_STD_CLASS]


CREATE TABLE [dbo].[DDS_STD_CLASS](
	DA_ROW_ID INT NOT NULL,
	JOBID INT NOT NULL,
	INVALID_ROW INT,	
	CLASS_NAME VARCHAR(20),
	CLASS_DESC VARCHAR(50),
	PLAN_NUMBER VARCHAR(20),
	ELIG_BENE_PRD INT,
	BENE_PRD_TYPE VARCHAR(25),
	BENE_FROM_DT_TYPE VARCHAR(25),
	DIS_WAIT_PRD INT,
	DIS_CLNDR_WRK_TYPE VARCHAR(25),
	DIS_PRD_TYPE VARCHAR(25),
	DIS_MAX_PRD INT,
	DIS_MAX_PRD_TYPE VARCHAR(25),
	FROM_DIS_PRD_TYPE VARCHAR(25),
	ALLOW_EXT VARCHAR(1),
	EXTEND_PRD INT,
	EXTEND_PRD_TYPE VARCHAR(25),
	MAX_TOT_DIS_PRD INT,
	MAX_TOT_PRD_TYPE VARCHAR(25),
	ACTUAL_WORK_WEEK_FLAG VARCHAR(1),
	DAY7_WORK_WEEK_FLAG VARCHAR(1),
	DAY5_WORK_WEEK_FLAG VARCHAR(1),
	OTHER_WORK_WEEK_FLAG VARCHAR(1),
	OTHER_DAYS INT,
	BENE_PRCTG_FLAG VARCHAR(1),
	BENE_PER_AMT DECIMAL(20,2),
	BENE_FLAT_AMT_FLAG VARCHAR(1),
	BENE_FLAT_AMT DECIMAL(20,2),
	BENE_TD_FLAG VARCHAR(1),
	BENE_BASED_TYPE VARCHAR(25),
	WITHHOLD_FED_ITAX_FLAG VARCHAR(1),
	WITHHOLD_FICA_FLAG VARCHAR(1),
	WEEKLY_BENE_CAP DECIMAL(20,2),
	MAX_BEN_PER_CLAIM DECIMAL(20,2),
	MAX_BEN_PER_CAL_YR DECIMAL(20,2),
	WAGE_FOR_DIS_PRD DECIMAL(20,2),
	WAGE_FOR_CAL_YR  DECIMAL(20,2),
	TAXABLE_PERCENT  DECIMAL(20,2),
	WITHHOLD_MEDICARE_FLAG VARCHAR(1),
	WITHHOLD_STATE_FLAG VARCHAR(1),
	USE_VOUCHERS_FLAG VARCHAR(1),
	ALT_WAIT_DIS_TYPE VARCHAR(207),
	ALT_WAIT_DIS_TYPE_1 VARCHAR(25),
	ALT_WAIT_DIS_TYPE_2 VARCHAR(25),
	ALT_WAIT_DIS_TYPE_3 VARCHAR(25),
	ALT_WAIT_DIS_TYPE_4 VARCHAR(25),
	ALT_WAIT_DIS_TYPE_5 VARCHAR(25),
	ALT_WAIT_DIS_TYPE_6 VARCHAR(25),
	ALT_WAIT_DIS_TYPE_7 VARCHAR(25),
	ALT_WAIT_DIS_TYPE_8 VARCHAR(25),
	ALT_WAIT_DIS_PRD VARCHAR(39),
	ALT_WAIT_DIS_PRD_VAL_1 INT,
	ALT_WAIT_DIS_PRD_VAL_2 INT,
	ALT_WAIT_DIS_PRD_VAL_3 INT,
	ALT_WAIT_DIS_PRD_VAL_4 INT,
	ALT_WAIT_DIS_PRD_VAL_5 INT,
	ALT_WAIT_DIS_PRD_VAL_6 INT,
	ALT_WAIT_DIS_PRD_VAL_7 INT,
	ALT_WAIT_DIS_PRD_VAL_8 INT,
	ALT_WAIT_DIS_CLNDR_WRK_TYPE VARCHAR(207),
	ALT_WAIT_DIS_CLNDR_WRK_TYPE_1 VARCHAR(25),
	ALT_WAIT_DIS_CLNDR_WRK_TYPE_2 VARCHAR(25),
	ALT_WAIT_DIS_CLNDR_WRK_TYPE_3 VARCHAR(25),
	ALT_WAIT_DIS_CLNDR_WRK_TYPE_4 VARCHAR(25),
	ALT_WAIT_DIS_CLNDR_WRK_TYPE_5 VARCHAR(25),
	ALT_WAIT_DIS_CLNDR_WRK_TYPE_6 VARCHAR(25),
	ALT_WAIT_DIS_CLNDR_WRK_TYPE_7 VARCHAR(25),
	ALT_WAIT_DIS_CLNDR_WRK_TYPE_8 VARCHAR(25),
	ALT_WAIT_DIS_PRD_TYPE VARCHAR(207),
	ALT_WAIT_DIS_PRD_TYPE_1 VARCHAR(25),
	ALT_WAIT_DIS_PRD_TYPE_2 VARCHAR(25),
	ALT_WAIT_DIS_PRD_TYPE_3 VARCHAR(25),
	ALT_WAIT_DIS_PRD_TYPE_4 VARCHAR(25),
	ALT_WAIT_DIS_PRD_TYPE_5 VARCHAR(25),
	ALT_WAIT_DIS_PRD_TYPE_6 VARCHAR(25),
	ALT_WAIT_DIS_PRD_TYPE_7 VARCHAR(25),
	ALT_WAIT_DIS_PRD_TYPE_8 VARCHAR(25),
	WAGES_FROM VARCHAR(175),
	WAGES_FROM_1 DECIMAL(20,2),
	WAGES_FROM_2 DECIMAL(20,2),
	WAGES_FROM_3 DECIMAL(20,2),
	WAGES_FROM_4 DECIMAL(20,2),
	WAGES_FROM_5 DECIMAL(20,2),
	WAGES_FROM_6 DECIMAL(20,2),
	WAGES_FROM_7 DECIMAL(20,2),
	WAGES_FROM_8 DECIMAL(20,2),
	WAGES_TO VARCHAR(175),
	WAGES_TO_1 DECIMAL(20,2),
	WAGES_TO_2 DECIMAL(20,2),
	WAGES_TO_3 DECIMAL(20,2),
	WAGES_TO_4 DECIMAL(20,2),
	WAGES_TO_5 DECIMAL(20,2),
	WAGES_TO_6 DECIMAL(20,2),
	WAGES_TO_7 DECIMAL(20,2),
	WAGES_TO_8 DECIMAL(20,2),
	WEEKLY_BENEFIT VARCHAR(175),
	WEEKLY_BENEFIT_1 DECIMAL(20,2),
	WEEKLY_BENEFIT_2 DECIMAL(20,2),
	WEEKLY_BENEFIT_3 DECIMAL(20,2),
	WEEKLY_BENEFIT_4 DECIMAL(20,2),
	WEEKLY_BENEFIT_5 DECIMAL(20,2),
	WEEKLY_BENEFIT_6 DECIMAL(20,2),
	WEEKLY_BENEFIT_7 DECIMAL(20,2),
	WEEKLY_BENEFIT_8 DECIMAL(20,2),
	DAY30_WORK_MONTH_FLAG VARCHAR(1),
	ACTUAL_MONTH_FLAG VARCHAR(1),
	UPPER_AGE_LIMIT INT,
	LOWER_AGE_LIMIT INT,
	SUPP_PERCENT DECIMAL(20,2),
	SUPP_FLAT_AMT DECIMAL(20,2),
	SUPP_BANK_ACC_NAME VARCHAR(50),
	SUPP_SUB_ACC_NAME VARCHAR(50),
	SUPP_TR_TYPE_CODE VARCHAR(25),
	SUPP_SEP_PAY_FLAG VARCHAR(1),
	PENSION_AMT DECIMAL(20,2),
	SS_AMT DECIMAL(20,2),
	OTHER_AMT DECIMAL(20,2),
	PRORATE_OFF_FLAG VARCHAR(1),
	FULLPAY_ONLY_FLAG VARCHAR(1),
	CONSTRAINT [PK_DDS_STD_CLASS] PRIMARY KEY CLUSTERED 
(
	[DA_ROW_ID] ASC,
	[JOBID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

SET ANSI_PADDING OFF

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DDS_STD_PLAN_USR_SUPP_MAP]') AND type in (N'U'))
DROP TABLE [dbo].[DDS_STD_PLAN_USR_SUPP_MAP]


IF NOT EXISTS (SELECT name FROM sys.tables WHERE name = 'DDS_STD_PLAN_USR_SUPP_MAP') 
BEGIN
CREATE TABLE [dbo].[DDS_STD_PLAN_USR_SUPP_MAP](
    [OPTIONSET_ID] [int] NULL,
      [CONFIG_ID] [int] NULL,
      [USER_ID] [int] NULL,
      [FIELD_NUM] [varchar](10) NULL,
      [USER_FIELD_NAME] [varchar](25) NULL,
      [MAP_FLAG] [varchar](10) NULL,
      [FIELD_TYPE] [varchar](25) NULL,
      [MAPPED_TABLE] [varchar](50) NOT NULL,
      [MAPPED_FIELD] [varchar](50) NOT NULL,
      [NULL_FLAG] [varchar](10) NULL,
      [VALIDATE_FLAG] [varchar](10) NULL,
      [CODE_TABLE_ID] [varchar](10) NULL
) ON [PRIMARY]

END
--DSHARMA70 SHORT TERM DISABILITY END

IF EXISTS (SELECT * FROM SYS.OBJECTS WHERE OBJECT_ID = OBJECT_ID(N'[DBO].[DDS_ENHANCEDNOTES]') AND TYPE IN (N'U'))
DROP TABLE [DBO].[DDS_ENHANCEDNOTES]


IF NOT EXISTS (SELECT NAME FROM SYS.TABLES WHERE NAME = 'DDS_ENHANCEDNOTES')
BEGIN

CREATE TABLE DDS_ENHANCEDNOTES(
	DA_ROW_ID INT NOT NULL,
	JOBID INT NOT NULL,
	INVALID_ROW INT,
	ID VARCHAR(25),
	CLAIM_OR_EVENT VARCHAR(1),
	NOTE_TYPE VARCHAR(25),
	USER_TYPE VARCHAR(25),
	NOTE_MEMO VARCHAR(MAX),
	ENTERED_BY VARCHAR(50),
	DATE_ENTERED VARCHAR(12),
	DATE_CREATED VARCHAR(12),
	TIME_CREATED VARCHAR(12),
	ENTERED_BY_NAME VARCHAR(50),
	CLAIMANT_LASTNAME VARCHAR(255),
	CLAIMANT_FIRSTNAME VARCHAR(255),
	CLAIMANT_SSN VARCHAR(20),
	ABBREVIATION VARCHAR(25)
	CONSTRAINT PK_DDS_ENHANCEDNOTES PRIMARY KEY CLUSTERED 
	(
	JOBID ASC,
	DA_ROW_ID ASC
	)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON)
	) ON [PRIMARY]
END

IF NOT EXISTS (SELECT name from sys.tables WHERE name ='TEMP_JOBS_DOCUMENT')
BEGIN
     CREATE TABLE [dbo].[TEMP_JOBS_DOCUMENT](
                [TM_FILE_ID] [int] NOT NULL,
                [JOB_ID] [int] NOT NULL,
                [FILE_NAME] [varchar](255) NULL,
                [FILE_DATA] [varbinary](max) NULL,
                [CONTENT_TYPE] [varchar](50) NULL,
                [CONTENT_LENGTH] [int] NULL,
                [OPTIONSET_ID] [int] NULL
) ON [PRIMARY]

END
END